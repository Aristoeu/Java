package datastructures.disjointsets;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode1.rank = (byte) 100;
        serializableNode1.rank = (short) 10;
        org.junit.Assert.assertNotNull(serializableNode2);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc> constantDescNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc>((java.lang.constant.ConstantDesc) 10.0d);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass3 = serializableNode2.getClass();
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) 10.0d);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        java.lang.Class<?> wildcardClass17 = serializableNode10.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        serializableNode1.data = (-1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.rank = (byte) 0;
        int int14 = serializableNode9.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        java.lang.Class<?> wildcardClass19 = serializableNode5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        java.io.Serializable serializable8 = serializableNode7.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        serializableNode10.data = (byte) 0;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        java.io.Serializable serializable7 = serializableNode5.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        java.lang.Class<?> wildcardClass7 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        int int9 = serializableNode8.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) 100L);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        int int6 = serializableNode1.rank;
        int int7 = serializableNode1.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 97 + "'", int6 == 97);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 97 + "'", int7 == 97);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        serializableNode1.rank = (short) 1;
        java.lang.Class<?> wildcardClass12 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        int int17 = serializableNode5.rank;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        serializableNode5.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode5.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode30);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        int int18 = serializableNode8.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        int int21 = serializableNode6.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        int int7 = serializableNode3.rank;
        java.lang.Class<?> wildcardClass8 = serializableNode3.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        serializableNode9.rank = (byte) 1;
        serializableNode9.data = 10.0d;
        java.lang.Class<?> wildcardClass17 = serializableNode9.getClass();
        serializableNode5.data = wildcardClass17;
        serializableNode5.rank = (short) 1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        java.lang.Class<?> wildcardClass13 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        serializableNode6.rank = 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Comparable<java.lang.String>> strComparableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Comparable<java.lang.String>>((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        java.io.Serializable serializable3 = serializableNode1.data;
        java.io.Serializable serializable4 = serializableNode1.data;
        java.io.Serializable serializable5 = serializableNode1.data;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertEquals("'" + serializable3 + "' != '" + 10L + "'", serializable3, 10L);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) false);
        serializableNode1.data = 100;
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) (short) 10);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        java.io.Serializable serializable0 = null;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable0);
        serializableNode1.data = (byte) -1;
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        java.io.Serializable serializable9 = serializableNode8.data;
        serializableNode8.rank = ' ';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = null;
        serializableNode1.parent = serializableNode6;
        serializableNode1.rank = (short) -1;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        int int8 = serializableNode7.rank;
        serializableNode7.rank = 1;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        java.io.Serializable serializable7 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode9.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        java.io.Serializable serializable22 = serializableNode21.data;
        int int23 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode14.parent = serializableNode27;
        serializableNode14.data = 10.0d;
        serializableNode1.parent = serializableNode14;
        int int32 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        java.io.Serializable serializable12 = null;
        serializableNode11.data = serializable12;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        int int9 = serializableNode8.rank;
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        int int15 = serializableNode14.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        java.io.Serializable serializable7 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode9.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        java.io.Serializable serializable22 = serializableNode21.data;
        int int23 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode14.parent = serializableNode27;
        serializableNode14.data = 10.0d;
        serializableNode1.parent = serializableNode14;
        java.io.Serializable serializable32 = serializableNode14.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10.0d + "'", serializable32, 10.0d);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        int int10 = serializableNode1.rank;
        serializableNode1.data = 0.0d;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        serializableNode5.rank = 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        java.lang.Class<?> wildcardClass20 = serializable19.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable19);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializable19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        int int9 = serializableNode8.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode0 = null;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode1 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode0);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        java.io.Serializable serializable14 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        int int16 = serializableNode1.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializable14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        java.lang.Class<?> wildcardClass11 = serializableNode6.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        java.io.Serializable serializable16 = serializableNode6.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        java.lang.Class<?> wildcardClass7 = serializableNodeNode6.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        java.io.Serializable serializable17 = serializableNode14.data;
        java.io.Serializable serializable18 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.lang.Class<?> wildcardClass25 = serializableNode24.getClass();
        serializableNode14.data = wildcardClass25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode14.parent;
        serializableNode5.parent = serializableNode14;
        java.lang.Class<?> wildcardClass29 = serializableNode5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        int int6 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass7 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 97 + "'", int6 == 97);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        int int20 = serializableNode10.rank;
        serializableNode10.rank = (byte) 10;
        java.lang.Class<?> wildcardClass23 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass23);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        serializableNode6.data = 10.0d;
        java.io.Serializable serializable23 = serializableNode6.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10.0d + "'", serializable23, 10.0d);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        serializableNode5.rank = '#';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode14.parent = serializableNode18;
        serializableNode12.parent = serializableNode14;
        int int21 = serializableNode12.rank;
        serializableNode1.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        serializableNode12.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        java.lang.Class<?> wildcardClass31 = serializableNode30.getClass();
        serializableNode12.data = wildcardClass31;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass31);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        java.lang.Class<?> wildcardClass20 = serializable19.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass20);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializable19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.data = (short) 100;
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        int int12 = serializableNode11.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 10.0f;
        serializableNode1.rank = ' ';
        org.junit.Assert.assertNotNull(serializableNode2);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        serializableNode1.data = 10L;
        serializableNode1.data = "";
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        serializableNode9.rank = (byte) 1;
        serializableNode9.data = 10.0d;
        java.lang.Class<?> wildcardClass17 = serializableNode9.getClass();
        serializableNode5.data = wildcardClass17;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass17);
        java.lang.Class<?> wildcardClass20 = genericDeclarationNode19.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        int int9 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = null;
        serializableNode1.parent = serializableNode6;
        java.io.Serializable serializable8 = serializableNode1.data;
        serializableNode1.rank = '#';
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        java.io.Serializable serializable18 = serializableNode8.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        java.io.Serializable serializable20 = serializableNode10.data;
        serializableNode10.rank = 'a';
        serializableNode10.rank = (short) 100;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + (short) 100 + "'", serializable20, (short) 100);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        serializableNode5.data = (byte) -1;
        java.io.Serializable serializable11 = serializableNode5.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + (byte) -1 + "'", serializable11, (byte) -1);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        java.lang.invoke.TypeDescriptor typeDescriptor0 = null;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor> typeDescriptorNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor>(typeDescriptor0);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable18);
        serializableNode19.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        java.io.Serializable serializable30 = serializableNode27.data;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.lang.Class<?> wildcardClass38 = serializableNode37.getClass();
        serializableNode27.data = wildcardClass38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode27.parent;
        serializableNode40.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode40.parent;
        serializableNode19.parent = serializableNode40;
        java.lang.Class<?> wildcardClass45 = serializableNode40.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        serializableNode1.rank = (short) 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode7);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        serializableNode10.rank = (short) 1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode10);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        serializableNode5.rank = (byte) 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode5.parent;
        int int21 = serializableNode5.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.String> strNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.String>("");
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        int int28 = serializableNode25.rank;
        java.io.Serializable serializable29 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode31.parent;
        serializableNode31.rank = (byte) 100;
        java.lang.Class<?> wildcardClass35 = serializableNode31.getClass();
        serializableNode25.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode25.parent;
        java.io.Serializable serializable38 = serializableNode25.data;
        serializableNode22.data = serializable38;
        serializableNode6.parent = serializableNode22;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10.0f + "'", serializable23, 10.0f);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializable38);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        java.io.Serializable serializable12 = serializableNode10.data;
        java.lang.Class<?> wildcardClass13 = serializable12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode1.parent = serializableNode14;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        int int25 = serializableNode22.rank;
        java.io.Serializable serializable26 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        serializableNode28.rank = (byte) 100;
        java.lang.Class<?> wildcardClass32 = serializableNode28.getClass();
        serializableNode22.data = wildcardClass32;
        serializableNode18.data = wildcardClass32;
        serializableNode18.rank = '#';
        serializableNode14.parent = serializableNode18;
        java.lang.Class<?> wildcardClass38 = serializableNode14.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode2.parent = serializableNode15;
        java.lang.Class<?> wildcardClass17 = serializableNode2.getClass();
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode15.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        serializableNode15.parent = serializableNode22;
        int int27 = serializableNode15.rank;
        java.io.Serializable serializable28 = serializableNode15.data;
        serializableNode9.parent = serializableNode15;
        serializableNode9.rank = (byte) 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode21);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        java.lang.Class<?> wildcardClass9 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        int int21 = serializableNode19.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.String> strNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.String>("hi!");
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        serializableNode1.rank = '4';
        serializableNode1.rank = (byte) 10;
        int int21 = serializableNode1.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        serializableNode5.rank = 0;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        int int17 = serializableNode5.rank;
        java.lang.Class<?> wildcardClass18 = serializableNode5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        int int19 = serializableNode6.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode14.parent = serializableNode18;
        serializableNode12.parent = serializableNode14;
        int int21 = serializableNode12.rank;
        serializableNode1.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        serializableNode12.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        java.lang.Class<?> wildcardClass31 = serializableNode30.getClass();
        serializableNode12.data = wildcardClass31;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type> typeNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type>((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass31);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        java.io.Serializable serializable17 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        serializableNode5.parent = serializableNode20;
        serializableNode20.rank = ' ';
        java.io.Serializable serializable25 = serializableNode20.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + (byte) 10 + "'", serializable21, (byte) 10);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + (byte) 10 + "'", serializable25, (byte) 10);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (-1);
        int int11 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        int int9 = serializableNode8.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "hi!");
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode5.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode16.parent = serializableNode21;
        int int25 = serializableNode16.rank;
        java.lang.Class<?> wildcardClass26 = serializableNode16.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        serializableNode1.data = wildcardClass26;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable18);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertNotNull(serializableNode20);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable34 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode33.parent;
        serializableNode31.parent = serializableNode35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        serializableNode38.rank = (byte) 1;
        java.lang.Class<?> wildcardClass44 = serializableNode38.getClass();
        serializableNode31.data = wildcardClass44;
        java.io.Serializable serializable46 = serializableNode31.data;
        serializableNode22.data = serializable46;
        int int48 = serializableNode22.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(serializable46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        int int18 = serializableNode6.rank;
        java.io.Serializable serializable19 = serializableNode6.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        serializableNode14.rank = (short) -1;
        serializableNode14.rank = (short) -1;
        java.io.Serializable serializable21 = serializableNode14.data;
        int int22 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode14.parent = serializableNode24;
        serializableNode1.parent = serializableNode14;
        int int27 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        int int25 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode23.parent = serializableNode27;
        serializableNode21.parent = serializableNode23;
        int int30 = serializableNode21.rank;
        serializableNode10.parent = serializableNode21;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        serializableNode33.rank = (byte) 1;
        serializableNode33.data = 10.0d;
        java.lang.Class<?> wildcardClass41 = serializableNode33.getClass();
        serializableNode21.data = wildcardClass41;
        serializableNode8.data = wildcardClass41;
        serializableNode8.data = 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        int int2 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass9 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor> typeDescriptorNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor>((java.lang.invoke.TypeDescriptor) wildcardClass9);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode9.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        java.io.Serializable serializable22 = serializableNode21.data;
        int int23 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode14.parent = serializableNode27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable37 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode36.parent;
        serializableNode34.parent = serializableNode38;
        int int40 = serializableNode38.rank;
        serializableNode38.data = (-1);
        int int43 = serializableNode38.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode45.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode45.parent;
        serializableNode45.rank = (byte) 10;
        serializableNode45.data = 10L;
        serializableNode38.parent = serializableNode45;
        serializableNode27.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable59 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode58.parent;
        java.io.Serializable serializable61 = serializableNode60.data;
        serializableNode60.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode60.parent;
        int int65 = serializableNode64.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = serializableNode64.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode66.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable70 = serializableNode69.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = serializableNode69.parent;
        int int72 = serializableNode69.rank;
        java.io.Serializable serializable73 = serializableNode69.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = serializableNode75.parent;
        serializableNode75.rank = (byte) 100;
        java.lang.Class<?> wildcardClass79 = serializableNode75.getClass();
        serializableNode69.data = wildcardClass79;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = serializableNode69.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass84 = serializableNode83.getClass();
        serializableNode81.data = wildcardClass84;
        serializableNode81.rank = (short) 100;
        serializableNode66.parent = serializableNode81;
        serializableNode45.parent = serializableNode81;
        serializableNode1.parent = serializableNode45;
        java.io.Serializable serializable91 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(serializableNode66);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertNotNull(serializableNode71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertNotNull(serializableNode76);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(serializableNode81);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertEquals("'" + serializable91 + "' != '" + 10L + "'", serializable91, 10L);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        java.io.Serializable serializable7 = serializableNode1.data;
        java.lang.Class<?> wildcardClass8 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass8);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        java.io.Serializable serializable7 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode9.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        java.io.Serializable serializable22 = serializableNode21.data;
        int int23 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode14.parent = serializableNode27;
        serializableNode14.data = 10.0d;
        serializableNode1.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode32.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        java.io.Serializable serializable27 = serializableNode24.data;
        java.io.Serializable serializable28 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.lang.Class<?> wildcardClass35 = serializableNode34.getClass();
        serializableNode24.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode24.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        serializableNode10.data = serializable38;
        serializableNode10.rank = (byte) 1;
        serializableNode10.rank = (short) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializable38);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        int int17 = serializableNode5.rank;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        serializableNode5.parent = serializableNode24;
        serializableNode24.rank = 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        int int25 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode23.parent = serializableNode27;
        serializableNode21.parent = serializableNode23;
        int int30 = serializableNode21.rank;
        serializableNode10.parent = serializableNode21;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        serializableNode33.rank = (byte) 1;
        serializableNode33.data = 10.0d;
        java.lang.Class<?> wildcardClass41 = serializableNode33.getClass();
        serializableNode21.data = wildcardClass41;
        serializableNode8.data = wildcardClass41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass41);
        java.lang.Class<?> wildcardClass45 = serializableNode44.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode13.parent = serializableNode17;
        serializableNode13.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        serializableNode22.data = (short) 100;
        serializableNode13.parent = serializableNode22;
        java.io.Serializable serializable28 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode30.parent;
        serializableNode22.parent = serializableNode31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        serializableNode11.parent = serializableNode33;
        serializableNode33.rank = 'a';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + (short) 100 + "'", serializable28, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode33);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode10.parent = serializableNode14;
        serializableNode10.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        serializableNode19.data = (short) 100;
        serializableNode10.parent = serializableNode19;
        java.io.Serializable serializable25 = serializableNode19.data;
        int int26 = serializableNode19.rank;
        serializableNode19.rank = 10;
        java.io.Serializable serializable29 = serializableNode19.data;
        java.lang.Class<?> wildcardClass30 = serializable29.getClass();
        serializableNode8.data = wildcardClass30;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + (short) 100 + "'", serializable25, (short) 100);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + (short) 100 + "'", serializable29, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode15 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        serializableNode17.rank = (short) -1;
        serializableNode17.rank = (short) -1;
        java.io.Serializable serializable24 = serializableNode17.data;
        int int25 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode17.parent = serializableNode27;
        java.lang.Class<?> wildcardClass29 = serializableNode27.getClass();
        serializableNode1.data = wildcardClass29;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode8.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        serializableNode12.rank = (byte) 10;
        int int20 = serializableNode12.rank;
        int int21 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode12.parent;
        serializableNode8.parent = serializableNode23;
        java.io.Serializable serializable25 = serializableNode23.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode6.rank = (byte) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode10.parent;
        serializableNode10.rank = (byte) 10;
        serializableNode10.data = 10L;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        int int23 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode21.parent = serializableNode25;
        serializableNode21.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        serializableNode30.data = (short) 100;
        serializableNode21.parent = serializableNode30;
        java.io.Serializable serializable36 = serializableNode30.data;
        int int37 = serializableNode30.rank;
        serializableNode30.rank = 10;
        java.io.Serializable serializable40 = serializableNode30.data;
        java.lang.Class<?> wildcardClass41 = serializable40.getClass();
        serializableNode10.data = serializable40;
        serializableNode10.rank = (short) 100;
        serializableNode6.parent = serializableNode10;
        java.io.Serializable serializable46 = serializableNode6.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + (short) 100 + "'", serializable36, (short) 100);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + (short) 100 + "'", serializable40, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        serializableNode1.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        int int11 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode10.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        java.io.Serializable serializable22 = serializableNode19.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + (short) -1 + "'", serializable22, (short) -1);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        serializableNode1.data = (byte) 0;
        serializableNode1.rank = 0;
        int int13 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        int int10 = serializableNode1.rank;
        int int11 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        java.lang.Class<?> wildcardClass9 = serializableNode8.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass9);
        int int11 = serializableNode10.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        int int8 = serializableNode5.rank;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode11.parent;
        serializableNode11.rank = (byte) 100;
        java.lang.Class<?> wildcardClass15 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode23.parent = serializableNode27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        serializableNode23.parent = serializableNode30;
        serializableNode5.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode5.parent;
        java.io.Serializable serializable37 = serializableNode36.data;
        serializableNode1.parent = serializableNode36;
        int int39 = serializableNode36.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass27 = serializableNode22.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode21.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        serializableNode21.parent = serializableNode28;
        int int33 = serializableNode21.rank;
        serializableNode21.rank = 100;
        serializableNode15.parent = serializableNode21;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable53 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        serializableNode50.parent = serializableNode54;
        int int56 = serializableNode54.rank;
        serializableNode44.parent = serializableNode54;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode59.parent;
        serializableNode44.parent = serializableNode59;
        serializableNode59.rank = (short) -1;
        serializableNode21.parent = serializableNode59;
        java.lang.Class<?> wildcardClass65 = serializableNode21.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        serializableNode3.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode3.parent;
        java.lang.Class<?> wildcardClass7 = serializableNode6.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode2.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode2.parent;
        serializableNode2.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode2.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode22.parent;
        serializableNode22.rank = (byte) 10;
        int int30 = serializableNode22.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        java.lang.Class<?> wildcardClass37 = serializableNode32.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass37);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass37);
        serializableNode22.data = wildcardClass37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable43 = serializableNode42.data;
        int int44 = serializableNode42.rank;
        serializableNode42.rank = 'a';
        java.lang.Class<?> wildcardClass47 = serializableNode42.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass47);
        serializableNode22.data = wildcardClass47;
        serializableNode20.data = wildcardClass47;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        java.io.Serializable serializable25 = serializableNode12.data;
        serializableNode10.data = serializable25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode10.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializable25);
        org.junit.Assert.assertNotNull(serializableNode27);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        int int32 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable35 = serializableNode34.data;
        int int36 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode34.parent = serializableNode38;
        serializableNode38.data = 0.0d;
        serializableNode29.parent = serializableNode38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode29.parent;
        serializableNode18.parent = serializableNode43;
        int int45 = serializableNode18.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        java.io.Serializable serializable17 = serializableNode8.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10.0d + "'", serializable17, 10.0d);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        serializableNode1.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(serializableNode13);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        serializableNode17.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode21.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        serializableNode17.parent = serializableNode30;
        serializableNode14.parent = serializableNode17;
        serializableNode17.rank = (byte) -1;
        serializableNode17.rank = 10;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode30);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode21.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        serializableNode21.parent = serializableNode28;
        int int33 = serializableNode21.rank;
        serializableNode21.rank = 100;
        serializableNode15.parent = serializableNode21;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable53 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        serializableNode50.parent = serializableNode54;
        int int56 = serializableNode54.rank;
        serializableNode44.parent = serializableNode54;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode59.parent;
        serializableNode44.parent = serializableNode59;
        serializableNode59.rank = (short) -1;
        serializableNode21.parent = serializableNode59;
        java.io.Serializable serializable65 = serializableNode21.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        serializableNode1.rank = (byte) 10;
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode10.parent;
        int int19 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        java.io.Serializable serializable28 = serializableNode25.data;
        java.io.Serializable serializable29 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode31.parent;
        java.lang.Class<?> wildcardClass36 = serializableNode35.getClass();
        serializableNode25.data = wildcardClass36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode25.parent;
        java.io.Serializable serializable39 = serializableNode38.data;
        serializableNode10.data = serializable39;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializable39);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        java.io.Serializable serializable3 = serializableNode1.data;
        serializableNode1.rank = 'a';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + serializable3 + "' != '" + 10L + "'", serializable3, 10L);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        serializableNode1.rank = '4';
        serializableNode1.rank = 0;
        serializableNode1.rank = 0;
        serializableNode1.rank = ' ';
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = null;
        serializableNode1.parent = serializableNode6;
        java.lang.Class<?> wildcardClass8 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode5.rank;
        serializableNode5.rank = 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable4 = serializableNode3.data;
        int int5 = serializableNode3.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode3.parent = serializableNode7;
        serializableNode3.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        serializableNode12.data = (short) 100;
        serializableNode3.parent = serializableNode12;
        java.io.Serializable serializable18 = serializableNode12.data;
        int int19 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        serializableNode22.rank = (short) -1;
        serializableNode22.rank = (short) -1;
        java.io.Serializable serializable29 = serializableNode22.data;
        int int30 = serializableNode22.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode22.parent;
        serializableNode20.parent = serializableNode31;
        java.lang.Class<?> wildcardClass33 = serializableNode20.getClass();
        serializableNode1.data = wildcardClass33;
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + (short) 100 + "'", serializable18, (short) 100);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        java.io.Serializable serializable10 = serializableNode9.data;
        int int11 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode19.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        serializableNode19.parent = serializableNode26;
        int int31 = serializableNode19.rank;
        java.io.Serializable serializable32 = serializableNode19.data;
        serializableNode13.parent = serializableNode19;
        serializableNode1.parent = serializableNode13;
        java.lang.Class<?> wildcardClass35 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc> constantDescNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc>((java.lang.constant.ConstantDesc) "hi!");
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        int int7 = serializableNode5.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        java.io.Serializable serializable29 = serializableNode28.data;
        int int30 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode31.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        serializableNode38.parent = serializableNode42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        serializableNode38.parent = serializableNode45;
        int int50 = serializableNode38.rank;
        java.io.Serializable serializable51 = serializableNode38.data;
        serializableNode32.parent = serializableNode38;
        serializableNode20.parent = serializableNode32;
        java.lang.Class<?> wildcardClass54 = serializableNode32.getClass();
        serializableNode8.data = wildcardClass54;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode14.parent = serializableNode18;
        serializableNode12.parent = serializableNode14;
        int int21 = serializableNode12.rank;
        serializableNode1.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        serializableNode12.parent = serializableNode24;
        java.io.Serializable serializable29 = serializableNode24.data;
        java.io.Serializable serializable30 = serializableNode24.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) false);
        java.lang.Class<?> wildcardClass2 = serializableNode1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        java.io.Serializable serializable5 = serializableNode1.data;
        int int6 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        serializableNode1.data = "";
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode31.parent;
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        serializableNode42.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode42.parent;
        serializableNode38.parent = serializableNode46;
        serializableNode1.parent = serializableNode38;
        serializableNode38.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode38.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(serializableNode51);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass11 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = null;
        serializableNode12.parent = serializableNode13;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        java.lang.Class<?> wildcardClass8 = serializable7.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode27.parent = serializableNode31;
        serializableNode25.parent = serializableNode27;
        int int34 = serializableNode25.rank;
        java.lang.Class<?> wildcardClass35 = serializableNode25.getClass();
        serializableNode13.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass35);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode17.parent = serializableNode30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        serializableNode37.parent = serializableNode41;
        int int43 = serializableNode41.rank;
        serializableNode41.data = (-1);
        int int46 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode48.parent;
        serializableNode48.rank = (byte) 10;
        serializableNode48.data = 10L;
        serializableNode41.parent = serializableNode48;
        serializableNode30.parent = serializableNode48;
        serializableNode10.parent = serializableNode30;
        java.io.Serializable serializable61 = null;
        serializableNode30.data = serializable61;
        java.io.Serializable serializable63 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int66 = serializableNode65.rank;
        int int67 = serializableNode65.rank;
        java.io.Serializable serializable68 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode65.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable72 = serializableNode71.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode71.parent;
        serializableNode69.parent = serializableNode73;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int77 = serializableNode76.rank;
        int int78 = serializableNode76.rank;
        java.io.Serializable serializable79 = serializableNode76.data;
        serializableNode69.parent = serializableNode76;
        int int81 = serializableNode69.rank;
        java.io.Serializable serializable82 = serializableNode69.data;
        java.lang.Class<?> wildcardClass83 = serializableNode69.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode84 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass83);
        serializableNode30.data = wildcardClass83;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNull(serializable63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertEquals("'" + serializable79 + "' != '" + 10L + "'", serializable79, 10L);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertEquals("'" + serializable82 + "' != '" + 10L + "'", serializable82, 10L);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode5.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        serializableNode1.parent = serializableNode10;
        int int15 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        int int24 = serializableNode21.rank;
        java.io.Serializable serializable25 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode27.rank = (byte) 100;
        java.lang.Class<?> wildcardClass31 = serializableNode27.getClass();
        serializableNode21.data = wildcardClass31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode21.parent;
        java.io.Serializable serializable34 = serializableNode21.data;
        serializableNode5.parent = serializableNode21;
        java.io.Serializable serializable36 = serializableNode21.data;
        serializableNode21.rank = (byte) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(serializable34);
        org.junit.Assert.assertNotNull(serializable36);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        int int16 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        serializableNode18.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        int int32 = serializableNode29.rank;
        java.io.Serializable serializable33 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode35.parent;
        serializableNode35.rank = (byte) 100;
        java.lang.Class<?> wildcardClass39 = serializableNode35.getClass();
        serializableNode29.data = wildcardClass39;
        serializableNode25.data = wildcardClass39;
        serializableNode18.data = wildcardClass39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        java.io.Serializable serializable49 = serializableNode48.data;
        int int50 = serializableNode48.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode48.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        serializableNode53.rank = (short) -1;
        serializableNode53.rank = (short) -1;
        java.io.Serializable serializable60 = serializableNode53.data;
        int int61 = serializableNode53.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode53.parent;
        serializableNode48.parent = serializableNode53;
        java.io.Serializable serializable64 = serializableNode48.data;
        serializableNode18.parent = serializableNode48;
        serializableNode6.parent = serializableNode18;
        java.lang.Class<?> wildcardClass67 = serializableNode6.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        serializableNode11.parent = serializableNode13;
        serializableNode6.parent = serializableNode13;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode17.parent = serializableNode30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        serializableNode37.parent = serializableNode41;
        int int43 = serializableNode41.rank;
        serializableNode41.data = (-1);
        int int46 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode48.parent;
        serializableNode48.rank = (byte) 10;
        serializableNode48.data = 10L;
        serializableNode41.parent = serializableNode48;
        serializableNode30.parent = serializableNode48;
        serializableNode10.parent = serializableNode30;
        java.io.Serializable serializable61 = serializableNode10.data;
        java.lang.Class<?> wildcardClass62 = serializableNode10.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        int int9 = serializableNode5.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int11 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        serializableNode13.rank = (short) -1;
        serializableNode13.rank = (short) -1;
        java.io.Serializable serializable20 = serializableNode13.data;
        serializableNode10.parent = serializableNode13;
        serializableNode7.parent = serializableNode13;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass10 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass10);
        java.lang.Class<?> wildcardClass12 = serializableNode11.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        serializableNode18.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        int int22 = serializableNode18.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode6.rank = (byte) 0;
        java.io.Serializable serializable9 = serializableNode6.data;
        serializableNode6.rank = (-1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) 10);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        serializableNode1.rank = (short) 10;
        int int5 = serializableNode1.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        serializableNode1.data = 100.0f;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode2.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode2.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        java.lang.Class<?> wildcardClass19 = serializableNode17.getClass();
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode29.data;
        int int32 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode34.parent;
        java.lang.Class<?> wildcardClass40 = serializableNode34.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass40);
        serializableNode29.data = wildcardClass40;
        int int43 = serializableNode29.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        serializableNode1.rank = (byte) 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int2 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass3 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass3);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = null;
        serializableNode4.parent = serializableNode5;
        serializableNode4.rank = (byte) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable5 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode4.parent;
        int int7 = serializableNode4.rank;
        java.io.Serializable serializable8 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode10.parent;
        serializableNode10.rank = (byte) 100;
        java.lang.Class<?> wildcardClass14 = serializableNode10.getClass();
        serializableNode4.data = wildcardClass14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode4.parent;
        java.io.Serializable serializable17 = serializableNode4.data;
        serializableNode1.data = serializable17;
        java.io.Serializable serializable19 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10.0f + "'", serializable2, 10.0f);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializable17);
        org.junit.Assert.assertNotNull(serializable19);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode21.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        serializableNode21.parent = serializableNode28;
        int int33 = serializableNode21.rank;
        serializableNode21.rank = 100;
        serializableNode15.parent = serializableNode21;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable53 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        serializableNode50.parent = serializableNode54;
        int int56 = serializableNode54.rank;
        serializableNode44.parent = serializableNode54;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode59.parent;
        serializableNode44.parent = serializableNode59;
        serializableNode59.rank = (short) -1;
        serializableNode21.parent = serializableNode59;
        serializableNode59.rank = '4';
        int int67 = serializableNode59.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        int int16 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        serializableNode18.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        int int32 = serializableNode29.rank;
        java.io.Serializable serializable33 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode35.parent;
        serializableNode35.rank = (byte) 100;
        java.lang.Class<?> wildcardClass39 = serializableNode35.getClass();
        serializableNode29.data = wildcardClass39;
        serializableNode25.data = wildcardClass39;
        serializableNode18.data = wildcardClass39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        java.io.Serializable serializable49 = serializableNode48.data;
        int int50 = serializableNode48.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode48.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        serializableNode53.rank = (short) -1;
        serializableNode53.rank = (short) -1;
        java.io.Serializable serializable60 = serializableNode53.data;
        int int61 = serializableNode53.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode53.parent;
        serializableNode48.parent = serializableNode53;
        java.io.Serializable serializable64 = serializableNode48.data;
        serializableNode18.parent = serializableNode48;
        serializableNode6.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        int int70 = serializableNode69.rank;
        java.lang.Class<?> wildcardClass71 = serializableNode69.getClass();
        serializableNode6.data = wildcardClass71;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 10.0f;
        serializableNode1.rank = (short) 100;
        org.junit.Assert.assertNotNull(serializableNode2);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        int int8 = serializableNode5.rank;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode11.parent;
        serializableNode11.rank = (byte) 100;
        java.lang.Class<?> wildcardClass15 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass15;
        serializableNode1.data = wildcardClass15;
        serializableNode1.rank = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode1.parent;
        int int21 = serializableNode20.rank;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 35 + "'", int21 == 35);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode17.parent = serializableNode30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        serializableNode37.parent = serializableNode41;
        int int43 = serializableNode41.rank;
        serializableNode41.data = (-1);
        int int46 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode48.parent;
        serializableNode48.rank = (byte) 10;
        serializableNode48.data = 10L;
        serializableNode41.parent = serializableNode48;
        serializableNode30.parent = serializableNode48;
        serializableNode10.parent = serializableNode30;
        java.io.Serializable serializable61 = null;
        serializableNode30.data = serializable61;
        java.io.Serializable serializable63 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int66 = serializableNode65.rank;
        int int67 = serializableNode65.rank;
        java.io.Serializable serializable68 = serializableNode65.data;
        serializableNode65.rank = (byte) 1;
        serializableNode65.data = 10.0d;
        serializableNode65.rank = (byte) 100;
        java.lang.Class<?> wildcardClass75 = serializableNode65.getClass();
        serializableNode30.data = wildcardClass75;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNull(serializable63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode21.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        serializableNode21.parent = serializableNode28;
        int int33 = serializableNode21.rank;
        serializableNode21.rank = 100;
        serializableNode15.parent = serializableNode21;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable53 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        serializableNode50.parent = serializableNode54;
        int int56 = serializableNode54.rank;
        serializableNode44.parent = serializableNode54;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode59.parent;
        serializableNode44.parent = serializableNode59;
        serializableNode59.rank = (short) -1;
        serializableNode21.parent = serializableNode59;
        serializableNode59.rank = '4';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int69 = serializableNode68.rank;
        int int70 = serializableNode68.rank;
        java.io.Serializable serializable71 = serializableNode68.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode68.parent;
        java.io.Serializable serializable73 = serializableNode72.data;
        int int74 = serializableNode72.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode72.parent;
        java.io.Serializable serializable76 = serializableNode75.data;
        serializableNode59.parent = serializableNode75;
        serializableNode75.rank = 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + serializable71 + "' != '" + 10L + "'", serializable71, 10L);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertEquals("'" + serializable76 + "' != '" + 10L + "'", serializable76, 10L);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        serializableNode6.data = ' ';
        serializableNode6.rank = (byte) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        serializableNode1.rank = (short) 1;
        java.io.Serializable serializable9 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        serializableNode1.rank = '4';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + (byte) 1 + "'", serializable9, (byte) 1);
        org.junit.Assert.assertNotNull(serializableNode10);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable18);
        serializableNode19.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        java.io.Serializable serializable30 = serializableNode27.data;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.lang.Class<?> wildcardClass38 = serializableNode37.getClass();
        serializableNode27.data = wildcardClass38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode27.parent;
        serializableNode40.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode40.parent;
        serializableNode19.parent = serializableNode40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int48 = serializableNode47.rank;
        int int49 = serializableNode47.rank;
        java.io.Serializable serializable50 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable55 = serializableNode54.data;
        int int56 = serializableNode54.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode54.parent = serializableNode58;
        serializableNode52.parent = serializableNode54;
        int int61 = serializableNode52.rank;
        int int62 = serializableNode52.rank;
        serializableNode40.parent = serializableNode52;
        int int64 = serializableNode52.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        int int8 = serializableNode7.rank;
        serializableNode7.rank = 1;
        int int11 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        serializableNode13.rank = 'a';
        int int18 = serializableNode13.rank;
        serializableNode7.parent = serializableNode13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        serializableNode23.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode28.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode32.parent;
        serializableNode32.rank = (byte) 10;
        int int40 = serializableNode32.rank;
        int int41 = serializableNode32.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode32.parent;
        serializableNode28.parent = serializableNode43;
        serializableNode7.parent = serializableNode43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode43.parent;
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode46);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable4 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode3.parent;
        int int6 = serializableNode3.rank;
        java.io.Serializable serializable7 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        serializableNode9.rank = (byte) 100;
        java.lang.Class<?> wildcardClass13 = serializableNode9.getClass();
        serializableNode3.data = wildcardClass13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass18 = serializableNode17.getClass();
        serializableNode15.data = wildcardClass18;
        int int20 = serializableNode15.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        int int31 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode29.parent = serializableNode33;
        serializableNode27.parent = serializableNode29;
        int int36 = serializableNode27.rank;
        java.lang.Class<?> wildcardClass37 = serializableNode27.getClass();
        serializableNode15.data = wildcardClass37;
        serializableNode1.parent = serializableNode15;
        java.lang.Class<?> wildcardClass40 = serializableNode15.getClass();
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        serializableNode4.parent = serializableNode6;
        java.io.Serializable serializable8 = serializableNode4.data;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode4);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode7.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        int int13 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(serializableNode14);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        int int8 = serializableNode5.rank;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode11.parent;
        serializableNode11.rank = (byte) 100;
        java.lang.Class<?> wildcardClass15 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass15;
        serializableNode1.data = wildcardClass15;
        serializableNode1.rank = '#';
        java.io.Serializable serializable20 = serializableNode1.data;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializable20);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable34 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode33.parent;
        serializableNode31.parent = serializableNode35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        serializableNode38.rank = (byte) 1;
        java.lang.Class<?> wildcardClass44 = serializableNode38.getClass();
        serializableNode31.data = wildcardClass44;
        java.io.Serializable serializable46 = serializableNode31.data;
        serializableNode22.data = serializable46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int50 = serializableNode49.rank;
        int int51 = serializableNode49.rank;
        java.io.Serializable serializable52 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode49.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode49.parent;
        serializableNode49.rank = (byte) 10;
        int int57 = serializableNode49.rank;
        int int58 = serializableNode49.rank;
        serializableNode22.parent = serializableNode49;
        java.lang.Class<?> wildcardClass60 = serializableNode49.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass60);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(serializable46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        serializableNode6.rank = (byte) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode6.parent;
        serializableNode18.data = (byte) -1;
        java.io.Serializable serializable21 = null;
        serializableNode18.data = serializable21;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        serializableNode6.rank = (byte) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode6.parent;
        serializableNode18.data = (byte) -1;
        serializableNode18.rank = (byte) 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode14.parent = serializableNode21;
        int int26 = serializableNode14.rank;
        java.io.Serializable serializable27 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode14.parent = serializableNode33;
        serializableNode8.parent = serializableNode14;
        serializableNode14.rank = 'a';
        serializableNode14.rank = (byte) 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        serializableNode1.rank = (byte) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        serializableNode14.rank = (byte) 1;
        int int20 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode14.parent;
        serializableNode14.rank = (byte) 0;
        serializableNode1.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode14.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode25);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        serializableNode1.data = 10.0d;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        int int12 = serializableNode1.rank;
        java.io.Serializable serializable13 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10.0d + "'", serializable13, 10.0d);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        int int22 = serializableNode19.rank;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        serializableNode25.rank = (byte) 100;
        java.lang.Class<?> wildcardClass29 = serializableNode25.getClass();
        serializableNode19.data = wildcardClass29;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass29);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass29);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode34.parent;
        serializableNode35.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int40 = serializableNode39.rank;
        int int41 = serializableNode39.rank;
        java.io.Serializable serializable42 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable45 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode44.parent;
        serializableNode39.parent = serializableNode44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        serializableNode35.parent = serializableNode48;
        serializableNode32.parent = serializableNode35;
        serializableNode35.rank = (byte) -1;
        serializableNode13.parent = serializableNode35;
        java.io.Serializable serializable54 = serializableNode35.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode6.parent = serializableNode10;
        serializableNode10.data = 0.0d;
        serializableNode1.parent = serializableNode10;
        java.lang.Class<?> wildcardClass15 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor> typeDescriptorNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor>((java.lang.invoke.TypeDescriptor) wildcardClass15);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        serializableNode9.rank = (byte) 1;
        serializableNode9.data = 10.0d;
        java.lang.Class<?> wildcardClass17 = serializableNode9.getClass();
        serializableNode5.data = wildcardClass17;
        serializableNode5.data = 100.0d;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode5.data = wildcardClass27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        serializableNode30.rank = (short) -1;
        serializableNode30.rank = (short) -1;
        java.io.Serializable serializable37 = serializableNode30.data;
        int int38 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode30.parent = serializableNode40;
        java.lang.Class<?> wildcardClass42 = serializableNode40.getClass();
        serializableNode5.data = wildcardClass42;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode5.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable15 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode6.parent = serializableNode10;
        serializableNode10.data = 0.0d;
        serializableNode1.parent = serializableNode10;
        serializableNode1.rank = 'a';
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.lang.Class<?> wildcardClass9 = serializableNode5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        serializableNode19.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        int int24 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        serializableNode37.rank = (byte) 1;
        java.lang.Class<?> wildcardClass43 = serializableNode37.getClass();
        serializableNode30.data = wildcardClass43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode30.parent;
        serializableNode19.parent = serializableNode45;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(serializableNode45);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        serializableNode1.rank = '#';
        serializableNode1.rank = 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        serializableNode23.rank = (short) -1;
        java.lang.Class<?> wildcardClass27 = serializableNode23.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass27);
        serializableNode10.data = wildcardClass27;
        serializableNode10.rank = (short) -1;
        java.lang.Class<?> wildcardClass32 = serializableNode10.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        serializableNode5.rank = 'a';
        int int22 = serializableNode5.rank;
        serializableNode5.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        serializableNode26.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode31.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode32.parent;
        serializableNode5.parent = serializableNode33;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        int int19 = serializableNode18.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        java.io.Serializable serializable17 = serializableNode14.data;
        java.io.Serializable serializable18 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.lang.Class<?> wildcardClass25 = serializableNode24.getClass();
        serializableNode14.data = wildcardClass25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode14.parent;
        serializableNode5.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.io.Serializable serializable35 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode34.parent;
        java.io.Serializable serializable37 = serializableNode34.data;
        java.io.Serializable serializable38 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode40.parent;
        java.lang.Class<?> wildcardClass45 = serializableNode44.getClass();
        serializableNode34.data = wildcardClass45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable50 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode49.parent;
        java.io.Serializable serializable52 = serializableNode51.data;
        serializableNode51.rank = (short) -1;
        java.lang.Class<?> wildcardClass55 = serializableNode51.getClass();
        serializableNode47.data = wildcardClass55;
        serializableNode5.data = wildcardClass55;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) false);
        serializableNode1.rank = (byte) 10;
        serializableNode1.rank = (-1);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        java.io.Serializable serializable22 = serializableNode17.data;
        serializableNode6.parent = serializableNode17;
        int int24 = serializableNode6.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        java.io.Serializable serializable10 = serializableNode9.data;
        serializableNode9.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode14.rank = (byte) 100;
        serializableNode14.data = 'a';
        java.lang.Class<?> wildcardClass19 = serializableNode14.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass19);
        serializableNode9.data = wildcardClass19;
        serializableNode1.parent = serializableNode9;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        serializableNode1.data = 10.0d;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass13 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        java.io.Serializable serializable27 = serializableNode24.data;
        java.io.Serializable serializable28 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.lang.Class<?> wildcardClass35 = serializableNode34.getClass();
        serializableNode24.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode24.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        serializableNode10.data = serializable38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable38);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        java.io.Serializable serializable45 = serializableNode43.data;
        java.lang.Class<?> wildcardClass46 = serializable45.getClass();
        serializableNode40.data = wildcardClass46;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializable38);
        org.junit.Assert.assertNotNull(serializable41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.lang.Class<?> wildcardClass2 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass2);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        int int13 = serializableNode11.rank;
        serializableNode11.rank = 'a';
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        serializableNode25.parent = serializableNode29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        serializableNode25.parent = serializableNode32;
        int int37 = serializableNode25.rank;
        serializableNode25.rank = 100;
        serializableNode19.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int43 = serializableNode42.rank;
        int int44 = serializableNode42.rank;
        java.io.Serializable serializable45 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode42.parent;
        java.io.Serializable serializable47 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int51 = serializableNode50.rank;
        int int52 = serializableNode50.rank;
        java.io.Serializable serializable53 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode50.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable57 = serializableNode56.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode56.parent;
        serializableNode54.parent = serializableNode58;
        int int60 = serializableNode58.rank;
        serializableNode48.parent = serializableNode58;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode63.parent;
        serializableNode48.parent = serializableNode63;
        serializableNode63.rank = (short) -1;
        serializableNode25.parent = serializableNode63;
        serializableNode63.rank = '4';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int73 = serializableNode72.rank;
        int int74 = serializableNode72.rank;
        java.io.Serializable serializable75 = serializableNode72.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = serializableNode72.parent;
        java.io.Serializable serializable77 = serializableNode76.data;
        int int78 = serializableNode76.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = serializableNode76.parent;
        java.io.Serializable serializable80 = serializableNode79.data;
        serializableNode63.parent = serializableNode79;
        java.lang.Class<?> wildcardClass82 = serializableNode79.getClass();
        serializableNode3.data = wildcardClass82;
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + serializable75 + "' != '" + 10L + "'", serializable75, 10L);
        org.junit.Assert.assertNotNull(serializableNode76);
        org.junit.Assert.assertEquals("'" + serializable77 + "' != '" + 10L + "'", serializable77, 10L);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(serializableNode79);
        org.junit.Assert.assertEquals("'" + serializable80 + "' != '" + 10L + "'", serializable80, 10L);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass16);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        serializableNode1.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        int int23 = serializableNode21.rank;
        serializableNode21.rank = 'a';
        java.lang.Class<?> wildcardClass26 = serializableNode21.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass26);
        serializableNode1.data = wildcardClass26;
        java.io.Serializable serializable29 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(serializable29);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        int int20 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode1.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (byte) 0;
        serializableNode34.rank = (byte) 1;
        int int41 = serializableNode34.rank;
        java.io.Serializable serializable42 = serializableNode34.data;
        serializableNode1.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable46 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode45.parent;
        java.io.Serializable serializable48 = serializableNode47.data;
        serializableNode47.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode47.parent;
        int int52 = serializableNode47.rank;
        serializableNode47.rank = (byte) -1;
        serializableNode1.parent = serializableNode47;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(serializableNode56);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        serializableNode1.rank = '4';
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode1.parent;
        java.io.Serializable serializable22 = serializableNode21.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + true + "'", serializable22, true);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        int int20 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode1.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (byte) 0;
        serializableNode34.rank = (byte) 1;
        int int41 = serializableNode34.rank;
        java.io.Serializable serializable42 = serializableNode34.data;
        serializableNode1.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable46 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode45.parent;
        java.io.Serializable serializable48 = serializableNode47.data;
        serializableNode47.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode47.parent;
        int int52 = serializableNode47.rank;
        serializableNode47.rank = (byte) -1;
        serializableNode1.parent = serializableNode47;
        java.io.Serializable serializable56 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = 'a';
        org.junit.Assert.assertNotNull(serializableNode2);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        java.io.Serializable serializable25 = serializableNode12.data;
        serializableNode10.data = serializable25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        int int30 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode28.parent = serializableNode32;
        serializableNode28.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        serializableNode37.data = (short) 100;
        serializableNode28.parent = serializableNode37;
        java.io.Serializable serializable43 = serializableNode37.data;
        int int44 = serializableNode37.rank;
        serializableNode37.rank = 10;
        java.io.Serializable serializable47 = serializableNode37.data;
        java.lang.Class<?> wildcardClass48 = serializable47.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable47);
        serializableNode10.parent = serializableNode49;
        serializableNode10.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode10.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializable25);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + (short) 100 + "'", serializable43, (short) 100);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + (short) 100 + "'", serializable47, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(serializableNode53);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        java.io.Serializable serializable12 = serializableNode11.data;
        int int13 = serializableNode11.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.lang.Class<?> wildcardClass6 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass6);
        serializableNode3.data = wildcardClass6;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        java.io.Serializable serializable12 = serializableNode10.data;
        java.lang.Class<?> wildcardClass13 = serializable12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode1.parent = serializableNode14;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode18.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        serializableNode29.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        int int43 = serializableNode40.rank;
        java.io.Serializable serializable44 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode46.parent;
        serializableNode46.rank = (byte) 100;
        java.lang.Class<?> wildcardClass50 = serializableNode46.getClass();
        serializableNode40.data = wildcardClass50;
        serializableNode36.data = wildcardClass50;
        serializableNode29.data = wildcardClass50;
        serializableNode27.data = wildcardClass50;
        serializableNode14.data = wildcardClass50;
        int int56 = serializableNode14.rank;
        java.io.Serializable serializable57 = serializableNode14.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(serializable57);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        serializableNode12.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode20.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode26);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        serializableNode1.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        serializableNode15.rank = (short) -1;
        int int19 = serializableNode15.rank;
        serializableNode1.parent = serializableNode15;
        java.io.Serializable serializable21 = serializableNode15.data;
        serializableNode15.rank = (short) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode14.parent = serializableNode21;
        int int26 = serializableNode14.rank;
        java.io.Serializable serializable27 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode14.parent = serializableNode33;
        serializableNode8.parent = serializableNode14;
        serializableNode8.rank = (short) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        serializableNode1.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        serializableNode15.rank = (short) -1;
        int int19 = serializableNode15.rank;
        serializableNode1.parent = serializableNode15;
        java.io.Serializable serializable21 = serializableNode15.data;
        java.io.Serializable serializable22 = serializableNode15.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        int int21 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode19.parent = serializableNode23;
        serializableNode17.parent = serializableNode19;
        int int26 = serializableNode17.rank;
        serializableNode17.data = ' ';
        serializableNode10.parent = serializableNode17;
        int int30 = serializableNode17.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        java.io.Serializable serializable3 = serializableNode1.data;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (short) 1;
        int int7 = serializableNode1.rank;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertEquals("'" + serializable3 + "' != '" + 10L + "'", serializable3, 10L);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass12 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        serializableNode5.rank = 97;
        serializableNode5.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        int int25 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode23.parent = serializableNode27;
        serializableNode23.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        serializableNode32.data = (short) 100;
        serializableNode23.parent = serializableNode32;
        serializableNode5.parent = serializableNode23;
        int int39 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode41.parent;
        java.io.Serializable serializable44 = serializableNode43.data;
        serializableNode43.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode48.rank = (byte) 100;
        serializableNode48.data = 'a';
        java.lang.Class<?> wildcardClass53 = serializableNode48.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass53);
        serializableNode43.data = wildcardClass53;
        serializableNode5.data = wildcardClass53;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode5.rank;
        serializableNode5.rank = 'a';
        java.lang.Class<?> wildcardClass14 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass14);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        int int7 = serializableNode6.rank;
        java.io.Serializable serializable8 = serializableNode6.data;
        int int9 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        java.io.Serializable serializable18 = serializableNode15.data;
        java.io.Serializable serializable19 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.lang.Class<?> wildcardClass26 = serializableNode25.getClass();
        serializableNode15.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        serializableNode32.rank = (short) -1;
        java.lang.Class<?> wildcardClass36 = serializableNode32.getClass();
        serializableNode28.data = wildcardClass36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass36);
        serializableNode6.data = wildcardClass36;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        int int21 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        serializableNode24.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        serializableNode37.parent = serializableNode41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        serializableNode37.parent = serializableNode44;
        int int49 = serializableNode37.rank;
        java.io.Serializable serializable50 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        java.io.Serializable serializable55 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        java.io.Serializable serializable57 = serializableNode56.data;
        int int58 = serializableNode56.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode56.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode56.parent;
        serializableNode37.parent = serializableNode56;
        serializableNode31.parent = serializableNode37;
        java.lang.Class<?> wildcardClass63 = serializableNode37.getClass();
        serializableNode22.data = wildcardClass63;
        serializableNode22.rank = 0;
        java.io.Serializable serializable67 = serializableNode22.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(serializable67);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        java.io.Serializable serializable11 = serializableNode1.data;
        java.lang.Class<?> wildcardClass12 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        java.lang.constant.Constable constable0 = null;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>(constable0);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 0.0d);
        int int2 = serializableNode1.rank;
        serializableNode1.rank = 35;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass4 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass4);
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = null;
        serializableNode5.parent = serializableNode7;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(serializable6);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        serializableNode4.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode4.parent;
        serializableNode8.rank = 35;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode4);
        org.junit.Assert.assertNotNull(serializableNode8);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        serializableNode10.rank = (short) 1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        int int18 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        java.io.Serializable serializable21 = null;
        serializableNode10.data = serializable21;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(serializableNode19);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode9.data = 10L;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        int int8 = serializableNode5.rank;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode11.parent;
        serializableNode11.rank = (byte) 100;
        java.lang.Class<?> wildcardClass15 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode23.parent = serializableNode27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        serializableNode23.parent = serializableNode30;
        serializableNode5.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode5.parent;
        java.io.Serializable serializable37 = serializableNode36.data;
        serializableNode1.parent = serializableNode36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode1.parent;
        serializableNode39.rank = (short) 0;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode39);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode16.rank = (short) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode16);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        int int18 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        java.lang.Class<?> wildcardClass21 = serializableNode5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        serializableNode1.rank = '4';
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        serializableNode22.rank = 'a';
        java.lang.Class<?> wildcardClass27 = serializableNode22.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass27);
        serializableNode1.data = wildcardClass27;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode26.parent = serializableNode30;
        int int32 = serializableNode30.rank;
        serializableNode30.data = (-1);
        int int35 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode37.parent;
        serializableNode37.rank = (byte) 10;
        serializableNode37.data = 10L;
        serializableNode30.parent = serializableNode37;
        serializableNode19.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        java.io.Serializable serializable53 = serializableNode52.data;
        serializableNode52.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        int int57 = serializableNode56.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode56.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable62 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode61.parent;
        int int64 = serializableNode61.rank;
        java.io.Serializable serializable65 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode67.parent;
        serializableNode67.rank = (byte) 100;
        java.lang.Class<?> wildcardClass71 = serializableNode67.getClass();
        serializableNode61.data = wildcardClass71;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode61.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass76 = serializableNode75.getClass();
        serializableNode73.data = wildcardClass76;
        serializableNode73.rank = (short) 100;
        serializableNode58.parent = serializableNode73;
        serializableNode37.parent = serializableNode73;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable84 = serializableNode83.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = serializableNode83.parent;
        java.io.Serializable serializable86 = serializableNode85.data;
        serializableNode85.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode90 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode90.rank = (byte) 100;
        serializableNode90.data = 'a';
        java.lang.Class<?> wildcardClass95 = serializableNode90.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode96 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass95);
        serializableNode85.data = wildcardClass95;
        serializableNode73.data = wildcardClass95;
        java.io.Serializable serializable99 = serializableNode73.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals("'" + serializable84 + "' != '" + 10L + "'", serializable84, 10L);
        org.junit.Assert.assertNotNull(serializableNode85);
        org.junit.Assert.assertEquals("'" + serializable86 + "' != '" + 10L + "'", serializable86, 10L);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(serializable99);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) false);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass4 = serializableNode3.getClass();
        serializableNode1.data = wildcardClass4;
        java.io.Serializable serializable6 = serializableNode1.data;
        java.lang.Class<?> wildcardClass7 = serializableNode1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(serializable6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        java.io.Serializable serializable17 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        serializableNode5.parent = serializableNode20;
        serializableNode20.rank = (short) 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + (byte) 10 + "'", serializable21, (byte) 10);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode29.data;
        int int32 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode34.parent;
        java.lang.Class<?> wildcardClass40 = serializableNode34.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass40);
        serializableNode29.data = wildcardClass40;
        serializableNode29.rank = (short) 0;
        serializableNode29.rank = 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode10.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        serializableNode5.data = wildcardClass16;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        serializableNode1.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        serializableNode15.rank = (short) -1;
        int int19 = serializableNode15.rank;
        serializableNode1.parent = serializableNode15;
        java.io.Serializable serializable21 = serializableNode15.data;
        serializableNode15.rank = 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        int int10 = serializableNode5.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode10.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass11 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode22.parent = serializableNode26;
        serializableNode20.parent = serializableNode22;
        int int29 = serializableNode20.rank;
        serializableNode20.data = ' ';
        serializableNode13.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (short) -1;
        serializableNode34.rank = (short) -1;
        int int41 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        int int45 = serializableNode43.rank;
        java.io.Serializable serializable46 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode43.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable50 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode49.parent;
        serializableNode47.parent = serializableNode51;
        int int53 = serializableNode47.rank;
        serializableNode47.rank = 'a';
        java.lang.Class<?> wildcardClass56 = serializableNode47.getClass();
        serializableNode34.data = wildcardClass56;
        serializableNode20.data = wildcardClass56;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        java.io.Serializable serializable7 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode4.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        java.lang.Class<?> wildcardClass15 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        serializableNode4.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode18 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode4);
        serializableNode1.parent = serializableNode4;
        java.io.Serializable serializable20 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        int int25 = serializableNode22.rank;
        java.io.Serializable serializable26 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        serializableNode28.rank = (byte) 100;
        java.lang.Class<?> wildcardClass32 = serializableNode28.getClass();
        serializableNode22.data = wildcardClass32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass37 = serializableNode36.getClass();
        serializableNode34.data = wildcardClass37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        int int43 = serializableNode40.rank;
        java.io.Serializable serializable44 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode46.parent;
        serializableNode46.rank = (byte) 100;
        java.lang.Class<?> wildcardClass50 = serializableNode46.getClass();
        serializableNode40.data = wildcardClass50;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass50);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass50);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode55.parent;
        serializableNode56.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int61 = serializableNode60.rank;
        int int62 = serializableNode60.rank;
        java.io.Serializable serializable63 = serializableNode60.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable66 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode65.parent;
        serializableNode60.parent = serializableNode65;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode65.parent;
        serializableNode56.parent = serializableNode69;
        serializableNode53.parent = serializableNode56;
        serializableNode56.rank = (byte) -1;
        serializableNode34.parent = serializableNode56;
        java.lang.Class<?> wildcardClass75 = serializableNode56.getClass();
        serializableNode4.data = wildcardClass75;
        serializableNode4.rank = 'a';
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10.0f + "'", serializable2, 10.0f);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializable20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        java.io.Serializable serializable14 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode24.parent = serializableNode28;
        serializableNode28.rank = 0;
        serializableNode28.data = 100;
        serializableNode22.parent = serializableNode28;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        serializableNode36.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode41 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode36);
        serializableNode28.parent = serializableNode36;
        serializableNode1.parent = serializableNode28;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializable14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode6.parent = serializableNode10;
        serializableNode10.data = 0.0d;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 0.0d + "'", serializable16, 0.0d);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        int int24 = serializableNode21.rank;
        java.io.Serializable serializable25 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode27.rank = (byte) 100;
        java.lang.Class<?> wildcardClass31 = serializableNode27.getClass();
        serializableNode21.data = wildcardClass31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode21.parent;
        java.io.Serializable serializable34 = serializableNode21.data;
        serializableNode5.parent = serializableNode21;
        java.io.Serializable serializable36 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable36);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(serializable34);
        org.junit.Assert.assertNotNull(serializable36);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        serializableNode22.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode22.parent;
        java.io.Serializable serializable28 = serializableNode22.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + (short) -1 + "'", serializable28, (short) -1);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode29.parent;
        java.io.Serializable serializable31 = serializableNode29.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializable31);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        java.lang.Class<?> wildcardClass13 = serializableNode9.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode26.parent = serializableNode30;
        int int32 = serializableNode30.rank;
        serializableNode30.data = (-1);
        int int35 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode37.parent;
        serializableNode37.rank = (byte) 10;
        serializableNode37.data = 10L;
        serializableNode30.parent = serializableNode37;
        serializableNode19.parent = serializableNode37;
        java.io.Serializable serializable49 = serializableNode37.data;
        serializableNode37.rank = 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        serializableNode3.rank = 35;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode29.data;
        int int32 = serializableNode29.rank;
        serializableNode29.rank = (byte) 100;
        serializableNode29.rank = 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        java.lang.CharSequence charSequence0 = null;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence> charSequenceNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence>(charSequence0);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        java.io.Serializable serializable26 = serializableNode23.data;
        java.io.Serializable serializable27 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.lang.Class<?> wildcardClass34 = serializableNode33.getClass();
        serializableNode23.data = wildcardClass34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode23.parent;
        serializableNode14.parent = serializableNode23;
        java.lang.Class<?> wildcardClass38 = serializableNode23.getClass();
        serializableNode8.data = wildcardClass38;
        serializableNode8.rank = (short) -1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int2 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass3 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass3);
        java.io.Serializable serializable5 = serializableNode4.data;
        java.io.Serializable serializable6 = serializableNode4.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(serializable5);
        org.junit.Assert.assertNotNull(serializable6);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode21 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        serializableNode7.parent = serializableNode27;
        serializableNode27.rank = 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializableNode31);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        int int22 = serializableNode19.rank;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        serializableNode25.rank = (byte) 100;
        java.lang.Class<?> wildcardClass29 = serializableNode25.getClass();
        serializableNode19.data = wildcardClass29;
        serializableNode16.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass34 = serializableNode33.getClass();
        serializableNode19.data = wildcardClass34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass34);
        serializableNode36.rank = ' ';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        serializableNode10.rank = (short) 0;
        int int13 = serializableNode10.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        serializableNode19.rank = (byte) 1;
        int int25 = serializableNode19.rank;
        serializableNode19.rank = '#';
        serializableNode8.parent = serializableNode19;
        java.io.Serializable serializable29 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode8.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode8.rank = (byte) 100;
        serializableNode8.data = 'a';
        java.lang.Class<?> wildcardClass13 = serializableNode8.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode3.data = wildcardClass13;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass13);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode6.parent;
        serializableNode6.rank = (byte) 10;
        int int14 = serializableNode6.rank;
        serializableNode2.parent = serializableNode6;
        int int16 = serializableNode2.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode18.parent = serializableNode23;
        int int27 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode18.parent;
        int int29 = serializableNode18.rank;
        serializableNode2.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode32.parent;
        serializableNode32.rank = (byte) 10;
        int int40 = serializableNode32.rank;
        java.lang.Class<?> wildcardClass41 = serializableNode32.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass41);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass41);
        serializableNode2.data = wildcardClass41;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        java.io.Serializable serializable20 = serializableNode5.data;
        java.io.Serializable serializable21 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        int int26 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        int int30 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode28.parent = serializableNode32;
        serializableNode32.data = 0.0d;
        serializableNode23.parent = serializableNode32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode23.parent;
        serializableNode23.rank = (short) 0;
        serializableNode5.parent = serializableNode23;
        java.io.Serializable serializable41 = serializableNode23.data;
        int int42 = serializableNode23.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializable20);
        org.junit.Assert.assertNotNull(serializable21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        int int18 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode10.rank = '4';
        serializableNode10.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        int int28 = serializableNode26.rank;
        serializableNode26.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int33 = serializableNode32.rank;
        java.lang.Class<?> wildcardClass34 = serializableNode32.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass34);
        serializableNode26.data = wildcardClass34;
        serializableNode10.data = wildcardClass34;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.data = (-1);
        int int14 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode16.parent;
        serializableNode16.rank = (byte) 10;
        serializableNode16.data = 10L;
        serializableNode9.parent = serializableNode16;
        java.io.Serializable serializable27 = serializableNode16.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode14.parent = serializableNode18;
        serializableNode12.parent = serializableNode14;
        int int21 = serializableNode12.rank;
        serializableNode1.parent = serializableNode12;
        int int23 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode25.rank = (byte) 100;
        serializableNode25.data = 'a';
        java.lang.Class<?> wildcardClass30 = serializableNode25.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass30);
        int int32 = serializableNode31.rank;
        serializableNode31.rank = 1;
        int int35 = serializableNode31.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable38 = serializableNode37.data;
        int int39 = serializableNode37.rank;
        serializableNode37.rank = 'a';
        int int42 = serializableNode37.rank;
        serializableNode31.parent = serializableNode37;
        serializableNode12.parent = serializableNode37;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 97 + "'", int42 == 97);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        int int29 = serializableNode26.rank;
        serializableNode7.parent = serializableNode26;
        serializableNode7.rank = '4';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode15 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode1.parent;
        int int17 = serializableNode16.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        serializableNode1.data = 10.0d;
        serializableNode1.rank = (short) -1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode29.parent;
        serializableNode29.rank = 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(serializableNode30);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        int int8 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        int int20 = serializableNode14.rank;
        serializableNode14.rank = 'a';
        java.lang.Class<?> wildcardClass23 = serializableNode14.getClass();
        serializableNode1.data = wildcardClass23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        serializableNode27.rank = (byte) 1;
        serializableNode27.data = 10.0d;
        serializableNode27.rank = (byte) 100;
        java.lang.Class<?> wildcardClass37 = serializableNode27.getClass();
        serializableNode25.data = wildcardClass37;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        java.lang.Comparable<java.lang.String> strComparable0 = null;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Comparable<java.lang.String>> strComparableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Comparable<java.lang.String>>(strComparable0);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass9 = serializableNode8.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode15.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        serializableNode15.parent = serializableNode22;
        int int27 = serializableNode15.rank;
        java.io.Serializable serializable28 = serializableNode15.data;
        serializableNode9.parent = serializableNode15;
        int int30 = serializableNode9.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        serializableNode17.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode21.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        serializableNode17.parent = serializableNode30;
        serializableNode14.parent = serializableNode17;
        java.io.Serializable serializable33 = serializableNode14.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializable33);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) false);
        serializableNode1.rank = (byte) 10;
        java.lang.Class<?> wildcardClass4 = serializableNode1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode21.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        serializableNode21.parent = serializableNode28;
        int int33 = serializableNode21.rank;
        serializableNode21.rank = 100;
        serializableNode15.parent = serializableNode21;
        java.io.Serializable serializable37 = null;
        serializableNode15.data = serializable37;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        java.io.Serializable serializable20 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        int int31 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode29.parent = serializableNode33;
        serializableNode27.parent = serializableNode29;
        int int36 = serializableNode27.rank;
        java.lang.Class<?> wildcardClass37 = serializableNode27.getClass();
        serializableNode5.data = wildcardClass37;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializable20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 0L);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        serializableNode1.data = 10.0d;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode14.parent = serializableNode21;
        int int26 = serializableNode14.rank;
        java.io.Serializable serializable27 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode14.parent = serializableNode33;
        serializableNode8.parent = serializableNode14;
        serializableNode14.rank = 'a';
        java.lang.Class<?> wildcardClass42 = serializableNode14.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        int int24 = serializableNode21.rank;
        java.io.Serializable serializable25 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode27.rank = (byte) 100;
        java.lang.Class<?> wildcardClass31 = serializableNode27.getClass();
        serializableNode21.data = wildcardClass31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode21.parent;
        java.io.Serializable serializable34 = serializableNode21.data;
        serializableNode5.parent = serializableNode21;
        java.lang.Class<?> wildcardClass36 = serializableNode21.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(serializable34);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        java.io.Serializable serializable11 = null;
        serializableNode6.data = serializable11;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        serializableNode17.rank = (short) 1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode26.parent = serializableNode30;
        int int32 = serializableNode30.rank;
        serializableNode30.data = (-1);
        int int35 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode37.parent;
        serializableNode37.rank = (byte) 10;
        serializableNode37.data = 10L;
        serializableNode30.parent = serializableNode37;
        serializableNode19.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        java.io.Serializable serializable53 = serializableNode52.data;
        serializableNode52.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        int int57 = serializableNode56.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode56.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable62 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode61.parent;
        int int64 = serializableNode61.rank;
        java.io.Serializable serializable65 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode67.parent;
        serializableNode67.rank = (byte) 100;
        java.lang.Class<?> wildcardClass71 = serializableNode67.getClass();
        serializableNode61.data = wildcardClass71;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode61.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass76 = serializableNode75.getClass();
        serializableNode73.data = wildcardClass76;
        serializableNode73.rank = (short) 100;
        serializableNode58.parent = serializableNode73;
        serializableNode37.parent = serializableNode73;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable84 = serializableNode83.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = serializableNode83.parent;
        java.io.Serializable serializable86 = serializableNode85.data;
        serializableNode85.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode90 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode90.rank = (byte) 100;
        serializableNode90.data = 'a';
        java.lang.Class<?> wildcardClass95 = serializableNode90.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode96 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass95);
        serializableNode85.data = wildcardClass95;
        serializableNode73.data = wildcardClass95;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode99 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass95);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals("'" + serializable84 + "' != '" + 10L + "'", serializable84, 10L);
        org.junit.Assert.assertNotNull(serializableNode85);
        org.junit.Assert.assertEquals("'" + serializable86 + "' != '" + 10L + "'", serializable86, 10L);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode10.parent;
        int int14 = serializableNode10.rank;
        java.io.Serializable serializable15 = serializableNode10.data;
        serializableNode2.parent = serializableNode10;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        int int13 = serializableNode11.rank;
        serializableNode11.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode24.parent = serializableNode28;
        serializableNode22.parent = serializableNode24;
        int int31 = serializableNode22.rank;
        serializableNode11.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        serializableNode22.parent = serializableNode34;
        java.lang.Class<?> wildcardClass39 = serializableNode34.getClass();
        serializableNode8.data = wildcardClass39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass39);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode5.parent;
        int int22 = serializableNode5.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int2 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass3 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass3);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass3);
        java.lang.Class<?> wildcardClass6 = serializableNode5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode29.data;
        int int32 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode34.parent;
        java.lang.Class<?> wildcardClass40 = serializableNode34.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass40);
        serializableNode29.data = wildcardClass40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        serializableNode44.data = (short) 100;
        serializableNode29.parent = serializableNode44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int52 = serializableNode51.rank;
        int int53 = serializableNode51.rank;
        java.io.Serializable serializable54 = serializableNode51.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode51.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode51.parent;
        java.io.Serializable serializable57 = serializableNode56.data;
        serializableNode44.parent = serializableNode56;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int61 = serializableNode60.rank;
        int int62 = serializableNode60.rank;
        java.io.Serializable serializable63 = serializableNode60.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode60.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable67 = serializableNode66.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode66.parent;
        serializableNode64.parent = serializableNode68;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int72 = serializableNode71.rank;
        int int73 = serializableNode71.rank;
        java.io.Serializable serializable74 = serializableNode71.data;
        serializableNode64.parent = serializableNode71;
        java.io.Serializable serializable76 = serializableNode64.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = serializableNode78.parent;
        java.io.Serializable serializable80 = serializableNode79.data;
        serializableNode64.parent = serializableNode79;
        serializableNode64.rank = (-1);
        java.io.Serializable serializable84 = serializableNode64.data;
        serializableNode44.parent = serializableNode64;
        int int86 = serializableNode44.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertEquals("'" + serializable74 + "' != '" + 10L + "'", serializable74, 10L);
        org.junit.Assert.assertEquals("'" + serializable76 + "' != '" + 10L + "'", serializable76, 10L);
        org.junit.Assert.assertNotNull(serializableNode79);
        org.junit.Assert.assertEquals("'" + serializable80 + "' != '" + (byte) 10 + "'", serializable80, (byte) 10);
        org.junit.Assert.assertEquals("'" + serializable84 + "' != '" + 10L + "'", serializable84, 10L);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        int int8 = serializableNode1.rank;
        java.io.Serializable serializable9 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode11.parent;
        serializableNode11.rank = (byte) 10;
        serializableNode1.parent = serializableNode11;
        java.lang.Class<?> wildcardClass20 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        serializableNode1.data = 10.0d;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        java.io.Serializable serializable12 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10.0d + "'", serializable12, 10.0d);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        java.io.Serializable serializable5 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode3.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode6);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 1);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        serializableNode23.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode10.parent = serializableNode28;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode31.parent;
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int40 = serializableNode39.rank;
        int int41 = serializableNode39.rank;
        java.io.Serializable serializable42 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode39.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable46 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode45.parent;
        serializableNode43.parent = serializableNode47;
        int int49 = serializableNode47.rank;
        serializableNode37.parent = serializableNode47;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode51 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode37);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        java.io.Serializable serializable56 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode53.parent;
        java.io.Serializable serializable58 = serializableNode57.data;
        int int59 = serializableNode57.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode57.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode57.parent;
        serializableNode37.parent = serializableNode57;
        serializableNode10.parent = serializableNode57;
        int int64 = serializableNode57.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        serializableNode9.rank = (byte) 1;
        serializableNode9.data = 10.0d;
        java.lang.Class<?> wildcardClass17 = serializableNode9.getClass();
        serializableNode5.data = wildcardClass17;
        serializableNode5.data = 100.0d;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode5.data = wildcardClass27;
        int int29 = serializableNode5.rank;
        java.lang.Class<?> wildcardClass30 = serializableNode5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        java.io.Serializable serializable18 = serializableNode6.data;
        serializableNode6.rank = '#';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode14.parent = serializableNode21;
        int int26 = serializableNode14.rank;
        java.io.Serializable serializable27 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode14.parent = serializableNode33;
        serializableNode8.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        int int43 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode41.parent = serializableNode45;
        serializableNode41.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int51 = serializableNode50.rank;
        int int52 = serializableNode50.rank;
        serializableNode50.data = (short) 100;
        serializableNode41.parent = serializableNode50;
        java.io.Serializable serializable56 = serializableNode50.data;
        int int57 = serializableNode50.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode50.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int61 = serializableNode60.rank;
        int int62 = serializableNode60.rank;
        serializableNode60.rank = (short) -1;
        serializableNode60.rank = (short) -1;
        java.io.Serializable serializable67 = serializableNode60.data;
        int int68 = serializableNode60.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode60.parent;
        serializableNode58.parent = serializableNode69;
        java.lang.Class<?> wildcardClass71 = serializableNode58.getClass();
        serializableNode8.data = wildcardClass71;
        int int73 = serializableNode8.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + (short) 100 + "'", serializable56, (short) 100);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        java.io.Serializable serializable9 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        int int17 = serializableNode15.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        int int25 = serializableNode22.rank;
        java.io.Serializable serializable26 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        serializableNode28.rank = (byte) 100;
        java.lang.Class<?> wildcardClass32 = serializableNode28.getClass();
        serializableNode22.data = wildcardClass32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode22.parent;
        java.io.Serializable serializable35 = serializableNode22.data;
        serializableNode20.data = serializable35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        java.io.Serializable serializable45 = serializableNode42.data;
        java.io.Serializable serializable46 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        java.lang.Class<?> wildcardClass53 = serializableNode52.getClass();
        serializableNode42.data = wildcardClass53;
        serializableNode42.rank = 97;
        java.lang.Class<?> wildcardClass57 = serializableNode42.getClass();
        serializableNode20.data = wildcardClass57;
        serializableNode7.data = wildcardClass57;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode7.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(serializable35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(serializableNode60);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode8.rank = (byte) 100;
        serializableNode8.data = 'a';
        java.lang.Class<?> wildcardClass13 = serializableNode8.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode3.data = wildcardClass13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode3.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(serializableNode16);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass7 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        java.lang.Class<?> wildcardClass10 = serializableNode9.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode6.parent = serializableNode10;
        serializableNode10.data = 0.0d;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode5.rank = 0;
        serializableNode5.data = 100;
        serializableNode5.rank = '#';
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        serializableNode1.rank = (byte) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int15 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        serializableNode17.rank = (short) -1;
        serializableNode17.rank = (short) -1;
        java.io.Serializable serializable24 = serializableNode17.data;
        serializableNode14.parent = serializableNode17;
        serializableNode1.parent = serializableNode14;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        serializableNode6.data = ' ';
        int int18 = serializableNode6.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        serializableNode19.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) serializableNode19);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode19.parent;
        java.io.Serializable serializable26 = serializableNode19.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        int int16 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        int int21 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode19.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        java.io.Serializable serializable33 = serializableNode30.data;
        java.io.Serializable serializable34 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode36.parent;
        java.lang.Class<?> wildcardClass41 = serializableNode40.getClass();
        serializableNode30.data = wildcardClass41;
        serializableNode19.data = wildcardClass41;
        serializableNode19.rank = 0;
        serializableNode19.data = "";
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode19.parent;
        serializableNode17.parent = serializableNode19;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(serializableNode48);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        int int26 = serializableNode23.rank;
        java.io.Serializable serializable27 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode29.parent;
        serializableNode29.rank = (byte) 100;
        java.lang.Class<?> wildcardClass33 = serializableNode29.getClass();
        serializableNode23.data = wildcardClass33;
        serializableNode19.data = wildcardClass33;
        serializableNode12.data = wildcardClass33;
        serializableNode10.data = wildcardClass33;
        java.lang.Class<?> wildcardClass38 = serializableNode10.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode2.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode2.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        serializableNode17.rank = (byte) 10;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        java.io.Serializable serializable30 = serializableNode27.data;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.lang.Class<?> wildcardClass38 = serializableNode37.getClass();
        serializableNode27.data = wildcardClass38;
        serializableNode21.data = wildcardClass38;
        serializableNode19.parent = serializableNode21;
        java.lang.Class<?> wildcardClass42 = serializableNode19.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        int int20 = serializableNode19.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        serializableNode8.parent = serializableNode11;
        java.io.Serializable serializable16 = serializableNode11.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        java.io.Serializable serializable20 = serializableNode5.data;
        java.io.Serializable serializable21 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        java.io.Serializable serializable30 = serializableNode27.data;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.lang.Class<?> wildcardClass38 = serializableNode37.getClass();
        serializableNode27.data = wildcardClass38;
        java.io.Serializable serializable40 = serializableNode27.data;
        serializableNode5.data = serializable40;
        java.lang.Class<?> wildcardClass42 = serializable40.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializable20);
        org.junit.Assert.assertNotNull(serializable21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializable40);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        serializableNode5.rank = 52;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        java.lang.Class<?> wildcardClass12 = serializableNode9.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        serializableNode17.rank = (short) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10.0d + "'", serializable18, 10.0d);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        java.io.Serializable serializable7 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode4.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        java.lang.Class<?> wildcardClass15 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        serializableNode4.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode18 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode4);
        serializableNode1.parent = serializableNode4;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        int int30 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode28.parent = serializableNode32;
        serializableNode32.rank = 0;
        serializableNode32.data = 100;
        serializableNode26.parent = serializableNode32;
        serializableNode1.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode40 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10.0f + "'", serializable2, 10.0f);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        int int16 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        serializableNode18.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        int int32 = serializableNode29.rank;
        java.io.Serializable serializable33 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode35.parent;
        serializableNode35.rank = (byte) 100;
        java.lang.Class<?> wildcardClass39 = serializableNode35.getClass();
        serializableNode29.data = wildcardClass39;
        serializableNode25.data = wildcardClass39;
        serializableNode18.data = wildcardClass39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        java.io.Serializable serializable49 = serializableNode48.data;
        int int50 = serializableNode48.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode48.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        serializableNode53.rank = (short) -1;
        serializableNode53.rank = (short) -1;
        java.io.Serializable serializable60 = serializableNode53.data;
        int int61 = serializableNode53.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode53.parent;
        serializableNode48.parent = serializableNode53;
        java.io.Serializable serializable64 = serializableNode48.data;
        serializableNode18.parent = serializableNode48;
        serializableNode6.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode6.parent;
        serializableNode67.rank = 35;
        serializableNode67.rank = (short) 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode67);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        serializableNode6.rank = 1;
        java.lang.Class<?> wildcardClass11 = serializableNode6.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        java.io.Serializable serializable15 = serializableNode14.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializable15);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        serializableNode1.rank = (byte) 10;
        serializableNode1.data = 10;
        serializableNode1.rank = (byte) -1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode1.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        java.io.Serializable serializable20 = serializableNode19.data;
        int int21 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        serializableNode29.parent = serializableNode33;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        serializableNode29.parent = serializableNode36;
        int int41 = serializableNode29.rank;
        java.io.Serializable serializable42 = serializableNode29.data;
        serializableNode23.parent = serializableNode29;
        serializableNode11.parent = serializableNode23;
        java.io.Serializable serializable45 = serializableNode23.data;
        java.lang.Class<?> wildcardClass46 = serializable45.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode10.rank = (byte) 100;
        serializableNode10.data = 'a';
        java.lang.Class<?> wildcardClass15 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        int int17 = serializableNode16.rank;
        serializableNode16.rank = 1;
        int int20 = serializableNode16.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        serializableNode22.rank = 'a';
        int int27 = serializableNode22.rank;
        serializableNode16.parent = serializableNode22;
        serializableNode8.parent = serializableNode16;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 97 + "'", int27 == 97);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        java.io.Serializable serializable6 = serializableNode1.data;
        int int7 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass8 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        java.io.Serializable serializable11 = serializableNode1.data;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        serializableNode17.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        int int22 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode23.parent;
        java.lang.Class<?> wildcardClass25 = serializableNode23.getClass();
        serializableNode1.data = wildcardClass25;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor> typeDescriptorNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor>((java.lang.invoke.TypeDescriptor) wildcardClass25);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        serializableNode5.rank = 97;
        serializableNode5.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode5.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        serializableNode17.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode21.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        serializableNode17.parent = serializableNode30;
        serializableNode14.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode39 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode34);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable48 = serializableNode47.data;
        int int49 = serializableNode47.rank;
        serializableNode47.rank = 'a';
        java.lang.Class<?> wildcardClass52 = serializableNode47.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass52);
        serializableNode41.data = wildcardClass52;
        serializableNode34.data = wildcardClass52;
        serializableNode17.data = wildcardClass52;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass52);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        int int8 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        int int20 = serializableNode14.rank;
        serializableNode14.rank = 'a';
        java.lang.Class<?> wildcardClass23 = serializableNode14.getClass();
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 35;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.data = (-1);
        int int14 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode16.parent;
        serializableNode16.rank = (byte) 10;
        serializableNode16.data = 10L;
        serializableNode9.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable34 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode33.parent;
        serializableNode28.parent = serializableNode33;
        serializableNode28.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        serializableNode42.rank = (short) -1;
        int int46 = serializableNode42.rank;
        serializableNode28.parent = serializableNode42;
        serializableNode16.parent = serializableNode28;
        java.lang.Class<?> wildcardClass49 = serializableNode28.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        serializableNode1.data = "";
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode1.parent;
        int int31 = serializableNode30.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        java.lang.Class<?> wildcardClass7 = serializableNode3.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        serializableNode10.rank = '#';
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        java.io.Serializable serializable7 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode4.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        java.lang.Class<?> wildcardClass15 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        serializableNode4.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode18 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode4);
        serializableNode1.parent = serializableNode4;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        int int30 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode28.parent = serializableNode32;
        serializableNode32.rank = 0;
        serializableNode32.data = 100;
        serializableNode26.parent = serializableNode32;
        serializableNode1.parent = serializableNode26;
        int int40 = serializableNode1.rank;
        java.io.Serializable serializable41 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10.0f + "'", serializable2, 10.0f);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10.0f + "'", serializable41, 10.0f);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        serializableNode4.rank = (short) -1;
        serializableNode4.rank = (short) -1;
        java.io.Serializable serializable11 = serializableNode4.data;
        int int12 = serializableNode4.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode4.parent = serializableNode14;
        int int16 = serializableNode4.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode19.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode23.parent = serializableNode28;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode28.parent;
        serializableNode19.parent = serializableNode32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode19.parent;
        serializableNode19.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode19.parent;
        serializableNode4.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable47 = serializableNode46.data;
        int int48 = serializableNode46.rank;
        serializableNode46.rank = 'a';
        java.lang.Class<?> wildcardClass51 = serializableNode46.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass51);
        serializableNode40.data = wildcardClass51;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int57 = serializableNode56.rank;
        int int58 = serializableNode56.rank;
        java.io.Serializable serializable59 = serializableNode56.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode56.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable63 = serializableNode62.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode62.parent;
        serializableNode60.parent = serializableNode64;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int68 = serializableNode67.rank;
        int int69 = serializableNode67.rank;
        java.io.Serializable serializable70 = serializableNode67.data;
        serializableNode60.parent = serializableNode67;
        int int72 = serializableNode60.rank;
        serializableNode60.rank = 100;
        serializableNode54.parent = serializableNode60;
        java.lang.Class<?> wildcardClass76 = serializableNode54.getClass();
        serializableNode4.data = wildcardClass76;
        serializableNode1.data = wildcardClass76;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        serializableNode13.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode13.parent;
        serializableNode21.rank = ' ';
        java.lang.Class<?> wildcardClass24 = serializableNode21.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.io.Serializable serializable35 = serializableNode34.data;
        int int36 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        serializableNode38.rank = (short) -1;
        serializableNode28.parent = serializableNode38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        int int45 = serializableNode43.rank;
        java.io.Serializable serializable46 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode43.parent;
        java.io.Serializable serializable48 = serializableNode43.data;
        serializableNode28.parent = serializableNode43;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.rank = (byte) 0;
        serializableNode9.rank = (byte) 1;
        int int16 = serializableNode9.rank;
        serializableNode9.rank = '#';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode6.parent;
        serializableNode6.rank = (byte) 10;
        int int14 = serializableNode6.rank;
        serializableNode2.parent = serializableNode6;
        int int16 = serializableNode2.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode18.parent = serializableNode23;
        int int27 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode18.parent;
        int int29 = serializableNode18.rank;
        serializableNode2.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode18.parent;
        serializableNode31.rank = 35;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(serializableNode31);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        java.io.Serializable serializable27 = serializableNode24.data;
        java.io.Serializable serializable28 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.lang.Class<?> wildcardClass35 = serializableNode34.getClass();
        serializableNode24.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode24.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        serializableNode10.data = serializable38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable38);
        java.io.Serializable serializable41 = serializableNode40.data;
        java.lang.Class<?> wildcardClass42 = serializableNode40.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializable38);
        org.junit.Assert.assertNotNull(serializable41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        java.io.Serializable serializable18 = null;
        serializableNode10.data = serializable18;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        int int16 = serializableNode14.rank;
        serializableNode14.rank = 'a';
        java.lang.Class<?> wildcardClass19 = serializableNode14.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass19);
        serializableNode8.data = wildcardClass19;
        serializableNode1.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        int int27 = serializableNode24.rank;
        java.io.Serializable serializable28 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode30.parent;
        serializableNode30.rank = (byte) 100;
        java.lang.Class<?> wildcardClass34 = serializableNode30.getClass();
        serializableNode24.data = wildcardClass34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable45 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode44.parent;
        serializableNode42.parent = serializableNode46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int50 = serializableNode49.rank;
        int int51 = serializableNode49.rank;
        java.io.Serializable serializable52 = serializableNode49.data;
        serializableNode42.parent = serializableNode49;
        serializableNode24.parent = serializableNode42;
        serializableNode1.parent = serializableNode24;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode23.parent = serializableNode27;
        int int29 = serializableNode27.rank;
        serializableNode27.data = (-1);
        int int32 = serializableNode27.rank;
        serializableNode13.parent = serializableNode27;
        int int34 = serializableNode27.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        serializableNode20.rank = (byte) 1;
        java.lang.Class<?> wildcardClass26 = serializableNode20.getClass();
        serializableNode13.data = wildcardClass26;
        java.io.Serializable serializable28 = serializableNode13.data;
        java.io.Serializable serializable29 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        int int34 = serializableNode31.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable37 = serializableNode36.data;
        int int38 = serializableNode36.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode36.parent = serializableNode40;
        serializableNode40.data = 0.0d;
        serializableNode31.parent = serializableNode40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode31.parent;
        serializableNode31.rank = (short) 0;
        serializableNode13.parent = serializableNode31;
        serializableNode7.parent = serializableNode13;
        int int50 = serializableNode13.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(serializable28);
        org.junit.Assert.assertNotNull(serializable29);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) false);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass4 = serializableNode3.getClass();
        serializableNode1.data = wildcardClass4;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        serializableNode11.parent = serializableNode15;
        int int17 = serializableNode15.rank;
        serializableNode15.rank = (byte) 0;
        serializableNode15.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode23.parent = serializableNode28;
        serializableNode23.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        serializableNode37.rank = (short) -1;
        int int41 = serializableNode37.rank;
        serializableNode23.parent = serializableNode37;
        java.io.Serializable serializable43 = serializableNode37.data;
        serializableNode37.rank = 52;
        serializableNode15.parent = serializableNode37;
        serializableNode1.parent = serializableNode15;
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        java.lang.Class<?> wildcardClass18 = serializableNode6.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) serializableNode6);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode17.parent = serializableNode30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        serializableNode37.parent = serializableNode41;
        int int43 = serializableNode41.rank;
        serializableNode41.data = (-1);
        int int46 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode48.parent;
        serializableNode48.rank = (byte) 10;
        serializableNode48.data = 10L;
        serializableNode41.parent = serializableNode48;
        serializableNode30.parent = serializableNode48;
        serializableNode10.parent = serializableNode30;
        java.io.Serializable serializable61 = null;
        serializableNode30.data = serializable61;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode30.parent;
        java.io.Serializable serializable64 = serializableNode63.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        java.io.Serializable serializable14 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode1.parent;
        int int17 = serializableNode1.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializable14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        serializableNode8.parent = serializableNode11;
        java.lang.Class<?> wildcardClass16 = serializableNode8.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode5);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode2.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        int int21 = serializableNode18.rank;
        java.io.Serializable serializable22 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode24.parent;
        serializableNode24.rank = (byte) 100;
        java.lang.Class<?> wildcardClass28 = serializableNode24.getClass();
        serializableNode18.data = wildcardClass28;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode18.parent;
        java.io.Serializable serializable31 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode18.parent;
        serializableNode2.parent = serializableNode32;
        int int34 = serializableNode32.rank;
        int int35 = serializableNode32.rank;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        serializableNode5.data = (byte) -1;
        int int11 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode5.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        java.lang.Class<?> wildcardClass14 = serializable13.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + (byte) -1 + "'", serializable13, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence> charSequenceNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence>((java.lang.CharSequence) "");
        java.lang.Class<?> wildcardClass2 = charSequenceNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass2);
        java.lang.Class<?> wildcardClass4 = serializableNode3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode14.parent = serializableNode21;
        int int26 = serializableNode14.rank;
        java.io.Serializable serializable27 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode14.parent = serializableNode33;
        serializableNode8.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        int int43 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode45.parent = serializableNode50;
        serializableNode45.data = true;
        serializableNode41.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode45.parent;
        serializableNode14.parent = serializableNode45;
        java.lang.Class<?> wildcardClass59 = serializableNode45.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) 100);
        serializableNode13.parent = serializableNode20;
        int int22 = serializableNode13.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        int int17 = serializableNode5.rank;
        serializableNode5.data = 0.0d;
        int int20 = serializableNode5.rank;
        java.lang.Class<?> wildcardClass21 = serializableNode5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        serializableNode5.data = (byte) -1;
        int int11 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode5.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + (byte) -1 + "'", serializable13, (byte) -1);
        org.junit.Assert.assertNotNull(serializableNode14);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        serializableNode10.data = true;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode10.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode21);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        java.io.Serializable serializable12 = serializableNode11.data;
        java.io.Serializable serializable13 = serializableNode11.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode1.data;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        java.io.Serializable serializable14 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int18 = serializableNode17.rank;
        java.lang.Class<?> wildcardClass19 = serializableNode17.getClass();
        serializableNode1.data = wildcardClass19;
        java.io.Serializable serializable21 = serializableNode1.data;
        serializableNode1.rank = (short) 100;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializable14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializable21);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        serializableNode16.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        serializableNode23.rank = (byte) 1;
        java.lang.Class<?> wildcardClass29 = serializableNode23.getClass();
        serializableNode16.data = wildcardClass29;
        serializableNode16.rank = 'a';
        int int33 = serializableNode16.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode16.parent;
        serializableNode9.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode34.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 97 + "'", int33 == 97);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(serializableNode36);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        serializableNode1.rank = '#';
        serializableNode1.rank = 97;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode1.parent;
        serializableNode1.rank = 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode12);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode5.parent;
        java.lang.Class<?> wildcardClass22 = serializableNode5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        serializableNode1.rank = '4';
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        java.io.Serializable serializable11 = serializableNode1.data;
        int int12 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = null;
        serializableNode1.parent = serializableNode13;
        java.lang.Class<?> wildcardClass15 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence> charSequenceNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence>((java.lang.CharSequence) "");
        java.lang.Class<?> wildcardClass2 = charSequenceNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass2);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        java.io.Serializable serializable6 = serializableNode1.data;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        serializableNode9.parent = serializableNode14;
        java.lang.Class<?> wildcardClass18 = serializableNode9.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass18);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass18);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode26.parent = serializableNode30;
        int int32 = serializableNode26.rank;
        serializableNode26.rank = 'a';
        java.lang.Class<?> wildcardClass35 = serializableNode26.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass35);
        serializableNode20.data = wildcardClass35;
        serializableNode1.data = wildcardClass35;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        java.io.Serializable serializable9 = serializableNode7.data;
        java.lang.Class<?> wildcardClass10 = serializable9.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode19.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        serializableNode19.parent = serializableNode26;
        serializableNode1.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode1.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        java.io.Serializable serializable34 = serializableNode32.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode17.parent = serializableNode30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        serializableNode37.parent = serializableNode41;
        int int43 = serializableNode41.rank;
        serializableNode41.data = (-1);
        int int46 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode48.parent;
        serializableNode48.rank = (byte) 10;
        serializableNode48.data = 10L;
        serializableNode41.parent = serializableNode48;
        serializableNode30.parent = serializableNode48;
        serializableNode10.parent = serializableNode30;
        java.io.Serializable serializable61 = null;
        serializableNode30.data = serializable61;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int65 = serializableNode64.rank;
        int int66 = serializableNode64.rank;
        java.io.Serializable serializable67 = serializableNode64.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode64.parent;
        java.io.Serializable serializable69 = serializableNode68.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode68.parent;
        java.io.Serializable serializable71 = serializableNode68.data;
        java.io.Serializable serializable72 = serializableNode68.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int75 = serializableNode74.rank;
        int int76 = serializableNode74.rank;
        java.io.Serializable serializable77 = serializableNode74.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = serializableNode74.parent;
        java.lang.Class<?> wildcardClass79 = serializableNode78.getClass();
        serializableNode68.data = wildcardClass79;
        java.io.Serializable serializable81 = serializableNode68.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable81);
        serializableNode82.data = 1;
        serializableNode30.parent = serializableNode82;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertEquals("'" + serializable69 + "' != '" + 10L + "'", serializable69, 10L);
        org.junit.Assert.assertNotNull(serializableNode70);
        org.junit.Assert.assertEquals("'" + serializable71 + "' != '" + 10L + "'", serializable71, 10L);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertEquals("'" + serializable77 + "' != '" + 10L + "'", serializable77, 10L);
        org.junit.Assert.assertNotNull(serializableNode78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(serializable81);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable18);
        serializableNode19.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        java.io.Serializable serializable30 = serializableNode27.data;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.lang.Class<?> wildcardClass38 = serializableNode37.getClass();
        serializableNode27.data = wildcardClass38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode27.parent;
        serializableNode40.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode40.parent;
        serializableNode19.parent = serializableNode40;
        java.io.Serializable serializable45 = serializableNode19.data;
        java.lang.Class<?> wildcardClass46 = serializableNode19.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 1 + "'", serializable45, 1);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        int int22 = serializableNode19.rank;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        serializableNode25.rank = (byte) 100;
        java.lang.Class<?> wildcardClass29 = serializableNode25.getClass();
        serializableNode19.data = wildcardClass29;
        serializableNode16.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass34 = serializableNode33.getClass();
        serializableNode19.data = wildcardClass34;
        serializableNode19.rank = 52;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode1.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = null;
        serializableNode1.parent = serializableNode13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(serializableNode15);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        java.io.Serializable serializable27 = serializableNode24.data;
        java.io.Serializable serializable28 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.lang.Class<?> wildcardClass35 = serializableNode34.getClass();
        serializableNode24.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode24.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        serializableNode10.data = serializable38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode10.parent;
        int int41 = serializableNode10.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializable38);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        serializableNode38.parent = serializableNode42;
        int int44 = serializableNode42.rank;
        serializableNode32.parent = serializableNode42;
        int int46 = serializableNode42.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int50 = serializableNode49.rank;
        int int51 = serializableNode49.rank;
        java.io.Serializable serializable52 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode49.parent;
        serializableNode49.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode49.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable65 = serializableNode64.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = serializableNode64.parent;
        serializableNode62.parent = serializableNode66;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int70 = serializableNode69.rank;
        int int71 = serializableNode69.rank;
        java.io.Serializable serializable72 = serializableNode69.data;
        serializableNode62.parent = serializableNode69;
        int int74 = serializableNode62.rank;
        java.io.Serializable serializable75 = serializableNode62.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int78 = serializableNode77.rank;
        int int79 = serializableNode77.rank;
        java.io.Serializable serializable80 = serializableNode77.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = serializableNode77.parent;
        java.io.Serializable serializable82 = serializableNode81.data;
        int int83 = serializableNode81.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode84 = serializableNode81.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = serializableNode81.parent;
        serializableNode62.parent = serializableNode81;
        serializableNode56.parent = serializableNode62;
        java.lang.Class<?> wildcardClass88 = serializableNode62.getClass();
        serializableNode47.data = wildcardClass88;
        serializableNode7.data = wildcardClass88;
        java.io.Serializable serializable91 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode92 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable91);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertNotNull(serializableNode66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + serializable75 + "' != '" + 10L + "'", serializable75, 10L);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + serializable80 + "' != '" + 10L + "'", serializable80, 10L);
        org.junit.Assert.assertNotNull(serializableNode81);
        org.junit.Assert.assertEquals("'" + serializable82 + "' != '" + 10L + "'", serializable82, 10L);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(serializableNode84);
        org.junit.Assert.assertNotNull(serializableNode85);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(serializable91);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        java.io.Serializable serializable25 = serializableNode12.data;
        serializableNode10.data = serializable25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode28.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        java.io.Serializable serializable35 = serializableNode32.data;
        java.io.Serializable serializable36 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.lang.Class<?> wildcardClass43 = serializableNode42.getClass();
        serializableNode32.data = wildcardClass43;
        serializableNode32.rank = 97;
        java.lang.Class<?> wildcardClass47 = serializableNode32.getClass();
        serializableNode10.data = wildcardClass47;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int51 = serializableNode50.rank;
        int int52 = serializableNode50.rank;
        java.io.Serializable serializable53 = serializableNode50.data;
        serializableNode50.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode50.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable59 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode58.parent;
        int int61 = serializableNode58.rank;
        java.io.Serializable serializable62 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode64.parent;
        serializableNode64.rank = (byte) 100;
        java.lang.Class<?> wildcardClass68 = serializableNode64.getClass();
        serializableNode58.data = wildcardClass68;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass73 = serializableNode72.getClass();
        serializableNode70.data = wildcardClass73;
        int int75 = serializableNode70.rank;
        serializableNode70.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = serializableNode70.parent;
        serializableNode56.parent = serializableNode78;
        java.io.Serializable serializable80 = serializableNode78.data;
        int int81 = serializableNode78.rank;
        serializableNode78.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode84 = serializableNode78.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = serializableNode78.parent;
        serializableNode10.parent = serializableNode78;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializable25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(serializableNode70);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(serializableNode78);
        org.junit.Assert.assertNotNull(serializable80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(serializableNode84);
        org.junit.Assert.assertNotNull(serializableNode85);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 0.0d;
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        java.io.Serializable serializable28 = serializableNode18.data;
        java.lang.Class<?> wildcardClass29 = serializableNode18.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(serializable28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        java.io.Serializable serializable18 = serializableNode10.data;
        java.lang.Class<?> wildcardClass19 = serializableNode10.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + (short) 100 + "'", serializable18, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        serializableNode5.rank = 97;
        serializableNode5.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode5.parent;
        int int23 = serializableNode22.rank;
        java.io.Serializable serializable24 = serializableNode22.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(serializable24);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        serializableNode19.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) serializableNode19);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode19.parent;
        java.lang.Class<?> wildcardClass27 = serializableNode19.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        serializableNode1.parent = serializableNode5;
        java.io.Serializable serializable9 = serializableNode1.data;
        java.io.Serializable serializable10 = serializableNode1.data;
        java.lang.Class<?> wildcardClass11 = serializable10.getClass();
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10.0f + "'", serializable9, 10.0f);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10.0f + "'", serializable10, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        serializableNode30.parent = serializableNode35;
        int int39 = serializableNode30.rank;
        java.lang.Class<?> wildcardClass40 = serializableNode30.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass40);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass40);
        serializableNode28.parent = serializableNode42;
        java.lang.Class<?> wildcardClass44 = serializableNode28.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        serializableNode3.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode8.parent;
        serializableNode8.rank = (byte) 10;
        int int16 = serializableNode8.rank;
        int int17 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode8.parent;
        serializableNode6.parent = serializableNode8;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNotNull(serializableNode18);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        java.lang.Class<?> wildcardClass7 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        java.lang.Class<?> wildcardClass10 = serializableNode8.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode14.parent = serializableNode18;
        serializableNode12.parent = serializableNode14;
        int int21 = serializableNode12.rank;
        serializableNode1.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        serializableNode1.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        serializableNode29.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode29.parent;
        serializableNode1.parent = serializableNode29;
        serializableNode1.rank = (short) 100;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(serializableNode34);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        serializableNode1.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        serializableNode25.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        serializableNode38.parent = serializableNode42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        serializableNode38.parent = serializableNode45;
        int int50 = serializableNode38.rank;
        java.io.Serializable serializable51 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        java.io.Serializable serializable56 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode53.parent;
        java.io.Serializable serializable58 = serializableNode57.data;
        int int59 = serializableNode57.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode57.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode57.parent;
        serializableNode38.parent = serializableNode57;
        serializableNode32.parent = serializableNode38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable66 = serializableNode65.data;
        int int67 = serializableNode65.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode65.parent = serializableNode69;
        serializableNode65.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int75 = serializableNode74.rank;
        int int76 = serializableNode74.rank;
        serializableNode74.data = (short) 100;
        serializableNode65.parent = serializableNode74;
        java.io.Serializable serializable80 = serializableNode74.data;
        int int81 = serializableNode74.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = serializableNode74.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode84 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int85 = serializableNode84.rank;
        int int86 = serializableNode84.rank;
        serializableNode84.rank = (short) -1;
        serializableNode84.rank = (short) -1;
        java.io.Serializable serializable91 = serializableNode84.data;
        int int92 = serializableNode84.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode93 = serializableNode84.parent;
        serializableNode82.parent = serializableNode93;
        java.lang.Class<?> wildcardClass95 = serializableNode82.getClass();
        serializableNode32.data = wildcardClass95;
        serializableNode1.data = wildcardClass95;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertEquals("'" + serializable80 + "' != '" + (short) 100 + "'", serializable80, (short) 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(serializableNode82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertEquals("'" + serializable91 + "' != '" + 10L + "'", serializable91, 10L);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(serializableNode93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        serializableNode20.rank = (short) -1;
        serializableNode20.rank = (short) -1;
        java.io.Serializable serializable27 = serializableNode20.data;
        int int28 = serializableNode20.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode20.parent = serializableNode30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        java.io.Serializable serializable39 = serializableNode38.data;
        int int40 = serializableNode38.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode48.parent = serializableNode52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int56 = serializableNode55.rank;
        int int57 = serializableNode55.rank;
        java.io.Serializable serializable58 = serializableNode55.data;
        serializableNode48.parent = serializableNode55;
        int int60 = serializableNode48.rank;
        java.io.Serializable serializable61 = serializableNode48.data;
        serializableNode42.parent = serializableNode48;
        serializableNode30.parent = serializableNode42;
        java.lang.Class<?> wildcardClass64 = serializableNode30.getClass();
        serializableNode10.data = wildcardClass64;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass64);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        int int28 = serializableNode1.rank;
        serializableNode1.rank = (byte) 0;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) 100);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        java.io.Serializable serializable12 = serializableNode9.data;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        java.lang.Class<?> wildcardClass20 = serializableNode19.getClass();
        serializableNode9.data = wildcardClass20;
        serializableNode3.data = wildcardClass20;
        serializableNode1.data = wildcardClass20;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode24 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int2 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass3 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass3);
        java.io.Serializable serializable5 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable5);
        int int7 = serializableNode6.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(serializable5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode15 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        java.lang.Class<?> wildcardClass16 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.rank = (byte) 0;
        java.lang.Class<?> wildcardClass14 = serializableNode9.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        serializableNode10.rank = (short) -1;
        java.lang.Class<?> wildcardClass14 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        serializableNode1.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(serializableNode18);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc> constantDescNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc>((java.lang.constant.ConstantDesc) (-1.0f));
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        serializableNode1.rank = (short) 1;
        java.io.Serializable serializable9 = serializableNode1.data;
        serializableNode1.rank = (short) 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + (byte) 1 + "'", serializable9, (byte) 1);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        int int14 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode12.parent = serializableNode16;
        serializableNode12.data = '#';
        serializableNode10.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode10.parent;
        java.io.Serializable serializable22 = serializableNode21.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + '#' + "'", serializable22, '#');
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int4 = serializableNode3.rank;
        int int5 = serializableNode3.rank;
        java.io.Serializable serializable6 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        java.io.Serializable serializable10 = serializableNode7.data;
        java.io.Serializable serializable11 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode13.parent;
        java.lang.Class<?> wildcardClass18 = serializableNode17.getClass();
        serializableNode7.data = wildcardClass18;
        java.lang.Class<?> wildcardClass20 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass20;
        int int22 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass23 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        serializableNode5.data = (byte) -1;
        int int11 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode5.parent;
        java.io.Serializable serializable13 = serializableNode5.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + (byte) -1 + "'", serializable13, (byte) -1);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode1.parent;
        serializableNode12.data = (short) 1;
        int int15 = serializableNode12.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        java.lang.Class<?> wildcardClass7 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        serializableNode17.rank = (short) -1;
        int int21 = serializableNode17.rank;
        serializableNode12.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        java.io.Serializable serializable29 = serializableNode28.data;
        int int30 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode28.parent;
        int int32 = serializableNode28.rank;
        serializableNode12.parent = serializableNode28;
        serializableNode8.parent = serializableNode28;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        java.lang.Class<?> wildcardClass19 = serializableNode18.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass10 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type> typeNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type>((java.lang.reflect.Type) wildcardClass10);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        serializableNode9.rank = (byte) 1;
        serializableNode9.data = 10.0d;
        java.lang.Class<?> wildcardClass17 = serializableNode9.getClass();
        serializableNode5.data = wildcardClass17;
        java.io.Serializable serializable19 = serializableNode5.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(serializable19);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        serializableNode22.parent = serializableNode26;
        int int28 = serializableNode26.rank;
        serializableNode16.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode31.parent;
        serializableNode16.parent = serializableNode31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode31.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        serializableNode40.parent = serializableNode44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int48 = serializableNode47.rank;
        int int49 = serializableNode47.rank;
        java.io.Serializable serializable50 = serializableNode47.data;
        serializableNode47.rank = (byte) 1;
        java.lang.Class<?> wildcardClass53 = serializableNode47.getClass();
        serializableNode40.data = wildcardClass53;
        java.io.Serializable serializable55 = serializableNode40.data;
        serializableNode31.data = serializable55;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode58.parent;
        serializableNode58.rank = (byte) 10;
        int int66 = serializableNode58.rank;
        int int67 = serializableNode58.rank;
        serializableNode31.parent = serializableNode58;
        serializableNode8.parent = serializableNode58;
        java.io.Serializable serializable70 = serializableNode8.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(serializable55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        serializableNode1.data = 10.0d;
        int int9 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass10 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 0.0d);
        int int2 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass3 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        int int18 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode10.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode21);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        int int2 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        int int9 = serializableNode7.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        serializableNode15.rank = (byte) 1;
        serializableNode15.data = 10.0d;
        serializableNode13.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode13.parent;
        java.lang.Class<?> wildcardClass25 = serializableNode13.getClass();
        serializableNode1.data = wildcardClass25;
        int int27 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode21 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        serializableNode7.parent = serializableNode27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode27.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode33);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        int int8 = serializableNode1.rank;
        java.io.Serializable serializable9 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode11.parent;
        serializableNode11.rank = (byte) 10;
        serializableNode1.parent = serializableNode11;
        java.io.Serializable serializable20 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        java.io.Serializable serializable14 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        serializableNode20.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        int int27 = serializableNode25.rank;
        serializableNode25.rank = 'a';
        java.lang.Class<?> wildcardClass30 = serializableNode25.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass30);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass30);
        serializableNode32.rank = ' ';
        java.io.Serializable serializable35 = serializableNode32.data;
        serializableNode23.data = serializable35;
        serializableNode16.data = serializable35;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializable14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(serializable35);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        serializableNode1.rank = '#';
        serializableNode1.rank = 97;
        serializableNode1.rank = 97;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode9.parent;
        java.lang.Class<?> wildcardClass15 = serializableNode9.getClass();
        serializableNode1.data = wildcardClass15;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode1.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        int int17 = serializableNode15.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode15.parent = serializableNode19;
        serializableNode15.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        serializableNode24.data = (short) 100;
        serializableNode15.parent = serializableNode24;
        java.io.Serializable serializable30 = serializableNode24.data;
        int int31 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (short) -1;
        serializableNode34.rank = (short) -1;
        java.io.Serializable serializable41 = serializableNode34.data;
        int int42 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode34.parent;
        serializableNode32.parent = serializableNode43;
        java.lang.Class<?> wildcardClass45 = serializableNode32.getClass();
        serializableNode12.data = wildcardClass45;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + (short) 100 + "'", serializable30, (short) 100);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode10.parent;
        serializableNode11.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        serializableNode15.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        serializableNode11.parent = serializableNode24;
        serializableNode8.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence> charSequenceNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence>((java.lang.CharSequence) "");
        java.lang.Class<?> wildcardClass29 = charSequenceNode28.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass29);
        serializableNode11.parent = serializableNode30;
        java.lang.Class<?> wildcardClass32 = serializableNode11.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        java.lang.Class<?> wildcardClass19 = serializableNode13.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass19);
        serializableNode20.rank = ' ';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        int int27 = serializableNode24.rank;
        java.io.Serializable serializable28 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode30.parent;
        serializableNode30.rank = (byte) 100;
        java.lang.Class<?> wildcardClass34 = serializableNode30.getClass();
        serializableNode24.data = wildcardClass34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass39 = serializableNode38.getClass();
        serializableNode36.data = wildcardClass39;
        int int41 = serializableNode36.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        int int45 = serializableNode43.rank;
        java.io.Serializable serializable46 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable49 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode48.parent;
        serializableNode43.parent = serializableNode48;
        int int52 = serializableNode43.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        java.io.Serializable serializable57 = serializableNode54.data;
        serializableNode54.rank = (byte) 1;
        serializableNode54.data = 10.0d;
        java.lang.Class<?> wildcardClass62 = serializableNode54.getClass();
        serializableNode43.data = wildcardClass62;
        serializableNode36.data = wildcardClass62;
        serializableNode20.parent = serializableNode36;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        serializableNode8.rank = '4';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass13 = serializableNode12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass13);
        serializableNode8.data = wildcardClass13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        serializableNode17.rank = (byte) 1;
        int int23 = serializableNode17.rank;
        int int24 = serializableNode17.rank;
        serializableNode8.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode8.parent;
        java.io.Serializable serializable27 = serializableNode26.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        serializableNode17.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode21.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        serializableNode17.parent = serializableNode30;
        serializableNode14.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode39 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode34);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable48 = serializableNode47.data;
        int int49 = serializableNode47.rank;
        serializableNode47.rank = 'a';
        java.lang.Class<?> wildcardClass52 = serializableNode47.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass52);
        serializableNode41.data = wildcardClass52;
        serializableNode34.data = wildcardClass52;
        serializableNode17.data = wildcardClass52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode58.parent;
        java.io.Serializable serializable63 = serializableNode62.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode62.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode62.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable68 = serializableNode67.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode67.parent;
        java.io.Serializable serializable70 = serializableNode69.data;
        serializableNode69.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode69.parent;
        serializableNode65.parent = serializableNode73;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable77 = serializableNode76.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = serializableNode76.parent;
        int int79 = serializableNode76.rank;
        java.io.Serializable serializable80 = serializableNode76.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = serializableNode82.parent;
        serializableNode82.rank = (byte) 100;
        java.lang.Class<?> wildcardClass86 = serializableNode82.getClass();
        serializableNode76.data = wildcardClass86;
        serializableNode73.parent = serializableNode76;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode90 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass91 = serializableNode90.getClass();
        serializableNode76.data = wildcardClass91;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode93 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass91);
        serializableNode17.data = wildcardClass91;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertEquals("'" + serializable77 + "' != '" + 10L + "'", serializable77, 10L);
        org.junit.Assert.assertNotNull(serializableNode78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + serializable80 + "' != '" + 10L + "'", serializable80, 10L);
        org.junit.Assert.assertNotNull(serializableNode83);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        serializableNode4.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode4);
        org.junit.Assert.assertNotNull(serializableNode8);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        serializableNode8.rank = (short) 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode5.rank = 0;
        serializableNode5.data = 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode5.parent;
        serializableNode11.rank = 'a';
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        serializableNode14.rank = (short) -1;
        serializableNode14.rank = (short) -1;
        java.io.Serializable serializable21 = serializableNode14.data;
        int int22 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode14.parent = serializableNode24;
        serializableNode1.parent = serializableNode14;
        java.io.Serializable serializable27 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode14.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        java.io.Serializable serializable20 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode5.parent;
        serializableNode21.rank = 97;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializable20);
        org.junit.Assert.assertNotNull(serializableNode21);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        int int19 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        java.io.Serializable serializable28 = serializableNode25.data;
        java.io.Serializable serializable29 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode31.parent;
        java.lang.Class<?> wildcardClass36 = serializableNode35.getClass();
        serializableNode25.data = wildcardClass36;
        java.io.Serializable serializable38 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable38);
        serializableNode39.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        int int45 = serializableNode43.rank;
        java.io.Serializable serializable46 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode43.parent;
        java.io.Serializable serializable48 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode47.parent;
        java.io.Serializable serializable50 = serializableNode47.data;
        java.io.Serializable serializable51 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        java.io.Serializable serializable56 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode53.parent;
        java.lang.Class<?> wildcardClass58 = serializableNode57.getClass();
        serializableNode47.data = wildcardClass58;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode47.parent;
        serializableNode60.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode60.parent;
        serializableNode39.parent = serializableNode60;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode60.parent;
        serializableNode17.parent = serializableNode60;
        serializableNode17.rank = (short) -1;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(serializable38);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertNotNull(serializableNode65);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode1.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass14 = serializableNode13.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        java.io.Serializable serializable0 = null;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable0);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable4 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode3.parent;
        int int6 = serializableNode3.rank;
        java.io.Serializable serializable7 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        serializableNode9.rank = (byte) 100;
        java.lang.Class<?> wildcardClass13 = serializableNode9.getClass();
        serializableNode3.data = wildcardClass13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode21.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        serializableNode21.parent = serializableNode28;
        serializableNode3.parent = serializableNode21;
        serializableNode1.parent = serializableNode3;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        serializableNode3.parent = serializableNode36;
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        int int8 = serializableNode5.rank;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode11.parent;
        serializableNode11.rank = (byte) 100;
        java.lang.Class<?> wildcardClass15 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode23.parent = serializableNode27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        serializableNode23.parent = serializableNode30;
        serializableNode5.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode5.parent;
        java.io.Serializable serializable37 = serializableNode36.data;
        serializableNode1.parent = serializableNode36;
        java.io.Serializable serializable39 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        int int10 = serializableNode9.rank;
        serializableNode9.rank = 35;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        serializableNode5.rank = 97;
        serializableNode5.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        int int25 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode23.parent = serializableNode27;
        serializableNode23.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        serializableNode32.data = (short) 100;
        serializableNode23.parent = serializableNode32;
        serializableNode5.parent = serializableNode23;
        int int39 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode5.parent;
        java.lang.Class<?> wildcardClass41 = serializableNode5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        java.io.Serializable serializable8 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        int int32 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable35 = serializableNode34.data;
        int int36 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode34.parent = serializableNode38;
        serializableNode38.data = 0.0d;
        serializableNode29.parent = serializableNode38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode29.parent;
        serializableNode18.parent = serializableNode43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        serializableNode46.data = (byte) 1;
        int int52 = serializableNode46.rank;
        int int53 = serializableNode46.rank;
        java.lang.Class<?> wildcardClass54 = serializableNode46.getClass();
        serializableNode43.data = wildcardClass54;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.data = (-1);
        int int14 = serializableNode9.rank;
        serializableNode9.data = 97;
        java.lang.Class<?> wildcardClass17 = serializableNode9.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode7.rank = (byte) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        serializableNode15.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        serializableNode29.rank = (byte) 1;
        serializableNode29.data = 10.0d;
        java.lang.Class<?> wildcardClass37 = serializableNode29.getClass();
        serializableNode25.data = wildcardClass37;
        serializableNode15.data = wildcardClass37;
        serializableNode7.data = wildcardClass37;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable34 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode33.parent;
        serializableNode31.parent = serializableNode35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        serializableNode38.rank = (byte) 1;
        java.lang.Class<?> wildcardClass44 = serializableNode38.getClass();
        serializableNode31.data = wildcardClass44;
        java.io.Serializable serializable46 = serializableNode31.data;
        serializableNode22.data = serializable46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int50 = serializableNode49.rank;
        int int51 = serializableNode49.rank;
        java.io.Serializable serializable52 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode49.parent;
        java.io.Serializable serializable54 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode53.parent;
        java.io.Serializable serializable56 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode58.parent;
        java.io.Serializable serializable63 = serializableNode62.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode62.parent;
        java.io.Serializable serializable65 = serializableNode62.data;
        java.io.Serializable serializable66 = serializableNode62.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int69 = serializableNode68.rank;
        int int70 = serializableNode68.rank;
        java.io.Serializable serializable71 = serializableNode68.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode68.parent;
        java.lang.Class<?> wildcardClass73 = serializableNode72.getClass();
        serializableNode62.data = wildcardClass73;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode62.parent;
        serializableNode53.parent = serializableNode62;
        java.lang.Class<?> wildcardClass77 = serializableNode62.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass77);
        serializableNode22.data = wildcardClass77;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(serializable46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + serializable71 + "' != '" + 10L + "'", serializable71, 10L);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode3.rank;
        serializableNode3.rank = '4';
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        java.io.Serializable serializable3 = serializableNode1.data;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertEquals("'" + serializable3 + "' != '" + (byte) 10 + "'", serializable3, (byte) 10);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        serializableNode1.rank = '#';
        java.io.Serializable serializable10 = serializableNode1.data;
        int int11 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 35 + "'", int11 == 35);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        serializableNode1.rank = '4';
        serializableNode1.rank = (byte) 10;
        java.lang.Class<?> wildcardClass21 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        java.io.Serializable serializable21 = null;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable21);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        int int27 = serializableNode24.rank;
        java.io.Serializable serializable28 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode30.parent;
        serializableNode30.rank = (byte) 100;
        java.lang.Class<?> wildcardClass34 = serializableNode30.getClass();
        serializableNode24.data = wildcardClass34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable45 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode44.parent;
        serializableNode42.parent = serializableNode46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int50 = serializableNode49.rank;
        int int51 = serializableNode49.rank;
        java.io.Serializable serializable52 = serializableNode49.data;
        serializableNode42.parent = serializableNode49;
        serializableNode24.parent = serializableNode42;
        serializableNode22.parent = serializableNode24;
        java.io.Serializable serializable56 = serializableNode22.data;
        serializableNode22.rank = (byte) -1;
        serializableNode19.parent = serializableNode22;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNull(serializable56);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        int int7 = serializableNode6.rank;
        java.io.Serializable serializable8 = serializableNode6.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        serializableNode5.rank = 97;
        serializableNode5.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        int int25 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode23.parent = serializableNode27;
        serializableNode23.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        serializableNode32.data = (short) 100;
        serializableNode23.parent = serializableNode32;
        serializableNode5.parent = serializableNode23;
        int int39 = serializableNode5.rank;
        java.io.Serializable serializable40 = serializableNode5.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertNotNull(serializable40);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        java.io.Serializable serializable11 = serializableNode1.data;
        int int12 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = null;
        serializableNode1.parent = serializableNode13;
        int int15 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        java.io.Serializable serializable17 = serializableNode12.data;
        java.io.Serializable serializable18 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        java.io.Serializable serializable29 = serializableNode26.data;
        java.io.Serializable serializable30 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        java.lang.Class<?> wildcardClass37 = serializableNode36.getClass();
        serializableNode26.data = wildcardClass37;
        serializableNode20.data = wildcardClass37;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass37);
        serializableNode12.data = wildcardClass37;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        java.lang.Class<?> wildcardClass10 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        serializableNode18.parent = serializableNode22;
        int int24 = serializableNode18.rank;
        serializableNode18.rank = 'a';
        java.lang.Class<?> wildcardClass27 = serializableNode18.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass27);
        serializableNode12.data = wildcardClass27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode12.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializableNode30);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        serializableNode4.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode4.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode10.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        serializableNode8.parent = serializableNode15;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode4);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        int int22 = serializableNode19.rank;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        serializableNode25.rank = (byte) 100;
        java.lang.Class<?> wildcardClass29 = serializableNode25.getClass();
        serializableNode19.data = wildcardClass29;
        serializableNode16.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        serializableNode37.parent = serializableNode42;
        serializableNode37.data = true;
        serializableNode33.parent = serializableNode37;
        serializableNode19.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        java.io.Serializable serializable55 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        java.io.Serializable serializable57 = serializableNode56.data;
        int int58 = serializableNode56.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode56.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int62 = serializableNode61.rank;
        int int63 = serializableNode61.rank;
        serializableNode61.rank = (short) -1;
        serializableNode61.rank = (short) -1;
        java.io.Serializable serializable68 = serializableNode61.data;
        int int69 = serializableNode61.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode61.parent;
        serializableNode56.parent = serializableNode61;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode56.parent;
        serializableNode50.parent = serializableNode56;
        int int74 = serializableNode50.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(serializableNode70);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.data = (short) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        java.io.Serializable serializable16 = serializableNode13.data;
        java.io.Serializable serializable17 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode13.data = wildcardClass24;
        java.lang.Class<?> wildcardClass26 = serializableNode13.getClass();
        serializableNode7.data = wildcardClass26;
        serializableNode1.parent = serializableNode7;
        serializableNode1.rank = (short) 0;
        int int31 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode17.parent = serializableNode30;
        serializableNode17.data = 10.0d;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode17.parent;
        java.io.Serializable serializable35 = serializableNode17.data;
        java.lang.Class<?> wildcardClass36 = serializableNode17.getClass();
        serializableNode10.data = wildcardClass36;
        int int38 = serializableNode10.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10.0d + "'", serializable35, 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        serializableNode6.data = 10.0d;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode6.parent;
        int int24 = serializableNode6.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        java.lang.Class<?> wildcardClass18 = serializableNode17.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc> constantDescNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc>((java.lang.constant.ConstantDesc) 0);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (-1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        serializableNode16.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        serializableNode23.rank = (byte) 1;
        java.lang.Class<?> wildcardClass29 = serializableNode23.getClass();
        serializableNode16.data = wildcardClass29;
        java.io.Serializable serializable31 = serializableNode16.data;
        serializableNode1.data = serializable31;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(serializable31);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        java.lang.Class<?> wildcardClass7 = serializableNode3.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        serializableNode9.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        serializableNode13.rank = (byte) 1;
        serializableNode13.data = 10.0d;
        serializableNode13.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode13.parent;
        serializableNode9.parent = serializableNode13;
        java.lang.Class<?> wildcardClass26 = serializableNode9.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode26.parent = serializableNode30;
        int int32 = serializableNode30.rank;
        serializableNode30.data = (-1);
        int int35 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode37.parent;
        serializableNode37.rank = (byte) 10;
        serializableNode37.data = 10L;
        serializableNode30.parent = serializableNode37;
        serializableNode19.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        java.io.Serializable serializable53 = serializableNode52.data;
        serializableNode52.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        int int57 = serializableNode56.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode56.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable62 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode61.parent;
        int int64 = serializableNode61.rank;
        java.io.Serializable serializable65 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode67.parent;
        serializableNode67.rank = (byte) 100;
        java.lang.Class<?> wildcardClass71 = serializableNode67.getClass();
        serializableNode61.data = wildcardClass71;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode61.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass76 = serializableNode75.getClass();
        serializableNode73.data = wildcardClass76;
        serializableNode73.rank = (short) 100;
        serializableNode58.parent = serializableNode73;
        serializableNode37.parent = serializableNode73;
        int int82 = serializableNode37.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass11 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode14.parent;
        serializableNode14.rank = (byte) 10;
        int int22 = serializableNode14.rank;
        int int23 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode14.parent;
        serializableNode12.parent = serializableNode25;
        java.lang.Class<?> wildcardClass27 = serializableNode25.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        serializableNode18.rank = 'a';
        java.lang.Class<?> wildcardClass21 = serializableNode18.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode24.data = wildcardClass27;
        serializableNode24.rank = (short) 100;
        serializableNode9.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode33.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode40.parent;
        java.io.Serializable serializable45 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode44.parent;
        java.io.Serializable serializable47 = serializableNode44.data;
        java.io.Serializable serializable48 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int51 = serializableNode50.rank;
        int int52 = serializableNode50.rank;
        java.io.Serializable serializable53 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode50.parent;
        java.lang.Class<?> wildcardClass55 = serializableNode54.getClass();
        serializableNode44.data = wildcardClass55;
        serializableNode33.data = wildcardClass55;
        serializableNode33.rank = 0;
        serializableNode33.data = "";
        java.lang.Class<?> wildcardClass62 = serializableNode33.getClass();
        serializableNode9.data = wildcardClass62;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass62);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        java.io.Serializable serializable18 = serializableNode6.data;
        int int19 = serializableNode6.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.data = (-1);
        int int14 = serializableNode9.rank;
        java.io.Serializable serializable15 = serializableNode9.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + (-1) + "'", serializable15, (-1));
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode19.rank = 0;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        java.io.Serializable serializable18 = serializableNode6.data;
        java.lang.Class<?> wildcardClass19 = serializable18.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode7.parent = serializableNode11;
        java.lang.Class<?> wildcardClass13 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode1.parent = serializableNode14;
        serializableNode1.data = 1;
        int int18 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        int int14 = serializableNode13.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass11 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode14.parent;
        serializableNode14.rank = (byte) 10;
        int int22 = serializableNode14.rank;
        int int23 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode14.parent;
        serializableNode12.parent = serializableNode25;
        java.io.Serializable serializable27 = serializableNode12.data;
        java.lang.Class<?> wildcardClass28 = serializable27.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializable27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        int int7 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode10.parent = serializableNode15;
        int int19 = serializableNode10.rank;
        java.lang.Class<?> wildcardClass20 = serializableNode10.getClass();
        serializableNode8.data = wildcardClass20;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        int int22 = serializableNode19.rank;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        serializableNode25.rank = (byte) 100;
        java.lang.Class<?> wildcardClass29 = serializableNode25.getClass();
        serializableNode19.data = wildcardClass29;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass29);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass29);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode34.parent;
        serializableNode35.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int40 = serializableNode39.rank;
        int int41 = serializableNode39.rank;
        java.io.Serializable serializable42 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable45 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode44.parent;
        serializableNode39.parent = serializableNode44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        serializableNode35.parent = serializableNode48;
        serializableNode32.parent = serializableNode35;
        serializableNode35.rank = (byte) -1;
        serializableNode13.parent = serializableNode35;
        int int54 = serializableNode13.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        java.io.Serializable serializable8 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc> constantDescNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.ConstantDesc>((java.lang.constant.ConstantDesc) 35);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        serializableNode5.rank = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode5.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        java.io.Serializable serializable18 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        java.lang.Class<?> wildcardClass20 = serializableNode10.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + (short) 100 + "'", serializable18, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        serializableNode1.data = 10.0d;
        serializableNode1.rank = (byte) 100;
        serializableNode1.rank = (byte) 10;
        java.io.Serializable serializable13 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10.0d + "'", serializable13, 10.0d);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        serializableNode1.rank = (short) -1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        int int4 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass5 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        java.lang.Class<?> wildcardClass9 = serializableNode5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        java.lang.Class<?> wildcardClass20 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass20);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode21.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(serializableNode22);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        int int20 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode1.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (byte) 0;
        serializableNode34.rank = (byte) 1;
        int int41 = serializableNode34.rank;
        java.io.Serializable serializable42 = serializableNode34.data;
        serializableNode1.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode34.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass4 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass4);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass12);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass12);
        serializableNode5.data = wildcardClass12;
        int int16 = serializableNode5.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode1.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode13.parent = serializableNode16;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode16);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass7 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        java.io.Serializable serializable10 = serializableNode9.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(serializable10);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        serializableNode1.rank = '4';
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode1.parent;
        serializableNode1.rank = 35;
        serializableNode1.rank = 0;
        int int26 = serializableNode1.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        java.lang.Class<?> wildcardClass9 = serializableNode8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        java.io.Serializable serializable33 = serializableNode30.data;
        java.io.Serializable serializable34 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode36.parent;
        java.lang.Class<?> wildcardClass41 = serializableNode40.getClass();
        serializableNode30.data = wildcardClass41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode30.parent;
        serializableNode21.parent = serializableNode30;
        java.lang.Class<?> wildcardClass45 = serializableNode30.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass45);
        serializableNode15.parent = serializableNode46;
        java.io.Serializable serializable48 = serializableNode46.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(serializable48);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode15 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        serializableNode18.rank = (byte) 1;
        int int24 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode18.parent;
        serializableNode16.parent = serializableNode18;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(serializableNode25);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        java.io.Serializable serializable7 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode4.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        java.lang.Class<?> wildcardClass15 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        serializableNode4.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode18 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode4);
        serializableNode1.parent = serializableNode4;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        int int30 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode28.parent = serializableNode32;
        serializableNode32.rank = 0;
        serializableNode32.data = 100;
        serializableNode26.parent = serializableNode32;
        serializableNode1.parent = serializableNode26;
        int int40 = serializableNode1.rank;
        int int41 = serializableNode1.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10.0f + "'", serializable2, 10.0f);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode14.parent = serializableNode18;
        serializableNode12.parent = serializableNode14;
        int int21 = serializableNode12.rank;
        serializableNode1.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        serializableNode24.rank = (byte) 1;
        serializableNode24.data = 10.0d;
        java.lang.Class<?> wildcardClass32 = serializableNode24.getClass();
        serializableNode12.data = wildcardClass32;
        serializableNode12.data = 100.0d;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        java.io.Serializable serializable21 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode17.parent;
        serializableNode17.rank = (short) -1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        serializableNode1.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        serializableNode15.rank = (short) -1;
        int int19 = serializableNode15.rank;
        serializableNode1.parent = serializableNode15;
        java.io.Serializable serializable21 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode15.parent;
        serializableNode15.rank = (-1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        int int18 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        java.io.Serializable serializable21 = serializableNode5.data;
        java.io.Serializable serializable22 = serializableNode5.data;
        java.lang.Class<?> wildcardClass23 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass23);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.rank = (byte) 0;
        serializableNode9.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        serializableNode17.parent = serializableNode22;
        serializableNode17.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        java.io.Serializable serializable32 = serializableNode31.data;
        serializableNode31.rank = (short) -1;
        int int35 = serializableNode31.rank;
        serializableNode17.parent = serializableNode31;
        java.io.Serializable serializable37 = serializableNode31.data;
        serializableNode31.rank = 52;
        serializableNode9.parent = serializableNode31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode9.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode13.parent;
        java.io.Serializable serializable15 = serializableNode13.data;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        java.io.Serializable serializable34 = serializableNode31.data;
        java.io.Serializable serializable35 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        java.lang.Class<?> wildcardClass42 = serializableNode41.getClass();
        serializableNode31.data = wildcardClass42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode31.parent;
        serializableNode22.parent = serializableNode31;
        java.lang.Class<?> wildcardClass46 = serializableNode31.getClass();
        serializableNode13.data = wildcardClass46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass46);
        serializableNode1.parent = serializableNode48;
        serializableNode48.rank = (short) 1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        serializableNode22.parent = serializableNode34;
        java.lang.Class<?> wildcardClass37 = serializableNode34.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode13.parent;
        java.io.Serializable serializable15 = serializableNode13.data;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        java.io.Serializable serializable34 = serializableNode31.data;
        java.io.Serializable serializable35 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        java.lang.Class<?> wildcardClass42 = serializableNode41.getClass();
        serializableNode31.data = wildcardClass42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode31.parent;
        serializableNode22.parent = serializableNode31;
        java.lang.Class<?> wildcardClass46 = serializableNode31.getClass();
        serializableNode13.data = wildcardClass46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass46);
        serializableNode1.parent = serializableNode48;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int52 = serializableNode51.rank;
        int int53 = serializableNode51.rank;
        java.io.Serializable serializable54 = serializableNode51.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode51.parent;
        java.io.Serializable serializable56 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode55.parent;
        java.io.Serializable serializable58 = serializableNode55.data;
        java.io.Serializable serializable59 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int62 = serializableNode61.rank;
        int int63 = serializableNode61.rank;
        java.io.Serializable serializable64 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode61.parent;
        java.lang.Class<?> wildcardClass66 = serializableNode65.getClass();
        serializableNode55.data = wildcardClass66;
        serializableNode55.rank = 97;
        serializableNode55.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable74 = serializableNode73.data;
        int int75 = serializableNode73.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode73.parent = serializableNode77;
        serializableNode73.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int83 = serializableNode82.rank;
        int int84 = serializableNode82.rank;
        serializableNode82.data = (short) 100;
        serializableNode73.parent = serializableNode82;
        serializableNode55.parent = serializableNode73;
        int int89 = serializableNode55.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode90 = serializableNode55.parent;
        serializableNode48.parent = serializableNode55;
        int int92 = serializableNode48.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + serializable74 + "' != '" + 10L + "'", serializable74, 10L);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 10 + "'", int89 == 10);
        org.junit.Assert.assertNotNull(serializableNode90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        java.io.Serializable serializable20 = serializableNode5.data;
        java.lang.Class<?> wildcardClass21 = serializable20.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializable20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode5.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode13.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        int int19 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode10.parent = serializableNode23;
        serializableNode3.parent = serializableNode10;
        serializableNode3.rank = (byte) -1;
        java.io.Serializable serializable28 = serializableNode3.data;
        java.lang.Class<?> wildcardClass29 = serializable28.getClass();
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        java.io.Serializable serializable20 = serializableNode5.data;
        java.io.Serializable serializable21 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        int int26 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        int int30 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode28.parent = serializableNode32;
        serializableNode32.data = 0.0d;
        serializableNode23.parent = serializableNode32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode23.parent;
        serializableNode23.rank = (short) 0;
        serializableNode5.parent = serializableNode23;
        serializableNode5.rank = (byte) -1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializable20);
        org.junit.Assert.assertNotNull(serializable21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(serializableNode37);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        serializableNode23.rank = (short) -1;
        java.lang.Class<?> wildcardClass27 = serializableNode23.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass27);
        serializableNode10.data = wildcardClass27;
        serializableNode10.rank = (short) -1;
        int int32 = serializableNode10.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode21.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        serializableNode21.parent = serializableNode28;
        int int33 = serializableNode21.rank;
        serializableNode21.rank = 100;
        serializableNode15.parent = serializableNode21;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable53 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        serializableNode50.parent = serializableNode54;
        int int56 = serializableNode54.rank;
        serializableNode44.parent = serializableNode54;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode59.parent;
        serializableNode44.parent = serializableNode59;
        serializableNode59.rank = (short) -1;
        serializableNode21.parent = serializableNode59;
        int int65 = serializableNode59.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode5.parent;
        serializableNode5.rank = 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode5.parent;
        java.io.Serializable serializable24 = serializableNode5.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializable24);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode24.data = wildcardClass27;
        serializableNode24.rank = (short) 100;
        serializableNode9.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode24.parent;
        serializableNode24.rank = '4';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        serializableNode36.rank = (byte) 1;
        int int42 = serializableNode36.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        java.io.Serializable serializable47 = serializableNode45.data;
        java.lang.Class<?> wildcardClass48 = serializable47.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass48);
        serializableNode36.parent = serializableNode49;
        serializableNode24.parent = serializableNode36;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }
}

