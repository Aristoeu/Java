package datastructures.bloomfilter;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) ' ', 10);
        java.lang.Class<?> wildcardClass3 = typeDescriptorBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) (byte) 1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass14 = constantDescBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter18.insert((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter34.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter48.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass51);
        boolean boolean53 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass51);
        boolean boolean54 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter57.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass66 = wildcardClassOfFieldBloomFilter65.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass66);
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass66);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass66);
        constableBloomFilter18.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter74.insert((java.lang.constant.Constable) 10);
        boolean boolean78 = constableBloomFilter74.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable79 = null;
        boolean boolean80 = constableBloomFilter74.contains(constable79);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter74.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass81);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter85 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter85.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter85.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter85.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass92 = constableBloomFilter85.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter18.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass94);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) ' ', (int) ' ');
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) '4');
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter13.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter13.insert((java.lang.constant.Constable) (-1L));
        boolean boolean21 = constableBloomFilter13.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter13.getClass();
        boolean boolean25 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass24);
        boolean boolean27 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        constableBloomFilter30.insert(constable31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass48 = wildcardClassOfFieldBloomFilter47.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass51);
        boolean boolean54 = constableBloomFilter44.contains((java.lang.constant.Constable) '#');
        constableBloomFilter44.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter44.getClass();
        boolean boolean58 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass57);
        boolean boolean59 = constableBloomFilter30.contains((java.lang.constant.Constable) boolean58);
        constableBloomFilter30.insert((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass62 = constableBloomFilter30.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 10);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(100, (int) 'a');
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) 10);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass13 = wildcardClassOfFieldBloomFilter12.getClass();
        boolean boolean14 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter17.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter17.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter17.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter26.insert((java.lang.constant.Constable) 10);
        boolean boolean30 = constableBloomFilter26.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter26.contains(constable31);
        java.lang.Class<?> wildcardClass33 = constableBloomFilter26.getClass();
        boolean boolean34 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter5.insert((java.lang.constant.Constable) boolean34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter41.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter41.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter41.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter52.insert((java.lang.constant.Constable) 10);
        boolean boolean56 = constableBloomFilter52.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable57 = null;
        boolean boolean58 = constableBloomFilter52.contains(constable57);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter52.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter66.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter66.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter66.insert((java.lang.constant.Constable) (-1L));
        boolean boolean74 = constableBloomFilter66.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass75 = constableBloomFilter66.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass75);
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass75);
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass75);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass75);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass75);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 0);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass13 = wildcardClassOfFieldBloomFilter12.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass16);
        boolean boolean19 = constableBloomFilter9.contains((java.lang.constant.Constable) '#');
        constableBloomFilter9.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass22 = constableBloomFilter9.getClass();
        boolean boolean23 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass22);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter28.getClass();
        boolean boolean30 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass29);
        java.lang.constant.Constable constable31 = null;
        constableBloomFilter2.insert(constable31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter42.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        constableBloomFilter49.insert(constable50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        constableBloomFilter54.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean60 = constableBloomFilter54.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass67 = wildcardClassOfFieldBloomFilter66.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass70);
        boolean boolean73 = constableBloomFilter63.contains((java.lang.constant.Constable) '#');
        constableBloomFilter63.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass76 = constableBloomFilter63.getClass();
        boolean boolean77 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass76);
        boolean boolean78 = constableBloomFilter49.contains((java.lang.constant.Constable) boolean77);
        boolean boolean80 = constableBloomFilter49.contains((java.lang.constant.Constable) 100);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter49.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass81);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) '4', (int) ' ');
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass6 = charSequenceBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        java.lang.Class<?> wildcardClass8 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter9.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter9.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter20.insert((java.lang.constant.Constable) 10);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter20.contains(constable25);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter20.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter34.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter34.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter34.insert((java.lang.constant.Constable) (-1L));
        boolean boolean42 = constableBloomFilter34.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter34.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass43);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = constableBloomFilterBloomFilter13.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) 'a', (int) (byte) 100);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.constant.Constable constable3 = null;
        // The following exception was thrown during execution in test generation
        try {
            constableBloomFilter2.insert(constable3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass14 = constableBloomFilter5.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter2.contains(constable16);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass17 = constableBloomFilter10.getClass();
        boolean boolean18 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter23.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter23.insert((java.lang.constant.Constable) ' ');
        boolean boolean29 = constableBloomFilter23.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass36 = wildcardClassOfFieldBloomFilter35.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean42 = constableBloomFilter32.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter45.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass50);
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter55.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable61 = null;
        constableBloomFilter60.insert(constable61);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter60.getClass();
        boolean boolean64 = constableBloomFilter55.contains((java.lang.constant.Constable) wildcardClass63);
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass63);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter69.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter69.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter69.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter69.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter80.insert((java.lang.constant.Constable) 10);
        boolean boolean84 = constableBloomFilter80.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable85 = null;
        boolean boolean86 = constableBloomFilter80.contains(constable85);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter80.getClass();
        constableBloomFilter69.insert((java.lang.constant.Constable) wildcardClass87);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 1, 1);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) -1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable10 = null;
        constableBloomFilter5.insert(constable10);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter18.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter25.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter25.getClass();
        boolean boolean29 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter32.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean36 = constableBloomFilter32.contains((java.lang.constant.Constable) 100L);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass51 = constableBloomFilter44.getClass();
        boolean boolean52 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass62 = constableBloomFilter55.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass62);
        boolean boolean64 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass62);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter32.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass65);
        boolean boolean67 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean67);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) (byte) 1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = constableBloomFilterBloomFilter13.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) 'a');
        java.lang.Class<?> wildcardClass22 = constableBloomFilter21.getClass();
        boolean boolean23 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        boolean boolean30 = constableBloomFilter26.contains((java.lang.constant.Constable) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter33.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        constableBloomFilter38.insert(constable39);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter38.getClass();
        boolean boolean42 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean47 = constableBloomFilter45.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass54 = constableBloomFilterBloomFilter53.getClass();
        boolean boolean55 = constableBloomFilter50.contains((java.lang.constant.Constable) wildcardClass54);
        boolean boolean56 = constableBloomFilter45.contains((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter59.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        constableBloomFilter67.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean73 = constableBloomFilter67.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass74 = constableBloomFilter67.getClass();
        boolean boolean75 = constableBloomFilter64.contains((java.lang.constant.Constable) wildcardClass74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable79 = null;
        boolean boolean80 = constableBloomFilter78.contains(constable79);
        constableBloomFilter78.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean84 = constableBloomFilter78.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass85 = constableBloomFilter78.getClass();
        constableBloomFilter64.insert((java.lang.constant.Constable) wildcardClass85);
        boolean boolean88 = constableBloomFilter64.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter64.getClass();
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass89);
        boolean boolean91 = constableBloomFilter45.contains((java.lang.constant.Constable) wildcardClass89);
        constableBloomFilter33.insert((java.lang.constant.Constable) boolean91);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter33.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass93);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass93);
        boolean boolean96 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) 10);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) true);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        constableBloomFilter26.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean32 = constableBloomFilter26.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass33 = constableBloomFilter26.getClass();
        boolean boolean34 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass44 = constableBloomFilter37.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass44);
        boolean boolean47 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean52 = constableBloomFilter50.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter50.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean59 = constableBloomFilter57.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable63 = null;
        boolean boolean64 = constableBloomFilter62.contains(constable63);
        constableBloomFilter62.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter62.getClass();
        boolean boolean68 = constableBloomFilter57.contains((java.lang.constant.Constable) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter57.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = constableBloomFilter5.getClass();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean72 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass18);
        boolean boolean21 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter24.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean32 = constableBloomFilter24.contains((java.lang.constant.Constable) 0L);
        boolean boolean34 = constableBloomFilter24.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        boolean boolean45 = constableBloomFilter37.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter37.getClass();
        boolean boolean47 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass46);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean47);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(100, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(10, (int) (short) 0);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) (short) 0, 1);
        java.lang.Class<?> wildcardClass6 = annotatedElementBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable14 = null;
        boolean boolean15 = constableBloomFilter13.contains(constable14);
        constableBloomFilter13.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass20 = constableBloomFilter13.getClass();
        boolean boolean21 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass31);
        boolean boolean34 = constableBloomFilter10.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass38 = wildcardClassOfFieldBloomFilter37.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter42.getClass();
        boolean boolean44 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass43);
        boolean boolean45 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        boolean boolean26 = constableBloomFilter18.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter18.getClass();
        boolean boolean28 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass32 = wildcardClassOfFieldBloomFilter31.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(10, (int) (short) 0);
        java.lang.Class<?> wildcardClass37 = typeDescriptorBloomFilter36.getClass();
        boolean boolean38 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean38);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) ' ');
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass17 = constableBloomFilter10.getClass();
        boolean boolean18 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter7.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass35 = wildcardClassOfFieldBloomFilter34.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean49 = constableBloomFilter43.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass50 = constableBloomFilter43.getClass();
        boolean boolean51 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass50);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter40.getClass();
        boolean boolean53 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable14 = null;
        boolean boolean15 = constableBloomFilter13.contains(constable14);
        constableBloomFilter13.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter13.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter13.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        constableBloomFilter26.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter33.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean39 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass36);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass11 = constableBloomFilterBloomFilter10.getClass();
        boolean boolean12 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass11);
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass26 = constableBloomFilter19.getClass();
        boolean boolean27 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass37);
        boolean boolean40 = constableBloomFilter16.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass44 = wildcardClassOfFieldBloomFilter43.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass44);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass44);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = constableBloomFilterBloomFilter29.getClass();
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter41.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        constableBloomFilter48.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter55.getClass();
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass58);
        boolean boolean60 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter63.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter63.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter70.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter70.getClass();
        boolean boolean74 = constableBloomFilter63.contains((java.lang.constant.Constable) wildcardClass73);
        boolean boolean75 = constableBloomFilter34.contains((java.lang.constant.Constable) boolean74);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter34.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass17 = constableBloomFilter10.getClass();
        boolean boolean18 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter7.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass35 = wildcardClassOfFieldBloomFilter34.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean49 = constableBloomFilter43.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass50 = constableBloomFilter43.getClass();
        boolean boolean51 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass50);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter40.getClass();
        boolean boolean53 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(1, (int) '4');
        java.lang.Class<?> wildcardClass57 = constableBloomFilterBloomFilter56.getClass();
        boolean boolean58 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        constableBloomFilter5.insert(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass23 = wildcardClassOfFieldBloomFilter22.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter19.contains((java.lang.constant.Constable) '#');
        constableBloomFilter19.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter19.getClass();
        boolean boolean33 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass38 = wildcardClassOfFieldBloomFilter37.getClass();
        boolean boolean39 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass43 = typeBloomFilter42.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass51 = wildcardClassOfFieldBloomFilter50.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass54);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass60 = genericDeclarationBloomFilter59.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable65 = null;
        boolean boolean66 = constableBloomFilter64.contains(constable65);
        boolean boolean68 = constableBloomFilter64.contains((java.lang.constant.Constable) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass72 = wildcardClassOfFieldBloomFilter71.getClass();
        constableBloomFilter64.insert((java.lang.constant.Constable) wildcardClass72);
        boolean boolean74 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass72);
        boolean boolean75 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean74);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) '4', 1);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass8 = genericDeclarationBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) 100L);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        boolean boolean32 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean44 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass42);
        boolean boolean45 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter48.getClass();
        boolean boolean50 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable57 = null;
        boolean boolean58 = constableBloomFilter56.contains(constable57);
        constableBloomFilter56.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean62 = constableBloomFilter56.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass63 = constableBloomFilter56.getClass();
        boolean boolean64 = constableBloomFilter53.contains((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        constableBloomFilter67.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean73 = constableBloomFilter67.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass74 = constableBloomFilter67.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass74);
        constableBloomFilter53.insert((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass81 = typeBloomFilter80.getClass();
        boolean boolean82 = constableBloomFilter53.contains((java.lang.constant.Constable) wildcardClass81);
        boolean boolean83 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter7.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter7.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean15 = constableBloomFilter7.contains((java.lang.constant.Constable) 0L);
        boolean boolean17 = constableBloomFilter7.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        constableBloomFilter22.insert(constable23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass40 = wildcardClassOfFieldBloomFilter39.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter36.contains((java.lang.constant.Constable) '#');
        constableBloomFilter36.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass49 = constableBloomFilter36.getClass();
        boolean boolean50 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter22.contains((java.lang.constant.Constable) boolean50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass55 = wildcardClassOfFieldBloomFilter54.getClass();
        boolean boolean56 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass60 = typeBloomFilter59.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass60);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        constableBloomFilter15.insert(constable16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable21 = null;
        boolean boolean22 = constableBloomFilter20.contains(constable21);
        constableBloomFilter20.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean26 = constableBloomFilter20.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass33 = wildcardClassOfFieldBloomFilter32.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean39 = constableBloomFilter29.contains((java.lang.constant.Constable) '#');
        constableBloomFilter29.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter29.getClass();
        boolean boolean43 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass42);
        boolean boolean44 = constableBloomFilter15.contains((java.lang.constant.Constable) boolean43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass48 = wildcardClassOfFieldBloomFilter47.getClass();
        boolean boolean49 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass53 = typeBloomFilter52.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass61 = wildcardClassOfFieldBloomFilter60.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass64);
        boolean boolean67 = constableBloomFilter57.contains((java.lang.constant.Constable) '#');
        constableBloomFilter57.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass70 = constableBloomFilter57.getClass();
        boolean boolean71 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass70);
        boolean boolean72 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter10.insert((java.lang.constant.Constable) 10);
        boolean boolean14 = constableBloomFilter10.contains((java.lang.constant.Constable) true);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable32 = null;
        boolean boolean33 = constableBloomFilter31.contains(constable32);
        constableBloomFilter31.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean37 = constableBloomFilter31.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass38 = constableBloomFilter31.getClass();
        boolean boolean39 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean48 = constableBloomFilter42.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass49 = constableBloomFilter42.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass49);
        boolean boolean52 = constableBloomFilter10.contains((java.lang.constant.Constable) boolean51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable61 = null;
        boolean boolean62 = constableBloomFilter60.contains(constable61);
        boolean boolean64 = constableBloomFilter60.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter60.getClass();
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass65);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter10.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean74 = constableBloomFilter72.contains((java.lang.constant.Constable) 0L);
        boolean boolean76 = constableBloomFilter72.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter72.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter72.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass79);
        boolean boolean81 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass79);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean14 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter17.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean21 = constableBloomFilter17.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter17.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean25 = constableBloomFilter17.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass29 = constantDescBloomFilter28.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass29);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 0);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) ' ', 1);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass9 = constableBloomFilterBloomFilter8.getClass();
        boolean boolean10 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter5.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass16 = constableBloomFilter15.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass16);
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter21.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter21.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean29 = constableBloomFilter21.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter32.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean36 = constableBloomFilter32.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter32.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean40 = constableBloomFilter32.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        boolean boolean54 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        constableBloomFilter57.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass64 = constableBloomFilter57.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass64);
        boolean boolean66 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass64);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter32.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass67);
        boolean boolean69 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass67);
        boolean boolean71 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) 10.0f);
        boolean boolean14 = constableBloomFilter2.contains((java.lang.constant.Constable) 100.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass36 = wildcardClassOfFieldBloomFilter35.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass42);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean45 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable57 = null;
        boolean boolean58 = constableBloomFilter56.contains(constable57);
        constableBloomFilter56.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean62 = constableBloomFilter56.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass63 = constableBloomFilter56.getClass();
        boolean boolean64 = constableBloomFilter53.contains((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        constableBloomFilter67.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean73 = constableBloomFilter67.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass74 = constableBloomFilter67.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass74);
        boolean boolean77 = constableBloomFilter53.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass81 = wildcardClassOfFieldBloomFilter80.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass81);
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass81);
        boolean boolean84 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass81);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter17.getClass();
        boolean boolean86 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) (short) 1, (int) (short) 100);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 100, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = constableBloomFilterBloomFilter13.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean20 = constableBloomFilter18.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter23.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean27 = constableBloomFilter23.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter23.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean31 = constableBloomFilter23.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass35 = constantDescBloomFilter34.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass35);
        boolean boolean38 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (short) 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable10 = null;
        boolean boolean11 = constableBloomFilter9.contains(constable10);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        constableBloomFilter16.insert(constable17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass34 = wildcardClassOfFieldBloomFilter33.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass37);
        boolean boolean40 = constableBloomFilter30.contains((java.lang.constant.Constable) '#');
        constableBloomFilter30.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass43 = constableBloomFilter30.getClass();
        boolean boolean44 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass43);
        boolean boolean45 = constableBloomFilter16.contains((java.lang.constant.Constable) boolean44);
        boolean boolean47 = constableBloomFilter16.contains((java.lang.constant.Constable) 100);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean54 = constableBloomFilter52.contains((java.lang.constant.Constable) 0L);
        boolean boolean56 = constableBloomFilter52.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean58 = constableBloomFilter52.contains((java.lang.constant.Constable) '4');
        boolean boolean60 = constableBloomFilter52.contains((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter63.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter63.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter63.insert((java.lang.constant.Constable) (-1L));
        boolean boolean71 = constableBloomFilter63.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter63.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter63.getClass();
        boolean boolean75 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass74);
        boolean boolean77 = constableBloomFilter52.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable84 = null;
        boolean boolean85 = constableBloomFilter83.contains(constable84);
        constableBloomFilter83.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean89 = constableBloomFilter83.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass90 = constableBloomFilter83.getClass();
        boolean boolean91 = constableBloomFilter80.contains((java.lang.constant.Constable) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter80.getClass();
        boolean boolean93 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass92);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean93);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean15 = constableBloomFilter9.contains((java.lang.constant.Constable) (short) 100);
        constableBloomFilter9.insert((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass36 = wildcardClassOfFieldBloomFilter35.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass42);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter47.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter47.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter54.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter54.getClass();
        boolean boolean58 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass57);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter47.contains(constable59);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter47.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable73 = null;
        boolean boolean74 = constableBloomFilter72.contains(constable73);
        boolean boolean76 = constableBloomFilter72.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass77 = constableBloomFilter72.getClass();
        constableBloomFilter67.insert((java.lang.constant.Constable) wildcardClass77);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter67.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass79);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 100);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter83.getClass();
        boolean boolean85 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        boolean boolean42 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter31.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass54);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter2.contains(constable56);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        java.lang.Class<?> wildcardClass14 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 1, (int) (byte) 0);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 100.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass14 = wildcardClassOfFieldBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 10);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter18.getClass();
        boolean boolean20 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        constableBloomFilter26.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean32 = constableBloomFilter26.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass33 = constableBloomFilter26.getClass();
        boolean boolean34 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass44 = constableBloomFilter37.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        constableBloomFilter48.insert((java.lang.constant.Constable) 100);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter48.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean55 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>((int) (short) 1, (int) (short) 1);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) '4');
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean12 = constableBloomFilter10.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter18.getClass();
        boolean boolean26 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass36 = constableBloomFilter29.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean38 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean44 = constableBloomFilter42.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter47.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass62 = constableBloomFilter55.getClass();
        boolean boolean63 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable67 = null;
        boolean boolean68 = constableBloomFilter66.contains(constable67);
        constableBloomFilter66.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean72 = constableBloomFilter66.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass73 = constableBloomFilter66.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass73);
        boolean boolean76 = constableBloomFilter52.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass77 = constableBloomFilter52.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass77);
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass77);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter82.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter82.getClass();
        boolean boolean86 = constableBloomFilter42.contains((java.lang.constant.Constable) wildcardClass85);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter7.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter7.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter7.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass14 = constableBloomFilter7.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = constableBloomFilterBloomFilter29.getClass();
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        boolean boolean40 = constableBloomFilter36.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean48 = constableBloomFilter46.contains((java.lang.constant.Constable) ' ');
        boolean boolean50 = constableBloomFilter46.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter46.getClass();
        boolean boolean52 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        boolean boolean63 = constableBloomFilter55.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter55.getClass();
        boolean boolean65 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass64);
        boolean boolean66 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass64);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean66);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 0, (int) (byte) 10);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean11 = constableBloomFilter9.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter16.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable21 = null;
        constableBloomFilter16.insert(constable21);
        boolean boolean24 = constableBloomFilter16.contains((java.lang.constant.Constable) 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        boolean boolean31 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass30);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>(1, (int) (short) 0);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 0);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable14 = null;
        boolean boolean15 = constableBloomFilter13.contains(constable14);
        constableBloomFilter13.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass20 = constableBloomFilter13.getClass();
        boolean boolean21 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass31);
        boolean boolean33 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass51 = constableBloomFilter44.getClass();
        boolean boolean52 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass62 = constableBloomFilter55.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass62);
        boolean boolean65 = constableBloomFilter41.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass69 = wildcardClassOfFieldBloomFilter68.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass69);
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass69);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter36.getClass();
        boolean boolean73 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass72);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable83 = null;
        boolean boolean84 = constableBloomFilter82.contains(constable83);
        constableBloomFilter82.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean88 = constableBloomFilter82.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass89 = constableBloomFilter82.getClass();
        boolean boolean90 = constableBloomFilter79.contains((java.lang.constant.Constable) wildcardClass89);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter79.getClass();
        boolean boolean92 = constableBloomFilter76.contains((java.lang.constant.Constable) wildcardClass91);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass91);
        boolean boolean94 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass12 = typeDescriptorBloomFilter11.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 100);
        java.lang.Class<?> wildcardClass17 = constableBloomFilterBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter21.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean25 = constableBloomFilter21.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter21.insert((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter37.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable52 = null;
        boolean boolean53 = constableBloomFilter51.contains(constable52);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter51.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass54);
        boolean boolean56 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass54);
        boolean boolean57 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass54);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass54);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        boolean boolean38 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean50 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter53.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter53.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter53.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass60 = constableBloomFilter53.getClass();
        boolean boolean61 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass60);
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass60);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass70 = constableBloomFilter69.getClass();
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass70);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass70);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '#');
        java.lang.Class<?> wildcardClass76 = constableBloomFilter75.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass9);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass21);
        boolean boolean24 = constableBloomFilter14.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter14.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter29.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter29.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter29.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        constableBloomFilter5.insert(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter12.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter22.getClass();
        boolean boolean24 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass23);
        boolean boolean25 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean30 = constableBloomFilter28.contains((java.lang.constant.Constable) 0L);
        boolean boolean32 = constableBloomFilter28.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) '4');
        boolean boolean36 = constableBloomFilter28.contains((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter39.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter39.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter39.insert((java.lang.constant.Constable) (-1L));
        boolean boolean47 = constableBloomFilter39.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter39.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter39.getClass();
        boolean boolean51 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass50);
        boolean boolean53 = constableBloomFilter28.contains((java.lang.constant.Constable) 0.0f);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter28.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) '4', 10);
        java.lang.Class<?> wildcardClass59 = serializableBloomFilter58.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass59);
        // The following exception was thrown during execution in test generation
        try {
            constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean15 = constableBloomFilter9.contains((java.lang.constant.Constable) (short) 100);
        constableBloomFilter9.insert((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass36 = wildcardClassOfFieldBloomFilter35.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass42);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter47.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter47.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter54.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter54.getClass();
        boolean boolean58 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass57);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter47.contains(constable59);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter47.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        constableBloomFilter67.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable75 = null;
        boolean boolean76 = constableBloomFilter74.contains(constable75);
        java.lang.Class<?> wildcardClass77 = constableBloomFilter74.getClass();
        constableBloomFilter67.insert((java.lang.constant.Constable) wildcardClass77);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable82 = null;
        boolean boolean83 = constableBloomFilter81.contains(constable82);
        constableBloomFilter81.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter88 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable89 = null;
        boolean boolean90 = constableBloomFilter88.contains(constable89);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter88.getClass();
        constableBloomFilter81.insert((java.lang.constant.Constable) wildcardClass91);
        boolean boolean93 = constableBloomFilter67.contains((java.lang.constant.Constable) wildcardClass91);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter67.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass94);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass16 = wildcardClassOfFieldBloomFilter15.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass19);
        boolean boolean22 = constableBloomFilter12.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass44 = constableBloomFilter37.getClass();
        boolean boolean45 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        constableBloomFilter48.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean54 = constableBloomFilter48.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass55 = constableBloomFilter48.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass55);
        boolean boolean57 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter60.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter60.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter60.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass67 = constableBloomFilter60.getClass();
        boolean boolean68 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass67);
        boolean boolean69 = constableBloomFilter12.contains((java.lang.constant.Constable) boolean68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable73 = null;
        constableBloomFilter72.insert(constable73);
        java.lang.Class<?> wildcardClass75 = constableBloomFilter72.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass75);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter79.getClass();
        boolean boolean81 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass80);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass85 = constableBloomFilterBloomFilter84.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass85);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass85);
        boolean boolean88 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass85);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (short) 1);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass50 = wildcardClassOfFieldBloomFilter49.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean56 = constableBloomFilter46.contains((java.lang.constant.Constable) '#');
        constableBloomFilter46.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass59 = constableBloomFilter46.getClass();
        boolean boolean60 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass59);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter64.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter64.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter64.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass71 = constableBloomFilter64.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass71);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass78 = wildcardClassOfFieldBloomFilter77.getClass();
        boolean boolean79 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass78);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter85 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter85.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter90 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter93 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass94 = wildcardClassOfFieldBloomFilter93.getClass();
        constableBloomFilter90.insert((java.lang.constant.Constable) wildcardClass94);
        constableBloomFilter85.insert((java.lang.constant.Constable) wildcardClass94);
        constableBloomFilter82.insert((java.lang.constant.Constable) wildcardClass94);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass15 = constableBloomFilterBloomFilter14.getClass();
        boolean boolean16 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass15);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable21 = null;
        boolean boolean22 = constableBloomFilter20.contains(constable21);
        constableBloomFilter20.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean26 = constableBloomFilter20.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter20.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter20.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter33.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter33.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter33.insert((java.lang.constant.Constable) (-1L));
        boolean boolean41 = constableBloomFilter33.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter33.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter33.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        constableBloomFilter48.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean54 = constableBloomFilter48.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass61 = constableBloomFilterBloomFilter60.getClass();
        boolean boolean62 = constableBloomFilter57.contains((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter66.getClass();
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass67);
        boolean boolean69 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass67);
        boolean boolean70 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass67);
        java.lang.constant.Constable constable71 = null;
        constableBloomFilter2.insert(constable71);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 0);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean16 = constableBloomFilter14.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass23 = constableBloomFilterBloomFilter22.getClass();
        boolean boolean24 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass23);
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean25);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass27);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter11.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter11.insert((java.lang.constant.Constable) (-1L));
        boolean boolean19 = constableBloomFilter11.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean24 = constableBloomFilter22.contains((java.lang.constant.Constable) 0L);
        boolean boolean26 = constableBloomFilter22.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter22.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter22.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) (byte) 1, 0);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        java.lang.Class<?> wildcardClass9 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter13.insert((java.lang.constant.Constable) 10);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter13.contains(constable18);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter27.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter27.insert((java.lang.constant.Constable) (-1L));
        boolean boolean35 = constableBloomFilter27.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter27.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass36);
        java.lang.constant.Constable constable39 = null;
        constableBloomFilter2.insert(constable39);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        constableBloomFilter7.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter7.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass29 = constableBloomFilterBloomFilter28.getClass();
        boolean boolean30 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter35.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter46.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean50 = constableBloomFilter46.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter53.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass62 = wildcardClassOfFieldBloomFilter61.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter67.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean72 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass68);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        java.lang.constant.Constable constable14 = null;
        boolean boolean15 = constableBloomFilter2.contains(constable14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass28 = wildcardClassOfFieldBloomFilter27.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean30 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass37 = wildcardClassOfFieldBloomFilter36.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass40);
        boolean boolean43 = constableBloomFilter33.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter33.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass44);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (short) 10, (int) ' ');
        java.lang.Class<?> wildcardClass3 = strComparableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (short) -1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(100, 100);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 1);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass6 = constableBloomFilterBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 10);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter25.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass34 = wildcardClassOfFieldBloomFilter33.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass34);
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter39.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass40);
        boolean boolean43 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass40);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter15.getClass();
        boolean boolean45 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass44);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean12 = constableBloomFilter10.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter15.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter10.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean26 = constableBloomFilter24.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter29.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter29.insert((java.lang.constant.Constable) ' ');
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass42 = wildcardClassOfFieldBloomFilter41.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean48 = constableBloomFilter38.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable52 = null;
        boolean boolean53 = constableBloomFilter51.contains(constable52);
        constableBloomFilter51.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter51.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass56);
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean59 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass56);
        boolean boolean61 = constableBloomFilter24.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter64.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter64.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable69 = null;
        constableBloomFilter64.insert(constable69);
        boolean boolean72 = constableBloomFilter64.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = constableBloomFilterBloomFilter75.getClass();
        boolean boolean77 = constableBloomFilter64.contains((java.lang.constant.Constable) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter64.getClass();
        boolean boolean79 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass78);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter26.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass27);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass27);
        boolean boolean30 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        constableBloomFilter33.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean39 = constableBloomFilter33.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter33.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter44.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean48 = constableBloomFilter44.contains((java.lang.constant.Constable) 100L);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable57 = null;
        boolean boolean58 = constableBloomFilter56.contains(constable57);
        constableBloomFilter56.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean62 = constableBloomFilter56.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass63 = constableBloomFilter56.getClass();
        boolean boolean64 = constableBloomFilter53.contains((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        constableBloomFilter67.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean73 = constableBloomFilter67.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass74 = constableBloomFilter67.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass74);
        boolean boolean76 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass74);
        boolean boolean77 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable81 = null;
        boolean boolean82 = constableBloomFilter80.contains(constable81);
        boolean boolean84 = constableBloomFilter80.contains((java.lang.constant.Constable) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass88 = wildcardClassOfFieldBloomFilter87.getClass();
        constableBloomFilter80.insert((java.lang.constant.Constable) wildcardClass88);
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass88);
        boolean boolean91 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) (byte) 10);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass17 = constantDescBloomFilter16.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass17);
        boolean boolean20 = constableBloomFilter5.contains((java.lang.constant.Constable) 10.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter23.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        constableBloomFilter28.insert(constable29);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter28.getClass();
        boolean boolean32 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        boolean boolean58 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable62 = null;
        boolean boolean63 = constableBloomFilter61.contains(constable62);
        constableBloomFilter61.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean67 = constableBloomFilter61.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass68 = constableBloomFilter61.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean70 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter73.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter73.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter73.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass80 = constableBloomFilter73.getClass();
        boolean boolean81 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass80);
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass80);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter35.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>(1, (int) (short) 10);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) (short) -1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (byte) 10, (int) ' ');
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) 100L);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        boolean boolean33 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        constableBloomFilter36.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean42 = constableBloomFilter36.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass43 = constableBloomFilter36.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean45 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        boolean boolean53 = constableBloomFilter49.contains((java.lang.constant.Constable) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass57 = wildcardClassOfFieldBloomFilter56.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass57);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter65.contains(constable66);
        constableBloomFilter65.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean71 = constableBloomFilter65.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass72 = constableBloomFilter65.getClass();
        boolean boolean73 = constableBloomFilter62.contains((java.lang.constant.Constable) wildcardClass72);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable77 = null;
        boolean boolean78 = constableBloomFilter76.contains(constable77);
        constableBloomFilter76.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean82 = constableBloomFilter76.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass83 = constableBloomFilter76.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) 'a');
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass12 = wildcardClassOfFieldBloomFilter11.getClass();
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean14 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass24);
        boolean boolean27 = constableBloomFilter17.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter17.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean30 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        constableBloomFilter33.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean39 = constableBloomFilter33.contains((java.lang.constant.Constable) 'a');
        boolean boolean41 = constableBloomFilter33.contains((java.lang.constant.Constable) 100.0f);
        constableBloomFilter33.insert((java.lang.constant.Constable) (short) 1);
        boolean boolean45 = constableBloomFilter33.contains((java.lang.constant.Constable) '4');
        constableBloomFilter33.insert((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable54 = null;
        boolean boolean55 = constableBloomFilter53.contains(constable54);
        constableBloomFilter53.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean59 = constableBloomFilter53.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter53.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter53.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable67 = null;
        boolean boolean68 = constableBloomFilter66.contains(constable67);
        constableBloomFilter66.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter73.getClass();
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass76);
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass76);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter53.getClass();
        boolean boolean80 = constableBloomFilter50.contains((java.lang.constant.Constable) wildcardClass79);
        boolean boolean81 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass79);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter33.getClass();
        boolean boolean83 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass82);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean15 = constableBloomFilter11.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass27 = wildcardClassOfFieldBloomFilter26.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass27);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass33 = constableBloomFilter32.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter38.getClass();
        boolean boolean44 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter47.contains(constable48);
        constableBloomFilter47.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean53 = constableBloomFilter47.contains((java.lang.constant.Constable) 'a');
        boolean boolean55 = constableBloomFilter47.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter47.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean58 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass56);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter8.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter8.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable13 = null;
        constableBloomFilter8.insert(constable13);
        boolean boolean16 = constableBloomFilter8.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = constableBloomFilterBloomFilter19.getClass();
        boolean boolean21 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass20);
        boolean boolean22 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter25.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter25.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter25.insert((java.lang.constant.Constable) (-1L));
        boolean boolean33 = constableBloomFilter25.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter25.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean37 = constableBloomFilter25.contains((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter40.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean44 = constableBloomFilter40.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter40.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean48 = constableBloomFilter40.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass52 = constantDescBloomFilter51.getClass();
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean55 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass52);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean56 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (byte) -1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        boolean boolean14 = constableBloomFilter10.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter10.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter24.getClass();
        boolean boolean26 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass25);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass25);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = constableBloomFilterBloomFilter29.getClass();
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        java.lang.constant.Constable constable32 = null;
        constableBloomFilter2.insert(constable32);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter8.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean12 = constableBloomFilter8.contains((java.lang.constant.Constable) 100L);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter8.contains((java.lang.constant.Constable) "");
        java.lang.Class<?> wildcardClass17 = constableBloomFilter8.getClass();
        boolean boolean18 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass17);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean18);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean35 = constableBloomFilter31.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter31.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean39 = constableBloomFilter31.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass43 = constantDescBloomFilter42.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter31.contains((java.lang.constant.Constable) 10.0d);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter31.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 100);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter51.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable57 = null;
        constableBloomFilter56.insert(constable57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable62 = null;
        boolean boolean63 = constableBloomFilter61.contains(constable62);
        constableBloomFilter61.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean67 = constableBloomFilter61.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass74 = wildcardClassOfFieldBloomFilter73.getClass();
        constableBloomFilter70.insert((java.lang.constant.Constable) wildcardClass74);
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        constableBloomFilter70.insert((java.lang.constant.Constable) wildcardClass77);
        boolean boolean80 = constableBloomFilter70.contains((java.lang.constant.Constable) '#');
        constableBloomFilter70.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass83 = constableBloomFilter70.getClass();
        boolean boolean84 = constableBloomFilter61.contains((java.lang.constant.Constable) wildcardClass83);
        boolean boolean85 = constableBloomFilter56.contains((java.lang.constant.Constable) boolean84);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter88 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass89 = wildcardClassOfFieldBloomFilter88.getClass();
        boolean boolean90 = constableBloomFilter56.contains((java.lang.constant.Constable) wildcardClass89);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(0, (int) (byte) 100);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass15 = wildcardClassOfFieldBloomFilter14.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass18);
        boolean boolean21 = constableBloomFilter11.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter24.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 10);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter45.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable61 = null;
        boolean boolean62 = constableBloomFilter60.contains(constable61);
        constableBloomFilter60.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean66 = constableBloomFilter60.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass67 = constableBloomFilter60.getClass();
        boolean boolean68 = constableBloomFilter57.contains((java.lang.constant.Constable) wildcardClass67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable72 = null;
        boolean boolean73 = constableBloomFilter71.contains(constable72);
        constableBloomFilter71.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean77 = constableBloomFilter71.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass78 = constableBloomFilter71.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass78);
        boolean boolean81 = constableBloomFilter57.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass85 = wildcardClassOfFieldBloomFilter84.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass85);
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass85);
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass85);
        java.lang.constant.Constable constable89 = null;
        boolean boolean90 = constableBloomFilter38.contains(constable89);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter93 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) '4');
        java.lang.Class<?> wildcardClass94 = constableBloomFilter93.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass94);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>(100, (int) (byte) 0);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) (byte) 0, (int) '4');
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean23 = constableBloomFilter21.contains((java.lang.constant.Constable) 0L);
        boolean boolean25 = constableBloomFilter21.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass28);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass28);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 10);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean9 = constableBloomFilter7.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter12.insert((java.lang.constant.Constable) ' ');
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass25 = wildcardClassOfFieldBloomFilter24.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter21.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter34.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean42 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass39);
        boolean boolean44 = constableBloomFilter7.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter47.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean50 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter56.getClass();
        boolean boolean58 = constableBloomFilter53.contains((java.lang.constant.Constable) wildcardClass57);
        boolean boolean60 = constableBloomFilter53.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass61 = constableBloomFilter53.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable14 = null;
        boolean boolean15 = constableBloomFilter13.contains(constable14);
        constableBloomFilter13.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass20 = constableBloomFilter13.getClass();
        boolean boolean21 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass31);
        boolean boolean34 = constableBloomFilter10.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass38 = wildcardClassOfFieldBloomFilter37.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass38);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        boolean boolean54 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = constableBloomFilter43.getClass();
        boolean boolean56 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass55);
        boolean boolean57 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass55);
        java.lang.constant.Constable constable58 = null;
        constableBloomFilter2.insert(constable58);
        java.lang.constant.Constable constable60 = null;
        boolean boolean61 = constableBloomFilter2.contains(constable60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable65 = null;
        constableBloomFilter64.insert(constable65);
        constableBloomFilter64.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean73 = constableBloomFilter71.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass74 = constableBloomFilter71.getClass();
        constableBloomFilter64.insert((java.lang.constant.Constable) wildcardClass74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter78.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean82 = constableBloomFilter78.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter78.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean86 = constableBloomFilter78.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter78.getClass();
        boolean boolean88 = constableBloomFilter64.contains((java.lang.constant.Constable) wildcardClass87);
        boolean boolean89 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean88);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter95 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter95.getClass();
        boolean boolean97 = constableBloomFilter92.contains((java.lang.constant.Constable) wildcardClass96);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass96);
        java.lang.Class<?> wildcardClass99 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 10, (int) (short) 100);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', 1);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = constableBloomFilterBloomFilter29.getClass();
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        boolean boolean35 = constableBloomFilter2.contains((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter41.insert((java.lang.constant.Constable) 10);
        boolean boolean45 = constableBloomFilter41.contains((java.lang.constant.Constable) true);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable63 = null;
        boolean boolean64 = constableBloomFilter62.contains(constable63);
        constableBloomFilter62.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean68 = constableBloomFilter62.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass69 = constableBloomFilter62.getClass();
        boolean boolean70 = constableBloomFilter59.contains((java.lang.constant.Constable) wildcardClass69);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        constableBloomFilter73.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean79 = constableBloomFilter73.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass80 = constableBloomFilter73.getClass();
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass80);
        boolean boolean82 = constableBloomFilter50.contains((java.lang.constant.Constable) wildcardClass80);
        boolean boolean83 = constableBloomFilter41.contains((java.lang.constant.Constable) boolean82);
        constableBloomFilter41.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter88 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable89 = null;
        boolean boolean90 = constableBloomFilter88.contains(constable89);
        constableBloomFilter88.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter88.getClass();
        boolean boolean94 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass93);
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass93);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter38.getClass();
        boolean boolean97 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass96);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean31 = constableBloomFilter29.contains((java.lang.constant.Constable) 0L);
        boolean boolean33 = constableBloomFilter29.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter36.insert((java.lang.constant.Constable) 10);
        boolean boolean40 = constableBloomFilter36.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter43.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass52 = wildcardClassOfFieldBloomFilter51.getClass();
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean55 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter58.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter58.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean64 = constableBloomFilter58.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean66 = constableBloomFilter58.contains((java.lang.constant.Constable) 0L);
        boolean boolean68 = constableBloomFilter58.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter58.getClass();
        boolean boolean70 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass69);
        boolean boolean71 = constableBloomFilter29.contains((java.lang.constant.Constable) boolean70);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter29.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass72);
        java.lang.constant.Constable constable74 = null;
        constableBloomFilter2.insert(constable74);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) -1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        boolean boolean14 = constableBloomFilter10.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter10.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter24.getClass();
        boolean boolean26 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass25);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass34 = wildcardClassOfFieldBloomFilter33.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean40 = constableBloomFilter38.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        boolean boolean54 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        constableBloomFilter57.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass64 = constableBloomFilter57.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass64);
        boolean boolean66 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass64);
        constableBloomFilter30.insert((java.lang.constant.Constable) boolean66);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        constableBloomFilter73.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean79 = constableBloomFilter73.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass80 = constableBloomFilter73.getClass();
        boolean boolean81 = constableBloomFilter70.contains((java.lang.constant.Constable) wildcardClass80);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable85 = null;
        boolean boolean86 = constableBloomFilter84.contains(constable85);
        constableBloomFilter84.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean90 = constableBloomFilter84.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass91 = constableBloomFilter84.getClass();
        constableBloomFilter70.insert((java.lang.constant.Constable) wildcardClass91);
        boolean boolean94 = constableBloomFilter70.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter70.getClass();
        boolean boolean96 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass95);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter29.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter29.insert((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass40 = constableBloomFilter29.getClass();
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) '4');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter44.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((-1), (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) (short) 100, (int) 'a');
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter15.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter15.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter15.insert((java.lang.constant.Constable) (-1L));
        boolean boolean23 = constableBloomFilter15.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter15.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass26 = constableBloomFilter15.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass43 = constableBloomFilterBloomFilter42.getClass();
        boolean boolean44 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass43);
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter48.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass49);
        boolean boolean53 = constableBloomFilter2.contains((java.lang.constant.Constable) 10L);
        java.lang.constant.Constable constable54 = null;
        boolean boolean55 = constableBloomFilter2.contains(constable54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter58.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter58.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean64 = constableBloomFilter58.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean66 = constableBloomFilter58.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable70 = null;
        constableBloomFilter69.insert(constable70);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter74.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass80 = genericDeclarationBloomFilter79.getClass();
        constableBloomFilter74.insert((java.lang.constant.Constable) wildcardClass80);
        boolean boolean82 = constableBloomFilter69.contains((java.lang.constant.Constable) wildcardClass80);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter69.getClass();
        boolean boolean84 = constableBloomFilter58.contains((java.lang.constant.Constable) wildcardClass83);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 0);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter87.getClass();
        boolean boolean89 = constableBloomFilter58.contains((java.lang.constant.Constable) wildcardClass88);
        boolean boolean90 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass88);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter23.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter29.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter29.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter36.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter36.getClass();
        boolean boolean40 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass39);
        java.lang.constant.Constable constable41 = null;
        boolean boolean42 = constableBloomFilter29.contains(constable41);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter29.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable13 = null;
        boolean boolean14 = constableBloomFilter12.contains(constable13);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter12.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        constableBloomFilter19.insert(constable20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass37 = wildcardClassOfFieldBloomFilter36.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass40);
        boolean boolean43 = constableBloomFilter33.contains((java.lang.constant.Constable) '#');
        constableBloomFilter33.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter33.getClass();
        boolean boolean47 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass46);
        boolean boolean48 = constableBloomFilter19.contains((java.lang.constant.Constable) boolean47);
        boolean boolean50 = constableBloomFilter19.contains((java.lang.constant.Constable) 100);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass51);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (short) 1, (int) (byte) 1);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter7.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter7.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean15 = constableBloomFilter7.contains((java.lang.constant.Constable) 0L);
        boolean boolean17 = constableBloomFilter7.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        constableBloomFilter22.insert((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter29.insert((java.lang.constant.Constable) 10);
        boolean boolean33 = constableBloomFilter29.contains((java.lang.constant.Constable) true);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        boolean boolean58 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable62 = null;
        boolean boolean63 = constableBloomFilter61.contains(constable62);
        constableBloomFilter61.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean67 = constableBloomFilter61.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass68 = constableBloomFilter61.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean70 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass68);
        boolean boolean71 = constableBloomFilter29.contains((java.lang.constant.Constable) boolean70);
        constableBloomFilter29.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable77 = null;
        boolean boolean78 = constableBloomFilter76.contains(constable77);
        constableBloomFilter76.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter76.getClass();
        boolean boolean82 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass81);
        boolean boolean83 = constableBloomFilter22.contains((java.lang.constant.Constable) boolean82);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter22.getClass();
        boolean boolean85 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 100L);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) "");
        java.lang.Class<?> wildcardClass14 = constableBloomFilter5.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        java.lang.Class<?> wildcardClass16 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        boolean boolean54 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        constableBloomFilter57.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass64 = constableBloomFilter57.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass64);
        boolean boolean66 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter69.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter69.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter69.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass76 = constableBloomFilter69.getClass();
        boolean boolean77 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass76);
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass76);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter31.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass79);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        boolean boolean11 = constableBloomFilter7.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass28 = genericDeclarationBloomFilter27.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter32.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter32.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter32.insert((java.lang.constant.Constable) (-1L));
        boolean boolean40 = constableBloomFilter32.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean45 = constableBloomFilter43.contains((java.lang.constant.Constable) 0L);
        boolean boolean47 = constableBloomFilter43.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean54 = constableBloomFilter50.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter50.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean58 = constableBloomFilter50.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter50.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass59);
        boolean boolean61 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass65 = charSequenceBloomFilter64.getClass();
        boolean boolean66 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass65);
        boolean boolean67 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean66);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter12.insert((java.lang.constant.Constable) 10);
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) true);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        constableBloomFilter33.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean39 = constableBloomFilter33.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass40 = constableBloomFilter33.getClass();
        boolean boolean41 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass51 = constableBloomFilter44.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass51);
        boolean boolean53 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass51);
        boolean boolean54 = constableBloomFilter12.contains((java.lang.constant.Constable) boolean53);
        constableBloomFilter12.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable60 = null;
        boolean boolean61 = constableBloomFilter59.contains(constable60);
        constableBloomFilter59.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter59.getClass();
        boolean boolean65 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass64);
        boolean boolean66 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean65);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(1, (int) (short) 0);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean24 = constableBloomFilter22.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        boolean boolean38 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean50 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass48);
        constableBloomFilter14.insert((java.lang.constant.Constable) boolean50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        constableBloomFilter57.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass64 = constableBloomFilter57.getClass();
        boolean boolean65 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable69 = null;
        boolean boolean70 = constableBloomFilter68.contains(constable69);
        constableBloomFilter68.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean74 = constableBloomFilter68.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass75 = constableBloomFilter68.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass75);
        boolean boolean78 = constableBloomFilter54.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter54.getClass();
        boolean boolean80 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass79);
        boolean boolean81 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass79);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean86 = constableBloomFilter84.contains((java.lang.constant.Constable) 0L);
        boolean boolean88 = constableBloomFilter84.contains((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter84.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass89);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, (int) 'a');
        java.lang.Class<?> wildcardClass8 = typeDescriptorBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass8);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter14.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter14.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable19 = null;
        constableBloomFilter14.insert(constable19);
        boolean boolean22 = constableBloomFilter14.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = constableBloomFilterBloomFilter25.getClass();
        boolean boolean27 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean32 = constableBloomFilter30.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter35.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean39 = constableBloomFilter35.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter35.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean43 = constableBloomFilter35.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass47 = constantDescBloomFilter46.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass47);
        boolean boolean49 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass47);
        boolean boolean50 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable57 = null;
        boolean boolean58 = constableBloomFilter56.contains(constable57);
        constableBloomFilter56.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean62 = constableBloomFilter56.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass63 = constableBloomFilter56.getClass();
        boolean boolean64 = constableBloomFilter53.contains((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        constableBloomFilter67.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean73 = constableBloomFilter67.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass74 = constableBloomFilter67.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass74);
        boolean boolean77 = constableBloomFilter53.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable81 = null;
        boolean boolean82 = constableBloomFilter80.contains(constable81);
        constableBloomFilter80.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter80.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass85);
        boolean boolean87 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass85);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter90 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass91 = constantDescBloomFilter90.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass91);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) '4', 1);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) 'a');
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) ' ');
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter12.getClass();
        boolean boolean18 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        boolean boolean29 = constableBloomFilter21.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter21.getClass();
        boolean boolean31 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass30);
        boolean boolean32 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        boolean boolean39 = constableBloomFilter35.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter45.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter45.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter45.insert((java.lang.constant.Constable) (-1L));
        boolean boolean53 = constableBloomFilter45.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter45.getClass();
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass54);
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass54);
        boolean boolean57 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass54);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        boolean boolean42 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter31.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        constableBloomFilter58.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean64 = constableBloomFilter58.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass71 = constableBloomFilterBloomFilter70.getClass();
        boolean boolean72 = constableBloomFilter67.contains((java.lang.constant.Constable) wildcardClass71);
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass71);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter58.getClass();
        boolean boolean75 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>(0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass6 = strBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass11 = constableBloomFilterBloomFilter10.getClass();
        boolean boolean12 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass11);
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter16.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        boolean boolean32 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean45 = constableBloomFilter21.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter21.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass46);
        boolean boolean48 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter51.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter51.insert((java.lang.constant.Constable) 1.0f);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter51.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 10);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 1, 10);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        boolean boolean26 = constableBloomFilter18.contains((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        constableBloomFilter29.insert(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean38 = constableBloomFilter36.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter36.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter43.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean47 = constableBloomFilter43.contains((java.lang.constant.Constable) 100L);
        boolean boolean49 = constableBloomFilter43.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass62 = constableBloomFilter55.getClass();
        boolean boolean63 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable67 = null;
        boolean boolean68 = constableBloomFilter66.contains(constable67);
        constableBloomFilter66.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean72 = constableBloomFilter66.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass73 = constableBloomFilter66.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass73);
        boolean boolean75 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass73);
        boolean boolean78 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass8 = genericDeclarationBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) 100L);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        boolean boolean32 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean44 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass42);
        boolean boolean45 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) ' ', (int) '4');
        java.lang.Class<?> wildcardClass49 = constantDescBloomFilter48.getClass();
        boolean boolean50 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>(0, (int) (short) 0);
        java.lang.Class<?> wildcardClass54 = strComparableBloomFilter53.getClass();
        boolean boolean55 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) 10);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) true);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        constableBloomFilter26.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean32 = constableBloomFilter26.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass33 = constableBloomFilter26.getClass();
        boolean boolean34 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass44 = constableBloomFilter37.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass44);
        boolean boolean47 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        boolean boolean59 = constableBloomFilter55.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter55.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass60);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean69 = constableBloomFilter67.contains((java.lang.constant.Constable) 0L);
        boolean boolean71 = constableBloomFilter67.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter67.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter67.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass74);
        java.lang.constant.Constable constable76 = null;
        constableBloomFilter2.insert(constable76);
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        boolean boolean80 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter10.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass19 = wildcardClassOfFieldBloomFilter18.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass19);
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter24.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass25);
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass25);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass35 = wildcardClassOfFieldBloomFilter34.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass38);
        boolean boolean41 = constableBloomFilter31.contains((java.lang.constant.Constable) '#');
        constableBloomFilter31.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter46.insert((java.lang.constant.Constable) 10);
        boolean boolean50 = constableBloomFilter46.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter53.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass62 = wildcardClassOfFieldBloomFilter61.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass62);
        boolean boolean65 = constableBloomFilter46.contains((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass62);
        boolean boolean67 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean35 = constableBloomFilter11.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass39 = wildcardClassOfFieldBloomFilter38.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0d);
        java.lang.constant.Constable constable44 = null;
        constableBloomFilter2.insert(constable44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        constableBloomFilter48.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean54 = constableBloomFilter48.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass55 = constableBloomFilter48.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 1);
        java.lang.constant.Constable constable7 = null;
        boolean boolean8 = constableBloomFilter2.contains(constable7);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter11.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable16 = null;
        constableBloomFilter11.insert(constable16);
        boolean boolean19 = constableBloomFilter11.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = constableBloomFilterBloomFilter22.getClass();
        boolean boolean24 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean29 = constableBloomFilter27.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter32.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean36 = constableBloomFilter32.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter32.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean40 = constableBloomFilter32.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass44 = constantDescBloomFilter43.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass44);
        boolean boolean47 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass44);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass13 = wildcardClassOfFieldBloomFilter12.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass16);
        boolean boolean19 = constableBloomFilter9.contains((java.lang.constant.Constable) '#');
        constableBloomFilter9.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass22 = constableBloomFilter9.getClass();
        boolean boolean23 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass22);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10.0f);
        constableBloomFilter2.insert((java.lang.constant.Constable) "hi!");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter33.getClass();
        boolean boolean35 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ', 100);
        java.lang.Class<?> wildcardClass39 = wildcardClassOfFieldBloomFilter38.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass44 = serializableBloomFilter43.getClass();
        boolean boolean45 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass44);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean45);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean13 = constableBloomFilter9.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean17 = constableBloomFilter9.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter22.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean26 = constableBloomFilter22.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter29.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass38 = wildcardClassOfFieldBloomFilter37.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass38);
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter43.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass44);
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        constableBloomFilter49.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter49.getClass();
        boolean boolean55 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        constableBloomFilter58.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean64 = constableBloomFilter58.contains((java.lang.constant.Constable) 'a');
        boolean boolean66 = constableBloomFilter58.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter58.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter22.getClass();
        boolean boolean70 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        constableBloomFilter11.insert(constable12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean35 = constableBloomFilter25.contains((java.lang.constant.Constable) '#');
        constableBloomFilter25.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass38 = constableBloomFilter25.getClass();
        boolean boolean39 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass38);
        boolean boolean40 = constableBloomFilter11.contains((java.lang.constant.Constable) boolean39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass44 = wildcardClassOfFieldBloomFilter43.getClass();
        boolean boolean45 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass49 = typeBloomFilter48.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass57 = constableBloomFilterBloomFilter56.getClass();
        boolean boolean58 = constableBloomFilter53.contains((java.lang.constant.Constable) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter53.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean68 = constableBloomFilter66.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable72 = null;
        boolean boolean73 = constableBloomFilter71.contains(constable72);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter71.getClass();
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass74);
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass74);
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass74);
        boolean boolean78 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass74);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 1);
        java.lang.constant.Constable constable7 = null;
        boolean boolean8 = constableBloomFilter2.contains(constable7);
        java.lang.Class<?> wildcardClass9 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) (short) -1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean17 = constableBloomFilter11.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass18 = constableBloomFilter11.getClass();
        boolean boolean19 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter8.getClass();
        boolean boolean21 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass20);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean21);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean13 = constableBloomFilter11.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass20 = charSequenceBloomFilter19.getClass();
        boolean boolean21 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass20);
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) boolean21);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter11.getClass();
        boolean boolean24 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) '4', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        constableBloomFilter10.insert(constable11);
        java.lang.Class<?> wildcardClass13 = constableBloomFilter10.getClass();
        boolean boolean14 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable21 = null;
        boolean boolean22 = constableBloomFilter20.contains(constable21);
        constableBloomFilter20.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean26 = constableBloomFilter20.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter32.getClass();
        boolean boolean40 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean49 = constableBloomFilter43.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass50 = constableBloomFilter43.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass50);
        boolean boolean52 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter55.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter55.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter55.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass62 = constableBloomFilter55.getClass();
        boolean boolean63 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass62);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter17.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (short) -1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (byte) 1);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter25.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass34 = wildcardClassOfFieldBloomFilter33.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass34);
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter39.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter45.getClass();
        boolean boolean51 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass50);
        boolean boolean52 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass50);
        boolean boolean53 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(1, (int) (short) 100);
        java.lang.Class<?> wildcardClass57 = typeDescriptorBloomFilter56.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass57);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter2.contains(constable59);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter13.insert((java.lang.constant.Constable) 10);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) true);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        constableBloomFilter22.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean28 = constableBloomFilter22.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        boolean boolean42 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean54 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass52);
        boolean boolean55 = constableBloomFilter13.contains((java.lang.constant.Constable) boolean54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        boolean boolean67 = constableBloomFilter63.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter63.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean71 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass68);
        java.lang.constant.Constable constable72 = null;
        constableBloomFilter2.insert(constable72);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        java.lang.Class<?> wildcardClass13 = constableBloomFilter10.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean27 = constableBloomFilter25.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        constableBloomFilter33.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean39 = constableBloomFilter33.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass40 = constableBloomFilter33.getClass();
        boolean boolean41 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass51 = constableBloomFilter44.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass51);
        boolean boolean53 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass51);
        constableBloomFilter17.insert((java.lang.constant.Constable) boolean53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable61 = null;
        boolean boolean62 = constableBloomFilter60.contains(constable61);
        constableBloomFilter60.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean66 = constableBloomFilter60.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass67 = constableBloomFilter60.getClass();
        boolean boolean68 = constableBloomFilter57.contains((java.lang.constant.Constable) wildcardClass67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable72 = null;
        boolean boolean73 = constableBloomFilter71.contains(constable72);
        constableBloomFilter71.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean77 = constableBloomFilter71.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass78 = constableBloomFilter71.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass78);
        boolean boolean81 = constableBloomFilter57.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter57.getClass();
        boolean boolean83 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass82);
        boolean boolean84 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass82);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean89 = constableBloomFilter87.contains((java.lang.constant.Constable) 0L);
        boolean boolean91 = constableBloomFilter87.contains((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter87.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass92);
        boolean boolean94 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass92);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter97 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass98 = constableBloomFilterBloomFilter97.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass98);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter13.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter20.getClass();
        boolean boolean24 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass23);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter13.contains(constable25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean31 = constableBloomFilter29.contains((java.lang.constant.Constable) 0L);
        boolean boolean33 = constableBloomFilter29.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) '4');
        boolean boolean37 = constableBloomFilter29.contains((java.lang.constant.Constable) 1.0f);
        java.lang.Class<?> wildcardClass38 = constableBloomFilter29.getClass();
        boolean boolean39 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass38);
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) 100L);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter28.getClass();
        boolean boolean36 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter39.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass46);
        boolean boolean48 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass46);
        boolean boolean49 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        boolean boolean56 = constableBloomFilter52.contains((java.lang.constant.Constable) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass60 = wildcardClassOfFieldBloomFilter59.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass60);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass60);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass17 = wildcardClassOfFieldBloomFilter16.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass20);
        boolean boolean23 = constableBloomFilter13.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        constableBloomFilter26.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter26.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        boolean boolean46 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        constableBloomFilter49.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean55 = constableBloomFilter49.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass56 = constableBloomFilter49.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean59 = constableBloomFilter35.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass63 = wildcardClassOfFieldBloomFilter62.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass63);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass63);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        boolean boolean68 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable14 = null;
        boolean boolean15 = constableBloomFilter13.contains(constable14);
        constableBloomFilter13.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass20 = constableBloomFilter13.getClass();
        boolean boolean21 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass31);
        boolean boolean34 = constableBloomFilter10.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass38 = wildcardClassOfFieldBloomFilter37.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass38);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        boolean boolean54 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = constableBloomFilter43.getClass();
        boolean boolean56 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass55);
        boolean boolean57 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (short) 0, 10);
        java.lang.Class<?> wildcardClass61 = charSequenceBloomFilter60.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter13.insert((java.lang.constant.Constable) 10);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter13.contains(constable18);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass3 = constantDescBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (short) -1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter23.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter29.getClass();
        boolean boolean35 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        boolean boolean46 = constableBloomFilter38.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter38.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, 0);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter51.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter56.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable65 = null;
        boolean boolean66 = constableBloomFilter64.contains(constable65);
        constableBloomFilter64.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean70 = constableBloomFilter64.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass71 = constableBloomFilter64.getClass();
        boolean boolean72 = constableBloomFilter61.contains((java.lang.constant.Constable) wildcardClass71);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable76 = null;
        boolean boolean77 = constableBloomFilter75.contains(constable76);
        constableBloomFilter75.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean81 = constableBloomFilter75.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass82 = constableBloomFilter75.getClass();
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass82);
        boolean boolean85 = constableBloomFilter61.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass86 = constableBloomFilter61.getClass();
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass86);
        boolean boolean88 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass86);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) 'a');
        boolean boolean23 = constableBloomFilter15.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter15.getClass();
        boolean boolean25 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass40 = wildcardClassOfFieldBloomFilter39.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass40);
        boolean boolean42 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass40);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter33.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) ' ', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) 100);
        boolean boolean17 = constableBloomFilter11.contains((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter11.getClass();
        boolean boolean19 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter22.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean26 = constableBloomFilter22.contains((java.lang.constant.Constable) 100L);
        boolean boolean28 = constableBloomFilter22.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        boolean boolean42 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean54 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter57.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean61 = constableBloomFilter57.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter57.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean65 = constableBloomFilter57.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass69 = constantDescBloomFilter68.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass69);
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass69);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter74.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean78 = constableBloomFilter74.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter74.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean82 = constableBloomFilter74.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter74.getClass();
        boolean boolean84 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass83);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter90 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter93 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass94 = wildcardClassOfFieldBloomFilter93.getClass();
        constableBloomFilter90.insert((java.lang.constant.Constable) wildcardClass94);
        boolean boolean96 = constableBloomFilter87.contains((java.lang.constant.Constable) wildcardClass94);
        java.lang.Class<?> wildcardClass97 = constableBloomFilter87.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass97);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (short) 0, 0);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean35 = constableBloomFilter31.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter31.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean39 = constableBloomFilter31.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass43 = constantDescBloomFilter42.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter31.contains((java.lang.constant.Constable) 10.0d);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter31.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 100);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter51.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 100);
        java.lang.constant.Constable constable57 = null;
        constableBloomFilter56.insert(constable57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter61.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean65 = constableBloomFilter61.contains((java.lang.constant.Constable) 100L);
        boolean boolean67 = constableBloomFilter61.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean69 = constableBloomFilter61.contains((java.lang.constant.Constable) "");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter72.insert((java.lang.constant.Constable) 10);
        boolean boolean76 = constableBloomFilter72.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter79.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass88 = wildcardClassOfFieldBloomFilter87.getClass();
        constableBloomFilter84.insert((java.lang.constant.Constable) wildcardClass88);
        constableBloomFilter79.insert((java.lang.constant.Constable) wildcardClass88);
        boolean boolean91 = constableBloomFilter72.contains((java.lang.constant.Constable) wildcardClass88);
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass88);
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass88);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass88);
        boolean boolean96 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0f);
        java.lang.Class<?> wildcardClass97 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (byte) 1);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 100L);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass24 = constableBloomFilter17.getClass();
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter28.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable41 = null;
        boolean boolean42 = constableBloomFilter40.contains(constable41);
        constableBloomFilter40.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean46 = constableBloomFilter40.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass53 = wildcardClassOfFieldBloomFilter52.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean59 = constableBloomFilter49.contains((java.lang.constant.Constable) '#');
        constableBloomFilter49.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass62 = constableBloomFilter49.getClass();
        boolean boolean63 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter5.insert((java.lang.constant.Constable) boolean63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter67.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter67.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter67.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass74 = constableBloomFilter67.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass74);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>(10, 100);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean35 = constableBloomFilter11.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass39 = wildcardClassOfFieldBloomFilter38.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter44.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass53 = wildcardClassOfFieldBloomFilter52.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass53);
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter58.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass67 = wildcardClassOfFieldBloomFilter66.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass70);
        boolean boolean73 = constableBloomFilter63.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable77 = null;
        boolean boolean78 = constableBloomFilter76.contains(constable77);
        constableBloomFilter76.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter76.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass81);
        boolean boolean83 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass81);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter44.getClass();
        boolean boolean85 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable17 = null;
        constableBloomFilter16.insert(constable17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter21.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass27 = genericDeclarationBloomFilter26.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass27);
        boolean boolean29 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass27);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter16.getClass();
        boolean boolean31 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        boolean boolean36 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable41 = null;
        constableBloomFilter40.insert(constable41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter45.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass51 = genericDeclarationBloomFilter50.getClass();
        constableBloomFilter45.insert((java.lang.constant.Constable) wildcardClass51);
        boolean boolean53 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass51);
        boolean boolean54 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean53);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        constableBloomFilter7.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) '#');
        constableBloomFilter16.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter16.getClass();
        boolean boolean30 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean30);
        boolean boolean33 = constableBloomFilter2.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter39.getClass();
        boolean boolean47 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass57);
        boolean boolean60 = constableBloomFilter36.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = constableBloomFilterBloomFilter63.getClass();
        boolean boolean65 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass64);
        constableBloomFilter36.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable71 = null;
        constableBloomFilter70.insert(constable71);
        constableBloomFilter70.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean79 = constableBloomFilter77.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass80 = constableBloomFilter77.getClass();
        constableBloomFilter70.insert((java.lang.constant.Constable) wildcardClass80);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter70.getClass();
        boolean boolean83 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass82);
        boolean boolean84 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean83);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter23.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass44 = constableBloomFilter37.getClass();
        boolean boolean45 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        constableBloomFilter48.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean54 = constableBloomFilter48.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass55 = constableBloomFilter48.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass55);
        boolean boolean58 = constableBloomFilter34.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass62 = wildcardClassOfFieldBloomFilter61.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable71 = null;
        boolean boolean72 = constableBloomFilter70.contains(constable71);
        constableBloomFilter70.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean76 = constableBloomFilter70.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass77 = constableBloomFilter70.getClass();
        boolean boolean78 = constableBloomFilter67.contains((java.lang.constant.Constable) wildcardClass77);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter67.getClass();
        boolean boolean80 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass79);
        boolean boolean81 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean80);
        java.lang.constant.Constable constable82 = null;
        boolean boolean83 = constableBloomFilter2.contains(constable82);
        boolean boolean85 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass14 = constantDescBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter18.insert((java.lang.constant.Constable) 10);
        constableBloomFilter18.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        boolean boolean33 = constableBloomFilter25.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter25.getClass();
        boolean boolean35 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass34);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass43 = wildcardClassOfFieldBloomFilter42.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass46);
        boolean boolean49 = constableBloomFilter39.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        constableBloomFilter52.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter52.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass57);
        boolean boolean60 = constableBloomFilter39.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(0, 0);
        java.lang.Class<?> wildcardClass64 = constantDescBloomFilter63.getClass();
        boolean boolean65 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable69 = null;
        constableBloomFilter68.insert(constable69);
        constableBloomFilter68.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean77 = constableBloomFilter75.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass78 = constableBloomFilter75.getClass();
        constableBloomFilter68.insert((java.lang.constant.Constable) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter68.getClass();
        boolean boolean81 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass80);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.constant.Constable constable85 = null;
        constableBloomFilter84.insert(constable85);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter84.getClass();
        boolean boolean88 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass87);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass87);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) '#');
        java.lang.Class<?> wildcardClass93 = constableBloomFilter92.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass93);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean15 = constableBloomFilter9.contains((java.lang.constant.Constable) (short) 100);
        constableBloomFilter9.insert((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass36 = wildcardClassOfFieldBloomFilter35.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass42);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter47.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter47.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter54.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter54.getClass();
        boolean boolean58 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass57);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter47.contains(constable59);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter47.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass61);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        boolean boolean38 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean50 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter53.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter53.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter53.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass60 = constableBloomFilter53.getClass();
        boolean boolean61 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass60);
        boolean boolean62 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable66 = null;
        constableBloomFilter65.insert(constable66);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter65.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter72.getClass();
        boolean boolean74 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = constableBloomFilterBloomFilter77.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass78);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass78);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (short) 100);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter83.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) -1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (byte) 0, 0);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter11.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) '#');
        constableBloomFilter16.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter16.getClass();
        boolean boolean30 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass29);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((-1), 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass13 = wildcardClassOfFieldBloomFilter12.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass16);
        boolean boolean19 = constableBloomFilter9.contains((java.lang.constant.Constable) '#');
        constableBloomFilter9.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass22 = constableBloomFilter9.getClass();
        boolean boolean23 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass22);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter28.getClass();
        boolean boolean30 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass29);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter12.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter12.getClass();
        boolean boolean20 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass19);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean20);
        java.lang.Class<?> wildcardClass22 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean12 = constableBloomFilter10.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter18.getClass();
        boolean boolean26 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass36 = constableBloomFilter29.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean38 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter42.insert((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter42.getClass();
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) 100);
        boolean boolean17 = constableBloomFilter11.contains((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter11.getClass();
        boolean boolean19 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '4');
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean47 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter50.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter50.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        boolean boolean58 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass57);
        boolean boolean59 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean58);
        boolean boolean61 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass65 = typeBloomFilter64.getClass();
        boolean boolean66 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass22 = constableBloomFilter15.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter36.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter50.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean55 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass53);
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass53);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) '4');
        constableBloomFilter2.insert((java.lang.constant.Constable) 10L);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>((int) (short) 10, (int) (short) 1);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>(100, 0);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>(1, (int) (short) 10);
        java.lang.Class<?> wildcardClass3 = annotatedElementBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass8 = genericDeclarationBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) 0L);
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass23 = wildcardClassOfFieldBloomFilter22.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter19.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass51 = constableBloomFilter44.getClass();
        boolean boolean52 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass62 = constableBloomFilter55.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass62);
        boolean boolean64 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter67.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter67.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter67.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass74 = constableBloomFilter67.getClass();
        boolean boolean75 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass74);
        boolean boolean76 = constableBloomFilter19.contains((java.lang.constant.Constable) boolean75);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable80 = null;
        constableBloomFilter79.insert(constable80);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter79.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass82);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter86.getClass();
        boolean boolean88 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass87);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter91 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass92 = constableBloomFilterBloomFilter91.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass92);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter12.getClass();
        boolean boolean96 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 100.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter13.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable18 = null;
        constableBloomFilter13.insert(constable18);
        boolean boolean21 = constableBloomFilter13.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = constableBloomFilterBloomFilter24.getClass();
        boolean boolean26 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean31 = constableBloomFilter29.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter34.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean38 = constableBloomFilter34.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter34.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean42 = constableBloomFilter34.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass46 = constantDescBloomFilter45.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass46);
        boolean boolean48 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass46);
        boolean boolean49 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass62 = constableBloomFilter55.getClass();
        boolean boolean63 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable67 = null;
        boolean boolean68 = constableBloomFilter66.contains(constable67);
        constableBloomFilter66.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean72 = constableBloomFilter66.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass73 = constableBloomFilter66.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass73);
        boolean boolean76 = constableBloomFilter52.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable80 = null;
        boolean boolean81 = constableBloomFilter79.contains(constable80);
        constableBloomFilter79.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter79.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass84);
        boolean boolean86 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass84);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass87);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass16 = wildcardClassOfFieldBloomFilter15.getClass();
        boolean boolean17 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean22 = constableBloomFilter20.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter25.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter25.insert((java.lang.constant.Constable) ' ');
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass38 = wildcardClassOfFieldBloomFilter37.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass41);
        boolean boolean44 = constableBloomFilter34.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter47.contains(constable48);
        constableBloomFilter47.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter47.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean55 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass52);
        boolean boolean56 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable13 = null;
        boolean boolean14 = constableBloomFilter12.contains(constable13);
        constableBloomFilter12.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        boolean boolean32 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean44 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter47.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter47.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter47.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass54 = constableBloomFilter47.getClass();
        boolean boolean55 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter58.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean62 = constableBloomFilter58.contains((java.lang.constant.Constable) 100L);
        boolean boolean64 = constableBloomFilter58.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable71 = null;
        boolean boolean72 = constableBloomFilter70.contains(constable71);
        constableBloomFilter70.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean76 = constableBloomFilter70.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass77 = constableBloomFilter70.getClass();
        boolean boolean78 = constableBloomFilter67.contains((java.lang.constant.Constable) wildcardClass77);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable82 = null;
        boolean boolean83 = constableBloomFilter81.contains(constable82);
        constableBloomFilter81.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean87 = constableBloomFilter81.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass88 = constableBloomFilter81.getClass();
        constableBloomFilter67.insert((java.lang.constant.Constable) wildcardClass88);
        boolean boolean90 = constableBloomFilter58.contains((java.lang.constant.Constable) wildcardClass88);
        boolean boolean91 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass88);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter12.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass92);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10L);
        boolean boolean97 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) 'a', (int) (short) 10);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) 10);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) true);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        constableBloomFilter26.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean32 = constableBloomFilter26.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass33 = constableBloomFilter26.getClass();
        boolean boolean34 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass44 = constableBloomFilter37.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass44);
        boolean boolean47 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean52 = constableBloomFilter50.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter50.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean59 = constableBloomFilter57.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable63 = null;
        boolean boolean64 = constableBloomFilter62.contains(constable63);
        constableBloomFilter62.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter62.getClass();
        boolean boolean68 = constableBloomFilter57.contains((java.lang.constant.Constable) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter57.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass69);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) '4', (int) 'a');
        java.lang.Class<?> wildcardClass77 = constableBloomFilterBloomFilter76.getClass();
        constableBloomFilter73.insert((java.lang.constant.Constable) wildcardClass77);
        boolean boolean79 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass77);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean79);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass13 = wildcardClassOfFieldBloomFilter12.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass16);
        boolean boolean19 = constableBloomFilter9.contains((java.lang.constant.Constable) '#');
        constableBloomFilter9.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass22 = constableBloomFilter9.getClass();
        boolean boolean23 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass22);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter28.getClass();
        boolean boolean30 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        constableBloomFilter36.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean42 = constableBloomFilter36.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass43 = constableBloomFilter36.getClass();
        boolean boolean44 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter47.contains(constable48);
        constableBloomFilter47.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean53 = constableBloomFilter47.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass54 = constableBloomFilter47.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass54);
        boolean boolean57 = constableBloomFilter33.contains((java.lang.constant.Constable) 1L);
        boolean boolean59 = constableBloomFilter33.contains((java.lang.constant.Constable) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter62.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean66 = constableBloomFilter62.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter62.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean70 = constableBloomFilter62.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass74 = constantDescBloomFilter73.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass74);
        boolean boolean77 = constableBloomFilter62.contains((java.lang.constant.Constable) 10.0d);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter62.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass78);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 100);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter82.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass83);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter33.getClass();
        boolean boolean86 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) "");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter13.insert((java.lang.constant.Constable) 10);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass29);
        boolean boolean32 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter36.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter36.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean42 = constableBloomFilter36.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean44 = constableBloomFilter36.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable48 = null;
        constableBloomFilter47.insert(constable48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter52.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass58 = genericDeclarationBloomFilter57.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass58);
        boolean boolean60 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass58);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter47.getClass();
        boolean boolean62 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((-1), (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, 1);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter7.insert((java.lang.constant.Constable) 10);
        boolean boolean11 = constableBloomFilter7.contains((java.lang.constant.Constable) true);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter28.getClass();
        boolean boolean36 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter39.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass46);
        boolean boolean48 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass46);
        boolean boolean49 = constableBloomFilter7.contains((java.lang.constant.Constable) boolean48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean54 = constableBloomFilter52.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass55 = constableBloomFilter52.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter59.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean63 = constableBloomFilter59.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter59.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean67 = constableBloomFilter59.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass71 = constantDescBloomFilter70.getClass();
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass71);
        boolean boolean73 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass71);
        boolean boolean74 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass12 = wildcardClassOfFieldBloomFilter11.getClass();
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean14 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass24);
        boolean boolean27 = constableBloomFilter17.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter17.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean30 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        constableBloomFilter33.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean39 = constableBloomFilter33.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass46 = constableBloomFilterBloomFilter45.getClass();
        boolean boolean47 = constableBloomFilter42.contains((java.lang.constant.Constable) wildcardClass46);
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass46);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass46);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter17.insert((java.lang.constant.Constable) 10);
        boolean boolean21 = constableBloomFilter17.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass33 = wildcardClassOfFieldBloomFilter32.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean39 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter42.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean46 = constableBloomFilter42.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter49.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass58 = wildcardClassOfFieldBloomFilter57.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass58);
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter63.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass64);
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable70 = null;
        boolean boolean71 = constableBloomFilter69.contains(constable70);
        constableBloomFilter69.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter69.getClass();
        boolean boolean75 = constableBloomFilter42.contains((java.lang.constant.Constable) wildcardClass74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable79 = null;
        boolean boolean80 = constableBloomFilter78.contains(constable79);
        constableBloomFilter78.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean84 = constableBloomFilter78.contains((java.lang.constant.Constable) 'a');
        boolean boolean86 = constableBloomFilter78.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter78.getClass();
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass87);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass87);
        java.lang.Class<?> wildcardClass90 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) 10);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter12.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable17 = null;
        constableBloomFilter12.insert(constable17);
        boolean boolean20 = constableBloomFilter12.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass27 = wildcardClassOfFieldBloomFilter26.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass30);
        boolean boolean33 = constableBloomFilter23.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        constableBloomFilter36.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter36.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        constableBloomFilter48.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean54 = constableBloomFilter48.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass55 = constableBloomFilter48.getClass();
        boolean boolean56 = constableBloomFilter45.contains((java.lang.constant.Constable) wildcardClass55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable60 = null;
        boolean boolean61 = constableBloomFilter59.contains(constable60);
        constableBloomFilter59.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean65 = constableBloomFilter59.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass66 = constableBloomFilter59.getClass();
        constableBloomFilter45.insert((java.lang.constant.Constable) wildcardClass66);
        boolean boolean69 = constableBloomFilter45.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass73 = wildcardClassOfFieldBloomFilter72.getClass();
        constableBloomFilter45.insert((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass83 = constableBloomFilter82.getClass();
        constableBloomFilter79.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass83);
        boolean boolean86 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass83);
        boolean boolean87 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean86);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        constableBloomFilter2.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable10 = null;
        boolean boolean11 = constableBloomFilter9.contains(constable10);
        constableBloomFilter9.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean15 = constableBloomFilter9.contains((java.lang.constant.Constable) 'a');
        boolean boolean17 = constableBloomFilter9.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter9.getClass();
        boolean boolean19 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean24 = constableBloomFilter22.contains((java.lang.constant.Constable) 0L);
        boolean boolean26 = constableBloomFilter22.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean28 = constableBloomFilter22.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter31.insert((java.lang.constant.Constable) 10);
        constableBloomFilter31.insert((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter31.getClass();
        boolean boolean37 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass36);
        boolean boolean38 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean43 = constableBloomFilter41.contains((java.lang.constant.Constable) 0L);
        boolean boolean45 = constableBloomFilter41.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass51 = typeDescriptorBloomFilter50.getClass();
        boolean boolean52 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 100);
        java.lang.Class<?> wildcardClass56 = constableBloomFilterBloomFilter55.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean58 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 100);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean17 = constableBloomFilter11.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter23.contains(constable24);
        constableBloomFilter23.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean29 = constableBloomFilter23.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass30 = constableBloomFilter23.getClass();
        boolean boolean31 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass41);
        boolean boolean43 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass41);
        boolean boolean44 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean43);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        constableBloomFilter49.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter49.getClass();
        boolean boolean55 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter58.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter58.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter58.insert((java.lang.constant.Constable) (-1L));
        boolean boolean66 = constableBloomFilter58.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter58.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter58.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass69);
        java.lang.constant.Constable constable71 = null;
        boolean boolean72 = constableBloomFilter2.contains(constable71);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(100, 0);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass14 = constableBloomFilter5.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean26 = constableBloomFilter24.contains((java.lang.constant.Constable) ' ');
        boolean boolean28 = constableBloomFilter24.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter24.getClass();
        boolean boolean30 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        constableBloomFilter33.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean39 = constableBloomFilter33.contains((java.lang.constant.Constable) 'a');
        boolean boolean41 = constableBloomFilter33.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter33.getClass();
        boolean boolean43 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass42);
        boolean boolean44 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass42);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean50 = constableBloomFilter48.contains((java.lang.constant.Constable) 0L);
        boolean boolean52 = constableBloomFilter48.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter48.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass55 = constableBloomFilter48.getClass();
        boolean boolean56 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) (short) 10);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(10, (int) 'a');
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) '4', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) (byte) 100);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) ' ');
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter5.getClass();
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 1);
        java.lang.constant.Constable constable15 = null;
        constableBloomFilter14.insert(constable15);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter14.getClass();
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass17);
        java.lang.constant.Constable constable19 = null;
        constableBloomFilter2.insert(constable19);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter7.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean11 = constableBloomFilter7.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter7.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean15 = constableBloomFilter7.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        boolean boolean29 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter32.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass39);
        boolean boolean42 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean50 = constableBloomFilter48.contains((java.lang.constant.Constable) ' ');
        boolean boolean52 = constableBloomFilter48.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter48.getClass();
        boolean boolean54 = constableBloomFilter45.contains((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        constableBloomFilter57.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) 'a');
        boolean boolean65 = constableBloomFilter57.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass66 = constableBloomFilter57.getClass();
        boolean boolean67 = constableBloomFilter45.contains((java.lang.constant.Constable) wildcardClass66);
        boolean boolean68 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean67);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable41 = null;
        boolean boolean42 = constableBloomFilter40.contains(constable41);
        constableBloomFilter40.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter40.getClass();
        boolean boolean46 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter13.getClass();
        boolean boolean48 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter54.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter54.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable59 = null;
        constableBloomFilter54.insert(constable59);
        boolean boolean62 = constableBloomFilter54.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass66 = wildcardClassOfFieldBloomFilter65.getClass();
        boolean boolean67 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass66);
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass66);
        boolean boolean69 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass66);
        java.lang.Class<?> wildcardClass70 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        boolean boolean23 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter26.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter26.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass37);
        boolean boolean39 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean48 = constableBloomFilter42.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass55 = constableBloomFilterBloomFilter54.getClass();
        boolean boolean56 = constableBloomFilter51.contains((java.lang.constant.Constable) wildcardClass55);
        constableBloomFilter42.insert((java.lang.constant.Constable) wildcardClass55);
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass55);
        boolean boolean59 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter65.contains(constable66);
        constableBloomFilter65.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean71 = constableBloomFilter65.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass72 = constableBloomFilter65.getClass();
        boolean boolean73 = constableBloomFilter62.contains((java.lang.constant.Constable) wildcardClass72);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable77 = null;
        boolean boolean78 = constableBloomFilter76.contains(constable77);
        constableBloomFilter76.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean82 = constableBloomFilter76.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass83 = constableBloomFilter76.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass83);
        boolean boolean86 = constableBloomFilter62.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter89 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass90 = constableBloomFilterBloomFilter89.getClass();
        boolean boolean91 = constableBloomFilter62.contains((java.lang.constant.Constable) wildcardClass90);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>(100, (int) (short) 10);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 1);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) ' ');
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass16 = wildcardClassOfFieldBloomFilter15.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass19);
        boolean boolean22 = constableBloomFilter12.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass44 = constableBloomFilter37.getClass();
        boolean boolean45 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        constableBloomFilter48.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean54 = constableBloomFilter48.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass55 = constableBloomFilter48.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass55);
        boolean boolean57 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter60.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter60.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter60.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass67 = constableBloomFilter60.getClass();
        boolean boolean68 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass67);
        boolean boolean69 = constableBloomFilter12.contains((java.lang.constant.Constable) boolean68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable73 = null;
        constableBloomFilter72.insert(constable73);
        java.lang.Class<?> wildcardClass75 = constableBloomFilter72.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass75);
        boolean boolean77 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass75);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter5.getClass();
        boolean boolean79 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) '4', (int) ' ');
        java.lang.Class<?> wildcardClass3 = constableBloomFilterBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(10, (int) '4');
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter17.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter17.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable22 = null;
        constableBloomFilter17.insert(constable22);
        boolean boolean25 = constableBloomFilter17.contains((java.lang.constant.Constable) 0);
        constableBloomFilter17.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass31 = wildcardClassOfFieldBloomFilter30.getClass();
        boolean boolean32 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass31);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        constableBloomFilter36.insert(constable37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass54 = wildcardClassOfFieldBloomFilter53.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass57);
        boolean boolean60 = constableBloomFilter50.contains((java.lang.constant.Constable) '#');
        constableBloomFilter50.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass63 = constableBloomFilter50.getClass();
        boolean boolean64 = constableBloomFilter41.contains((java.lang.constant.Constable) wildcardClass63);
        boolean boolean65 = constableBloomFilter36.contains((java.lang.constant.Constable) boolean64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass69 = wildcardClassOfFieldBloomFilter68.getClass();
        boolean boolean70 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass69);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass74 = typeBloomFilter73.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass74);
        boolean boolean76 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean81 = constableBloomFilter79.contains((java.lang.constant.Constable) 0L);
        boolean boolean83 = constableBloomFilter79.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean85 = constableBloomFilter79.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter88 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter88.insert((java.lang.constant.Constable) 10);
        constableBloomFilter88.insert((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter88.getClass();
        boolean boolean94 = constableBloomFilter79.contains((java.lang.constant.Constable) wildcardClass93);
        boolean boolean95 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean94);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter15.getClass();
        boolean boolean21 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean26 = constableBloomFilter24.contains((java.lang.constant.Constable) ' ');
        boolean boolean28 = constableBloomFilter24.contains((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter31.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter31.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter31.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter42.insert((java.lang.constant.Constable) 10);
        boolean boolean46 = constableBloomFilter42.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter42.contains(constable47);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter42.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass49);
        boolean boolean52 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        constableBloomFilter5.insert(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass23 = wildcardClassOfFieldBloomFilter22.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter19.contains((java.lang.constant.Constable) '#');
        constableBloomFilter19.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter19.getClass();
        boolean boolean33 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass38 = wildcardClassOfFieldBloomFilter37.getClass();
        boolean boolean39 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass43 = typeBloomFilter42.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass51 = constableBloomFilterBloomFilter50.getClass();
        boolean boolean52 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter47.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>(10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter13.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        boolean boolean29 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter32.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean42 = constableBloomFilter18.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter18.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter47.contains(constable48);
        constableBloomFilter47.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter47.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean54 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable61 = null;
        boolean boolean62 = constableBloomFilter60.contains(constable61);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter65.contains(constable66);
        boolean boolean69 = constableBloomFilter65.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass70 = constableBloomFilter65.getClass();
        constableBloomFilter60.insert((java.lang.constant.Constable) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter60.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass72);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(100, (int) 'a');
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass26 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter5.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = constableBloomFilterBloomFilter32.getClass();
        boolean boolean34 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        constableBloomFilter39.insert(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean48 = constableBloomFilter46.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass49 = constableBloomFilter46.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter39.getClass();
        boolean boolean52 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter5.getClass();
        boolean boolean54 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        constableBloomFilter7.insert(constable8);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter7.getClass();
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean16 = constableBloomFilter14.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass23 = constableBloomFilterBloomFilter22.getClass();
        boolean boolean24 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass23);
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter28.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        constableBloomFilter36.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean42 = constableBloomFilter36.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass43 = constableBloomFilter36.getClass();
        boolean boolean44 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter47.contains(constable48);
        constableBloomFilter47.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean53 = constableBloomFilter47.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass54 = constableBloomFilter47.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass54);
        boolean boolean57 = constableBloomFilter33.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass58 = constableBloomFilter33.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass58);
        boolean boolean60 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass58);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter64.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter64.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean70 = constableBloomFilter64.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean72 = constableBloomFilter64.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter64.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean79 = constableBloomFilter77.contains((java.lang.constant.Constable) 0L);
        boolean boolean81 = constableBloomFilter77.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter84.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean88 = constableBloomFilter84.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter84.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean92 = constableBloomFilter84.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter84.getClass();
        constableBloomFilter77.insert((java.lang.constant.Constable) wildcardClass93);
        boolean boolean95 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass93);
        java.lang.constant.Constable constable96 = null;
        boolean boolean97 = constableBloomFilter2.contains(constable96);
        java.lang.Class<?> wildcardClass98 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass10 = wildcardClassOfFieldBloomFilter9.getClass();
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter14.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter14.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter14.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter23.insert((java.lang.constant.Constable) 10);
        boolean boolean27 = constableBloomFilter23.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter23.contains(constable28);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter23.getClass();
        boolean boolean31 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass30);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean31);
        java.lang.Class<?> wildcardClass33 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass21 = constableBloomFilterBloomFilter20.getClass();
        boolean boolean22 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass21);
        boolean boolean24 = constableBloomFilter17.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter27.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean34 = constableBloomFilter32.contains((java.lang.constant.Constable) 0L);
        boolean boolean36 = constableBloomFilter32.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass42 = typeDescriptorBloomFilter41.getClass();
        boolean boolean43 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter46.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter46.insert((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass57 = constableBloomFilter46.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass57);
        boolean boolean59 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass57);
        boolean boolean60 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter63.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter63.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter63.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter63.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter74.insert((java.lang.constant.Constable) 10);
        boolean boolean78 = constableBloomFilter74.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable79 = null;
        boolean boolean80 = constableBloomFilter74.contains(constable79);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter74.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass81);
        boolean boolean83 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable10 = null;
        constableBloomFilter5.insert(constable10);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter16.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) (short) 100);
        constableBloomFilter16.insert((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean31 = constableBloomFilter27.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter34.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass43 = wildcardClassOfFieldBloomFilter42.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass43);
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter48.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass49);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter54.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter54.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter61.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter61.getClass();
        boolean boolean65 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass64);
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter54.contains(constable66);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter54.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean71 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean17 = constableBloomFilter11.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass18 = constableBloomFilter11.getClass();
        boolean boolean19 = constableBloomFilter8.contains((java.lang.constant.Constable) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter8.getClass();
        boolean boolean21 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter24.getClass();
        boolean boolean26 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass25);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass25);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) (byte) 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>(100, (int) '#');
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter15.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean48 = constableBloomFilter24.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass52 = wildcardClassOfFieldBloomFilter51.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter57.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter57.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter57.insert((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter57.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter14.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        java.lang.Class<?> wildcardClass20 = constableBloomFilter19.getClass();
        boolean boolean21 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass20);
        boolean boolean22 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean21);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) (byte) 0);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass14 = constableBloomFilterBloomFilter13.getClass();
        boolean boolean15 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass14);
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter19.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean48 = constableBloomFilter24.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass49 = constableBloomFilter24.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass49);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>(0, (int) (byte) 0);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((-1), 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) 100);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter14.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter14.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable19 = null;
        constableBloomFilter14.insert(constable19);
        boolean boolean22 = constableBloomFilter14.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean35 = constableBloomFilter25.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter38.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        boolean boolean58 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable62 = null;
        boolean boolean63 = constableBloomFilter61.contains(constable62);
        constableBloomFilter61.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean67 = constableBloomFilter61.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass68 = constableBloomFilter61.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean71 = constableBloomFilter47.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass75 = wildcardClassOfFieldBloomFilter74.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass75);
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass75);
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass75);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass75);
        boolean boolean80 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, 0);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 100.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass14 = wildcardClassOfFieldBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter18.getClass();
        boolean boolean20 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter26.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter26.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean32 = constableBloomFilter26.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean34 = constableBloomFilter26.contains((java.lang.constant.Constable) 0L);
        boolean boolean36 = constableBloomFilter26.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter39.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter39.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        constableBloomFilter52.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable60 = null;
        boolean boolean61 = constableBloomFilter59.contains(constable60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter59.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass62);
        java.lang.Class<?> wildcardClass66 = constableBloomFilter26.getClass();
        boolean boolean67 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass66);
        boolean boolean68 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass66);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter71.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter71.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable76 = null;
        constableBloomFilter71.insert(constable76);
        boolean boolean79 = constableBloomFilter71.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass83 = wildcardClassOfFieldBloomFilter82.getClass();
        boolean boolean84 = constableBloomFilter71.contains((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, 10);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass8 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter26.contains((java.lang.constant.Constable) '#');
        constableBloomFilter26.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter26.getClass();
        boolean boolean40 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter45.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean49 = constableBloomFilter45.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter45.insert((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        constableBloomFilter54.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable62 = null;
        boolean boolean63 = constableBloomFilter61.contains(constable62);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter61.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable69 = null;
        boolean boolean70 = constableBloomFilter68.contains(constable69);
        constableBloomFilter68.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable76 = null;
        boolean boolean77 = constableBloomFilter75.contains(constable76);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter75.getClass();
        constableBloomFilter68.insert((java.lang.constant.Constable) wildcardClass78);
        boolean boolean80 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass78);
        boolean boolean81 = constableBloomFilter45.contains((java.lang.constant.Constable) wildcardClass78);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter84.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter89 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass93 = wildcardClassOfFieldBloomFilter92.getClass();
        constableBloomFilter89.insert((java.lang.constant.Constable) wildcardClass93);
        constableBloomFilter84.insert((java.lang.constant.Constable) wildcardClass93);
        constableBloomFilter45.insert((java.lang.constant.Constable) wildcardClass93);
        boolean boolean97 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass9);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter14.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter14.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter27.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter27.insert((java.lang.constant.Constable) (-1L));
        boolean boolean35 = constableBloomFilter27.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass38 = constableBloomFilter27.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean44 = constableBloomFilter42.contains((java.lang.constant.Constable) ' ');
        boolean boolean46 = constableBloomFilter42.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter42.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass47);
        boolean boolean49 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        constableBloomFilter52.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable60 = null;
        boolean boolean61 = constableBloomFilter59.contains(constable60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter59.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable67 = null;
        boolean boolean68 = constableBloomFilter66.contains(constable67);
        constableBloomFilter66.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter73.getClass();
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass76);
        boolean boolean78 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass76);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter52.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter17.insert((java.lang.constant.Constable) 10);
        boolean boolean21 = constableBloomFilter17.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass33 = wildcardClassOfFieldBloomFilter32.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter43.insert((java.lang.constant.Constable) 10);
        boolean boolean47 = constableBloomFilter43.contains((java.lang.constant.Constable) true);
        boolean boolean49 = constableBloomFilter43.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        constableBloomFilter52.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean58 = constableBloomFilter52.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable65 = null;
        boolean boolean66 = constableBloomFilter64.contains(constable65);
        constableBloomFilter64.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean70 = constableBloomFilter64.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass71 = constableBloomFilter64.getClass();
        boolean boolean72 = constableBloomFilter61.contains((java.lang.constant.Constable) wildcardClass71);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable76 = null;
        boolean boolean77 = constableBloomFilter75.contains(constable76);
        constableBloomFilter75.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean81 = constableBloomFilter75.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass82 = constableBloomFilter75.getClass();
        constableBloomFilter61.insert((java.lang.constant.Constable) wildcardClass82);
        boolean boolean84 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass82);
        boolean boolean85 = constableBloomFilter43.contains((java.lang.constant.Constable) boolean84);
        constableBloomFilter43.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter90 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable91 = null;
        boolean boolean92 = constableBloomFilter90.contains(constable91);
        constableBloomFilter90.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter90.getClass();
        boolean boolean96 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass95);
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass95);
        boolean boolean98 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass95);
        java.lang.Class<?> wildcardClass99 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) 10);
        constableBloomFilter5.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable13 = null;
        boolean boolean14 = constableBloomFilter12.contains(constable13);
        constableBloomFilter12.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) 'a');
        boolean boolean20 = constableBloomFilter12.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter12.getClass();
        boolean boolean22 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean27 = constableBloomFilter25.contains((java.lang.constant.Constable) 0L);
        boolean boolean29 = constableBloomFilter25.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter34.insert((java.lang.constant.Constable) 10);
        constableBloomFilter34.insert((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter34.getClass();
        boolean boolean40 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass39);
        boolean boolean42 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean41);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        constableBloomFilter2.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean11 = constableBloomFilter9.contains((java.lang.constant.Constable) 0L);
        boolean boolean13 = constableBloomFilter9.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter16.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean24 = constableBloomFilter16.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter16.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass25);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter30.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter30.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable35 = null;
        constableBloomFilter30.insert(constable35);
        boolean boolean38 = constableBloomFilter30.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter41.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) (short) 100);
        constableBloomFilter41.insert((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter52.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean56 = constableBloomFilter52.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter59.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass68 = wildcardClassOfFieldBloomFilter67.getClass();
        constableBloomFilter64.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter73.getClass();
        constableBloomFilter59.insert((java.lang.constant.Constable) wildcardClass74);
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter79.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter79.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter86 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter86.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter86.getClass();
        boolean boolean90 = constableBloomFilter79.contains((java.lang.constant.Constable) wildcardClass89);
        java.lang.constant.Constable constable91 = null;
        boolean boolean92 = constableBloomFilter79.contains(constable91);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter79.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass93);
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass93);
        boolean boolean96 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass93);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean96);
        java.lang.Class<?> wildcardClass98 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 1L);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 100.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass17 = wildcardClassOfFieldBloomFilter16.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter21.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter21.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter21.insert((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        constableBloomFilter33.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean39 = constableBloomFilter33.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass40 = constableBloomFilter33.getClass();
        boolean boolean41 = constableBloomFilter30.contains((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter44.contains(constable45);
        constableBloomFilter44.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean50 = constableBloomFilter44.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass51 = constableBloomFilter44.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass51);
        constableBloomFilter30.insert((java.lang.constant.Constable) (short) -1);
        java.lang.Class<?> wildcardClass55 = constableBloomFilter30.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter21.getClass();
        boolean boolean58 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass57);
        // The following exception was thrown during execution in test generation
        try {
            constableBloomFilter2.insert((java.lang.constant.Constable) boolean58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        java.lang.Class<?> wildcardClass13 = constableBloomFilter10.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter17.insert((java.lang.constant.Constable) 10);
        boolean boolean21 = constableBloomFilter17.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass25 = wildcardClassOfFieldBloomFilter24.getClass();
        boolean boolean26 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter29.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter29.insert((java.lang.constant.Constable) 1.0f);
        constableBloomFilter29.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter38.insert((java.lang.constant.Constable) 10);
        boolean boolean42 = constableBloomFilter38.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter38.contains(constable43);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        boolean boolean46 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass45);
        constableBloomFilter17.insert((java.lang.constant.Constable) boolean46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        constableBloomFilter58.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean64 = constableBloomFilter58.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass65 = constableBloomFilter58.getClass();
        boolean boolean66 = constableBloomFilter55.contains((java.lang.constant.Constable) wildcardClass65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable70 = null;
        boolean boolean71 = constableBloomFilter69.contains(constable70);
        constableBloomFilter69.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean75 = constableBloomFilter69.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass76 = constableBloomFilter69.getClass();
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass76);
        boolean boolean79 = constableBloomFilter55.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass83 = wildcardClassOfFieldBloomFilter82.getClass();
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean25 = constableBloomFilter19.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass26 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        boolean boolean43 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean56 = constableBloomFilter32.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = constableBloomFilterBloomFilter59.getClass();
        boolean boolean61 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass60);
        constableBloomFilter32.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean68 = constableBloomFilter66.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable75 = null;
        boolean boolean76 = constableBloomFilter74.contains(constable75);
        constableBloomFilter74.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean80 = constableBloomFilter74.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass81 = constableBloomFilter74.getClass();
        boolean boolean82 = constableBloomFilter71.contains((java.lang.constant.Constable) wildcardClass81);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter85 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable86 = null;
        boolean boolean87 = constableBloomFilter85.contains(constable86);
        constableBloomFilter85.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean91 = constableBloomFilter85.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass92 = constableBloomFilter85.getClass();
        constableBloomFilter71.insert((java.lang.constant.Constable) wildcardClass92);
        boolean boolean94 = constableBloomFilter66.contains((java.lang.constant.Constable) wildcardClass92);
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass92);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass97 = constableBloomFilter5.getClass();
        // The following exception was thrown during execution in test generation
        try {
            constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 100);
        java.lang.Class<?> wildcardClass9 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) (byte) 1);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        boolean boolean38 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean50 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter53.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter53.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter53.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass60 = constableBloomFilter53.getClass();
        boolean boolean61 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass60);
        boolean boolean62 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean61);
        boolean boolean64 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter67.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean71 = constableBloomFilter67.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter67.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean75 = constableBloomFilter67.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter67.getClass();
        boolean boolean77 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass76);
        // The following exception was thrown during execution in test generation
        try {
            constableBloomFilter2.insert((java.lang.constant.Constable) boolean77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass50 = wildcardClassOfFieldBloomFilter49.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean56 = constableBloomFilter46.contains((java.lang.constant.Constable) '#');
        constableBloomFilter46.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass59 = constableBloomFilter46.getClass();
        boolean boolean60 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass59);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter64.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter64.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter64.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass71 = constableBloomFilter64.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass71);
        boolean boolean74 = constableBloomFilter2.contains((java.lang.constant.Constable) 10L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter77.getClass();
        boolean boolean79 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = constableBloomFilterBloomFilter13.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter18.getClass();
        boolean boolean20 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean25 = constableBloomFilter23.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable32 = null;
        boolean boolean33 = constableBloomFilter31.contains(constable32);
        constableBloomFilter31.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean37 = constableBloomFilter31.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass38 = constableBloomFilter31.getClass();
        boolean boolean39 = constableBloomFilter28.contains((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable43 = null;
        boolean boolean44 = constableBloomFilter42.contains(constable43);
        constableBloomFilter42.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean48 = constableBloomFilter42.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass49 = constableBloomFilter42.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean51);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass16 = wildcardClassOfFieldBloomFilter15.getClass();
        boolean boolean17 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter20.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass29);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter20.getClass();
        boolean boolean33 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) 'a', (int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = annotatedElementBloomFilter36.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        constableBloomFilter7.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) '#');
        constableBloomFilter16.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter16.getClass();
        boolean boolean30 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean30);
        boolean boolean33 = constableBloomFilter2.contains((java.lang.constant.Constable) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        boolean boolean37 = constableBloomFilter2.contains((java.lang.constant.Constable) "");
        java.lang.Class<?> wildcardClass38 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter10.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter10.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter19.getClass();
        boolean boolean21 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = constableBloomFilter10.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter18.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass25);
        boolean boolean27 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter33.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass42 = wildcardClassOfFieldBloomFilter41.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass42);
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter47.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass48);
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass48);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass48);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (short) 10, 0);
        java.lang.Class<?> wildcardClass6 = typeDescriptorBloomFilter5.getClass();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>(10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.constant.Constable constable12 = null;
        constableBloomFilter11.insert(constable12);
        java.lang.Class<?> wildcardClass14 = constableBloomFilter11.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter18.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean26 = constableBloomFilter18.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass30 = constantDescBloomFilter29.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean36 = constableBloomFilter34.contains((java.lang.constant.Constable) ' ');
        boolean boolean38 = constableBloomFilter34.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter34.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean49 = constableBloomFilter43.contains((java.lang.constant.Constable) 'a');
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter43.contains(constable50);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter43.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        constableBloomFilter7.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) '#');
        constableBloomFilter16.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter16.getClass();
        boolean boolean30 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        constableBloomFilter34.insert(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass45 = wildcardClassOfFieldBloomFilter44.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean51 = constableBloomFilter41.contains((java.lang.constant.Constable) '#');
        constableBloomFilter41.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass54 = constableBloomFilter41.getClass();
        boolean boolean55 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass54);
        boolean boolean56 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean55);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) (byte) 100);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass6 = constableBloomFilterBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass14 = wildcardClassOfFieldBloomFilter13.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass17);
        boolean boolean20 = constableBloomFilter10.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter10.getClass();
        boolean boolean22 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>(0, 100);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass17 = constableBloomFilter10.getClass();
        boolean boolean18 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean31 = constableBloomFilter7.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        constableBloomFilter36.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter36.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass9);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter14.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter14.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter27.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter27.insert((java.lang.constant.Constable) (-1L));
        boolean boolean35 = constableBloomFilter27.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass38 = constableBloomFilter27.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean44 = constableBloomFilter42.contains((java.lang.constant.Constable) ' ');
        boolean boolean46 = constableBloomFilter42.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter42.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass47);
        boolean boolean49 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass47);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter18.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter32.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass35);
        boolean boolean38 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass50 = wildcardClassOfFieldBloomFilter49.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass50);
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass50);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean58 = constableBloomFilter56.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter56.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        boolean boolean23 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter26.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter26.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter14.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter43.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter43.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter43.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter43.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter43.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter59.getClass();
        boolean boolean61 = constableBloomFilter56.contains((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter56.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 0, (int) (short) 0);
        java.lang.Class<?> wildcardClass70 = constantDescBloomFilter69.getClass();
        boolean boolean71 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter29.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass42 = charSequenceBloomFilter41.getClass();
        boolean boolean43 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable52 = null;
        boolean boolean53 = constableBloomFilter51.contains(constable52);
        boolean boolean55 = constableBloomFilter51.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter51.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable61 = null;
        boolean boolean62 = constableBloomFilter60.contains(constable61);
        constableBloomFilter60.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean66 = constableBloomFilter60.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass67 = constableBloomFilter60.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass67);
        boolean boolean69 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass67);
        boolean boolean70 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        java.lang.constant.Constable constable6 = null;
        constableBloomFilter5.insert(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass11 = constableBloomFilter10.getClass();
        boolean boolean12 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass11);
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter29.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean33 = constableBloomFilter29.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter36.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass45 = wildcardClassOfFieldBloomFilter44.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass45);
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter50.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass51);
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable57 = null;
        boolean boolean58 = constableBloomFilter56.contains(constable57);
        constableBloomFilter56.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter56.getClass();
        boolean boolean62 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass61);
        boolean boolean63 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass61);
        boolean boolean64 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        boolean boolean23 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter26.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter26.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter14.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        constableBloomFilter7.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter7.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass29 = constableBloomFilterBloomFilter28.getClass();
        boolean boolean30 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter35.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter35.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean43 = constableBloomFilter35.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter46.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean50 = constableBloomFilter46.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter53.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass62 = wildcardClassOfFieldBloomFilter61.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter67.getClass();
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable74 = null;
        boolean boolean75 = constableBloomFilter73.contains(constable74);
        constableBloomFilter73.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass78 = constableBloomFilter73.getClass();
        boolean boolean79 = constableBloomFilter46.contains((java.lang.constant.Constable) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter46.getClass();
        boolean boolean81 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass80);
        boolean boolean82 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean81);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) '4', (int) (byte) 10);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) '4');
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter13.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter13.insert((java.lang.constant.Constable) (-1L));
        boolean boolean21 = constableBloomFilter13.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter13.getClass();
        boolean boolean25 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass24);
        java.lang.constant.Constable constable26 = null;
        constableBloomFilter2.insert(constable26);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, 0);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter17.getClass();
        boolean boolean19 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter13.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        boolean boolean29 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter32.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean42 = constableBloomFilter18.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter18.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable48 = null;
        boolean boolean49 = constableBloomFilter47.contains(constable48);
        constableBloomFilter47.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter47.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        boolean boolean67 = constableBloomFilter63.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter63.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable73 = null;
        boolean boolean74 = constableBloomFilter72.contains(constable73);
        constableBloomFilter72.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean78 = constableBloomFilter72.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass79 = constableBloomFilter72.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass79);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass84 = genericDeclarationBloomFilter83.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass84);
        boolean boolean86 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass84);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) 'a', (int) (byte) 10);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) 'a', (int) ' ');
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) '4', (int) '#');
        java.lang.Class<?> wildcardClass6 = charSequenceBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter10.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter10.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) (short) 100);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter10.contains(constable17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        boolean boolean32 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean45 = constableBloomFilter21.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        constableBloomFilter48.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter48.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean55 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        boolean boolean60 = constableBloomFilter58.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        constableBloomFilter63.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean69 = constableBloomFilter63.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass76 = wildcardClassOfFieldBloomFilter75.getClass();
        constableBloomFilter72.insert((java.lang.constant.Constable) wildcardClass76);
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        constableBloomFilter72.insert((java.lang.constant.Constable) wildcardClass79);
        boolean boolean82 = constableBloomFilter72.contains((java.lang.constant.Constable) '#');
        constableBloomFilter72.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass85 = constableBloomFilter72.getClass();
        boolean boolean86 = constableBloomFilter63.contains((java.lang.constant.Constable) wildcardClass85);
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass85);
        boolean boolean88 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass85);
        boolean boolean89 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean88);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) 'a');
        boolean boolean23 = constableBloomFilter15.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter15.getClass();
        boolean boolean25 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter39.getClass();
        boolean boolean47 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass46);
        constableBloomFilter36.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean54 = constableBloomFilter52.contains((java.lang.constant.Constable) 0L);
        boolean boolean56 = constableBloomFilter52.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean58 = constableBloomFilter52.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass59 = constableBloomFilter52.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass59);
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(1, (int) '4');
        java.lang.Class<?> wildcardClass65 = constableBloomFilterBloomFilter64.getClass();
        boolean boolean66 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable71 = null;
        boolean boolean72 = constableBloomFilter70.contains(constable71);
        constableBloomFilter70.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean76 = constableBloomFilter70.contains((java.lang.constant.Constable) 'a');
        boolean boolean78 = constableBloomFilter70.contains((java.lang.constant.Constable) 100.0f);
        constableBloomFilter70.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 1);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter83.getClass();
        boolean boolean85 = constableBloomFilter70.contains((java.lang.constant.Constable) wildcardClass84);
        boolean boolean86 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (short) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass17 = serializableBloomFilter16.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass17);
        boolean boolean19 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>(1, (int) ' ');
        java.lang.Class<?> wildcardClass10 = serializableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass10);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) 0L);
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass22 = typeDescriptorBloomFilter21.getClass();
        boolean boolean23 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        constableBloomFilter26.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean32 = constableBloomFilter26.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter26.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter26.insert((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass37 = constableBloomFilter26.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass17 = constableBloomFilter10.getClass();
        boolean boolean18 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass16 = wildcardClassOfFieldBloomFilter15.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass19);
        boolean boolean22 = constableBloomFilter12.contains((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable41 = null;
        constableBloomFilter40.insert(constable41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass58 = wildcardClassOfFieldBloomFilter57.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass61);
        boolean boolean64 = constableBloomFilter54.contains((java.lang.constant.Constable) '#');
        constableBloomFilter54.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass67 = constableBloomFilter54.getClass();
        boolean boolean68 = constableBloomFilter45.contains((java.lang.constant.Constable) wildcardClass67);
        boolean boolean69 = constableBloomFilter40.contains((java.lang.constant.Constable) boolean68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass73 = wildcardClassOfFieldBloomFilter72.getClass();
        boolean boolean74 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass73);
        boolean boolean75 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass73);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter37.getClass();
        boolean boolean77 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass76);
        boolean boolean78 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass76);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(100, (int) ' ');
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter7.insert((java.lang.constant.Constable) 10);
        boolean boolean11 = constableBloomFilter7.contains((java.lang.constant.Constable) true);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter28.getClass();
        boolean boolean36 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter39.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass46);
        boolean boolean48 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass46);
        boolean boolean49 = constableBloomFilter7.contains((java.lang.constant.Constable) boolean48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        boolean boolean61 = constableBloomFilter57.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter57.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter67.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter67.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter67.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter67.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter78.insert((java.lang.constant.Constable) 10);
        boolean boolean82 = constableBloomFilter78.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable83 = null;
        boolean boolean84 = constableBloomFilter78.contains(constable83);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter78.getClass();
        constableBloomFilter67.insert((java.lang.constant.Constable) wildcardClass85);
        boolean boolean87 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass85);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass85);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter91 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass92 = wildcardClassOfFieldBloomFilter91.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        constableBloomFilter2.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass13 = wildcardClassOfFieldBloomFilter12.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean19 = constableBloomFilter17.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        boolean boolean33 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        constableBloomFilter36.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean42 = constableBloomFilter36.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass43 = constableBloomFilter36.getClass();
        constableBloomFilter22.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean45 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass43);
        constableBloomFilter9.insert((java.lang.constant.Constable) boolean45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        constableBloomFilter52.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean58 = constableBloomFilter52.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass59 = constableBloomFilter52.getClass();
        boolean boolean60 = constableBloomFilter49.contains((java.lang.constant.Constable) wildcardClass59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        constableBloomFilter63.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean69 = constableBloomFilter63.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass70 = constableBloomFilter63.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass70);
        boolean boolean73 = constableBloomFilter49.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter49.getClass();
        boolean boolean75 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass74);
        boolean boolean76 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean75);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((-1), (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter13.insert((java.lang.constant.Constable) 10);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) true);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        constableBloomFilter22.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean28 = constableBloomFilter22.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        boolean boolean42 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean54 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass52);
        boolean boolean55 = constableBloomFilter13.contains((java.lang.constant.Constable) boolean54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        boolean boolean67 = constableBloomFilter63.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter63.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean71 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass68);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean76 = constableBloomFilter74.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable80 = null;
        boolean boolean81 = constableBloomFilter79.contains(constable80);
        constableBloomFilter79.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter79.getClass();
        boolean boolean85 = constableBloomFilter74.contains((java.lang.constant.Constable) wildcardClass84);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass84);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter91 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (short) 0, 10);
        java.lang.Class<?> wildcardClass92 = charSequenceBloomFilter91.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable10 = null;
        boolean boolean11 = constableBloomFilter9.contains(constable10);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter23.contains(constable24);
        java.lang.Class<?> wildcardClass26 = constableBloomFilter23.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable32 = null;
        boolean boolean33 = constableBloomFilter31.contains(constable32);
        boolean boolean35 = constableBloomFilter31.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter31.getClass();
        boolean boolean37 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable41 = null;
        boolean boolean42 = constableBloomFilter40.contains(constable41);
        constableBloomFilter40.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean46 = constableBloomFilter40.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass53 = wildcardClassOfFieldBloomFilter52.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean59 = constableBloomFilter49.contains((java.lang.constant.Constable) '#');
        constableBloomFilter49.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass62 = constableBloomFilter49.getClass();
        boolean boolean63 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter67.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter67.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean73 = constableBloomFilter67.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean75 = constableBloomFilter67.contains((java.lang.constant.Constable) 0.0f);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter67.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean15 = constableBloomFilter9.contains((java.lang.constant.Constable) (short) 100);
        constableBloomFilter9.insert((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass36 = wildcardClassOfFieldBloomFilter35.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass42);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter47.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter47.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter54.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter54.getClass();
        boolean boolean58 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass57);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter47.contains(constable59);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter47.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass61);
        java.lang.constant.Constable constable65 = null;
        constableBloomFilter2.insert(constable65);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) '#', (int) (byte) 10);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean15 = constableBloomFilter11.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter11.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean19 = constableBloomFilter11.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass23 = constantDescBloomFilter22.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean25 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass23);
        java.lang.Class<?> wildcardClass26 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) ' ');
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter12.getClass();
        boolean boolean18 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        boolean boolean29 = constableBloomFilter21.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter21.getClass();
        boolean boolean31 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass30);
        boolean boolean32 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        java.lang.Class<?> wildcardClass33 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass23 = constableBloomFilter18.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        boolean boolean38 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean51 = constableBloomFilter27.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass55 = wildcardClassOfFieldBloomFilter54.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass55);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass55);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter5.contains(constable58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean64 = constableBloomFilter62.contains((java.lang.constant.Constable) 0L);
        boolean boolean66 = constableBloomFilter62.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter69.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter69.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean75 = constableBloomFilter69.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter69.getClass();
        boolean boolean77 = constableBloomFilter62.contains((java.lang.constant.Constable) wildcardClass76);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass76);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 100L);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass24 = constableBloomFilter17.getClass();
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter28.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean37 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter40.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean44 = constableBloomFilter40.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter40.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean48 = constableBloomFilter40.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass52 = constantDescBloomFilter51.getClass();
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass52);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter57.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass66 = constableBloomFilter65.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass66);
        boolean boolean68 = constableBloomFilter57.contains((java.lang.constant.Constable) wildcardClass66);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter57.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass69);
        boolean boolean71 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter9.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter9.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter20.insert((java.lang.constant.Constable) 10);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter20.contains(constable25);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter20.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass27);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass27);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter2.contains(constable30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter37.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter37.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter57.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass60);
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter37.getClass();
        boolean boolean64 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass63);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter68.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass77 = constableBloomFilter76.getClass();
        constableBloomFilter73.insert((java.lang.constant.Constable) wildcardClass77);
        boolean boolean79 = constableBloomFilter68.contains((java.lang.constant.Constable) wildcardClass77);
        boolean boolean80 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean79);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>(1, (int) (byte) 10);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 1, 1);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter12.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean20 = constableBloomFilter12.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter12.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter25.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean29 = constableBloomFilter25.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter25.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean33 = constableBloomFilter25.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter25.getClass();
        boolean boolean35 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass34);
        boolean boolean36 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean35);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) 10);
        constableBloomFilter5.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable13 = null;
        boolean boolean14 = constableBloomFilter12.contains(constable13);
        constableBloomFilter12.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) 'a');
        boolean boolean20 = constableBloomFilter12.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter12.getClass();
        boolean boolean22 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        boolean boolean34 = constableBloomFilter30.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter30.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter25.getClass();
        boolean boolean38 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean38);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 100.0d);
        java.lang.Class<?> wildcardClass9 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass9 = constableBloomFilter8.getClass();
        boolean boolean10 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass9);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ', 100);
        java.lang.Class<?> wildcardClass14 = wildcardClassOfFieldBloomFilter13.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass19 = serializableBloomFilter18.getClass();
        boolean boolean20 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass19);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass19);
        java.lang.Class<?> wildcardClass22 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(0, (int) (short) 0);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter5.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1.0f));
        java.lang.Class<?> wildcardClass16 = constableBloomFilter5.getClass();
        boolean boolean17 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter20.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter20.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.constant.Constable constable30 = null;
        constableBloomFilter29.insert(constable30);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter29.getClass();
        boolean boolean33 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>(0, 0);
        java.lang.Class<?> wildcardClass40 = constantDescBloomFilter39.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass40);
        boolean boolean42 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass40);
        boolean boolean43 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) 10);
        constableBloomFilter5.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable13 = null;
        boolean boolean14 = constableBloomFilter12.contains(constable13);
        constableBloomFilter12.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) 'a');
        boolean boolean20 = constableBloomFilter12.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter12.getClass();
        boolean boolean22 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        boolean boolean34 = constableBloomFilter30.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter30.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter25.getClass();
        boolean boolean38 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass37);
        boolean boolean39 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean38);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(1, 0);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>(100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter37.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean41 = constableBloomFilter37.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter37.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean45 = constableBloomFilter37.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass49 = constantDescBloomFilter48.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass49);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass49);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable41 = null;
        boolean boolean42 = constableBloomFilter40.contains(constable41);
        constableBloomFilter40.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter40.getClass();
        boolean boolean46 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter13.getClass();
        boolean boolean48 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter54.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter54.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable59 = null;
        constableBloomFilter54.insert(constable59);
        boolean boolean62 = constableBloomFilter54.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass66 = wildcardClassOfFieldBloomFilter65.getClass();
        boolean boolean67 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass66);
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass66);
        boolean boolean69 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass66);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) ' ');
        java.lang.Class<?> wildcardClass73 = constableBloomFilter72.getClass();
        boolean boolean74 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', (int) (short) 10);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass9 = constableBloomFilterBloomFilter8.getClass();
        boolean boolean10 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter5.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass16 = constableBloomFilter15.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass16);
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter21.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter21.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean29 = constableBloomFilter21.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter32.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean36 = constableBloomFilter32.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter32.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean40 = constableBloomFilter32.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        boolean boolean54 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        constableBloomFilter57.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass64 = constableBloomFilter57.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass64);
        boolean boolean66 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass64);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter32.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass67);
        boolean boolean69 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass67);
        java.lang.Class<?> wildcardClass70 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass6 = charSequenceBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        boolean boolean19 = constableBloomFilter15.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter15.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass31);
        boolean boolean33 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter39.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter39.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean47 = constableBloomFilter39.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter50.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        constableBloomFilter58.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean64 = constableBloomFilter58.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass65 = constableBloomFilter58.getClass();
        boolean boolean66 = constableBloomFilter55.contains((java.lang.constant.Constable) wildcardClass65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable70 = null;
        boolean boolean71 = constableBloomFilter69.contains(constable70);
        constableBloomFilter69.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean75 = constableBloomFilter69.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass76 = constableBloomFilter69.getClass();
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass76);
        boolean boolean79 = constableBloomFilter55.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter55.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass80);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable85 = null;
        boolean boolean86 = constableBloomFilter84.contains(constable85);
        constableBloomFilter84.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter84.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass89);
        boolean boolean91 = constableBloomFilter39.contains((java.lang.constant.Constable) wildcardClass89);
        boolean boolean92 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass89);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter36.getClass();
        boolean boolean94 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (short) 0, 100);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (short) 1);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement> annotatedElementBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.AnnotatedElement>((int) '4', (int) 'a');
        java.lang.Class<?> wildcardClass3 = annotatedElementBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass8 = genericDeclarationBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) 100L);
        boolean boolean18 = constableBloomFilter12.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        boolean boolean32 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean44 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass42);
        boolean boolean45 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) ' ', (int) '4');
        java.lang.Class<?> wildcardClass49 = constantDescBloomFilter48.getClass();
        boolean boolean50 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable10 = null;
        boolean boolean11 = constableBloomFilter9.contains(constable10);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) 100L);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        boolean boolean38 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean50 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass48);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter18.getClass();
        boolean boolean52 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass51);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter2.contains(constable53);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '4');
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable14 = null;
        boolean boolean15 = constableBloomFilter13.contains(constable14);
        constableBloomFilter13.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass20 = constableBloomFilter13.getClass();
        boolean boolean21 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass31);
        boolean boolean34 = constableBloomFilter10.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass38 = wildcardClassOfFieldBloomFilter37.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass38);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        boolean boolean54 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = constableBloomFilter43.getClass();
        boolean boolean56 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass55);
        boolean boolean57 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass55);
        java.lang.constant.Constable constable58 = null;
        constableBloomFilter2.insert(constable58);
        java.lang.constant.Constable constable60 = null;
        boolean boolean61 = constableBloomFilter2.contains(constable60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass17 = wildcardClassOfFieldBloomFilter16.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass20);
        boolean boolean23 = constableBloomFilter13.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        constableBloomFilter26.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter26.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        boolean boolean46 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        constableBloomFilter49.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean55 = constableBloomFilter49.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass56 = constableBloomFilter49.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean59 = constableBloomFilter35.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass63 = wildcardClassOfFieldBloomFilter62.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass63);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass63);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass73 = constableBloomFilter72.getClass();
        constableBloomFilter69.insert((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter81 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass85 = wildcardClassOfFieldBloomFilter84.getClass();
        constableBloomFilter81.insert((java.lang.constant.Constable) wildcardClass85);
        boolean boolean87 = constableBloomFilter78.contains((java.lang.constant.Constable) wildcardClass85);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter78.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass88);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter92.getClass();
        boolean boolean94 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 1);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>(0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass3 = strComparableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter18.getClass();
        boolean boolean20 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter15.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter25.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter25.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.Class<?> wildcardClass35 = constableBloomFilter34.getClass();
        boolean boolean36 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass43 = wildcardClassOfFieldBloomFilter42.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass46);
        boolean boolean49 = constableBloomFilter39.contains((java.lang.constant.Constable) '#');
        constableBloomFilter39.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter39.getClass();
        boolean boolean53 = constableBloomFilter25.contains((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter56.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable62 = null;
        constableBloomFilter61.insert(constable62);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter61.getClass();
        boolean boolean65 = constableBloomFilter56.contains((java.lang.constant.Constable) wildcardClass64);
        constableBloomFilter25.insert((java.lang.constant.Constable) boolean65);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter25.getClass();
        boolean boolean68 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass6 = constableBloomFilterBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) (-1.0f));
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0d);
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass13 = wildcardClassOfFieldBloomFilter12.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass16);
        boolean boolean19 = constableBloomFilter9.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        constableBloomFilter22.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean28 = constableBloomFilter22.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        boolean boolean42 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean54 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter57.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter57.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter57.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass64 = constableBloomFilter57.getClass();
        boolean boolean65 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass64);
        boolean boolean66 = constableBloomFilter9.contains((java.lang.constant.Constable) boolean65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable70 = null;
        constableBloomFilter69.insert(constable70);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter69.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass72);
        boolean boolean74 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass72);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable78 = null;
        boolean boolean79 = constableBloomFilter77.contains(constable78);
        constableBloomFilter77.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean83 = constableBloomFilter77.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter77.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter77.insert((java.lang.constant.Constable) (-1));
        java.lang.constant.Constable constable88 = null;
        boolean boolean89 = constableBloomFilter77.contains(constable88);
        java.lang.Class<?> wildcardClass90 = constableBloomFilter77.getClass();
        boolean boolean91 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 10, 0);
        java.lang.Class<?> wildcardClass3 = typeBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>(10, 10);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean47 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter50.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter50.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        boolean boolean58 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass57);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter65 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass66 = wildcardClassOfFieldBloomFilter65.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass69);
        boolean boolean72 = constableBloomFilter62.contains((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable76 = null;
        boolean boolean77 = constableBloomFilter75.contains(constable76);
        constableBloomFilter75.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean81 = constableBloomFilter75.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass82 = constableBloomFilter75.getClass();
        constableBloomFilter62.insert((java.lang.constant.Constable) wildcardClass82);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass82);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass82);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter88 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter91 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ', 100);
        java.lang.Class<?> wildcardClass92 = wildcardClassOfFieldBloomFilter91.getClass();
        boolean boolean93 = constableBloomFilter88.contains((java.lang.constant.Constable) wildcardClass92);
        boolean boolean94 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean93);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable10 = null;
        boolean boolean11 = constableBloomFilter9.contains(constable10);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter23.contains(constable24);
        java.lang.Class<?> wildcardClass26 = constableBloomFilter23.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass35 = wildcardClassOfFieldBloomFilter34.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass38);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) (byte) -1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable10 = null;
        boolean boolean11 = constableBloomFilter9.contains(constable10);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) 100L);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        boolean boolean38 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean50 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass48);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter18.getClass();
        boolean boolean52 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>(0, 10);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass8 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter12.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter12.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable17 = null;
        constableBloomFilter12.insert(constable17);
        boolean boolean20 = constableBloomFilter12.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass27 = wildcardClassOfFieldBloomFilter26.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass30);
        boolean boolean33 = constableBloomFilter23.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        constableBloomFilter36.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter36.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        constableBloomFilter48.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean54 = constableBloomFilter48.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass55 = constableBloomFilter48.getClass();
        boolean boolean56 = constableBloomFilter45.contains((java.lang.constant.Constable) wildcardClass55);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable60 = null;
        boolean boolean61 = constableBloomFilter59.contains(constable60);
        constableBloomFilter59.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean65 = constableBloomFilter59.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass66 = constableBloomFilter59.getClass();
        constableBloomFilter45.insert((java.lang.constant.Constable) wildcardClass66);
        boolean boolean69 = constableBloomFilter45.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass73 = wildcardClassOfFieldBloomFilter72.getClass();
        constableBloomFilter45.insert((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass83 = constableBloomFilter82.getClass();
        constableBloomFilter79.insert((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass83);
        java.lang.Class<?> wildcardClass86 = constableBloomFilter12.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>((int) '4', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((-1), (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 100.0f);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 1);
        boolean boolean14 = constableBloomFilter2.contains((java.lang.constant.Constable) '4');
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter19.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean23 = constableBloomFilter19.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter26.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass35 = wildcardClassOfFieldBloomFilter34.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass35);
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter40.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass41);
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter46.getClass();
        boolean boolean52 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        boolean boolean63 = constableBloomFilter55.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter55.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, 0);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter68.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass69);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass77 = constableBloomFilterBloomFilter76.getClass();
        boolean boolean78 = constableBloomFilter73.contains((java.lang.constant.Constable) wildcardClass77);
        boolean boolean80 = constableBloomFilter73.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass84 = constableBloomFilter83.getClass();
        constableBloomFilter73.insert((java.lang.constant.Constable) wildcardClass84);
        boolean boolean86 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass84);
        java.lang.Class<?> wildcardClass87 = constableBloomFilter19.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        constableBloomFilter7.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) '#');
        constableBloomFilter16.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter16.getClass();
        boolean boolean30 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass35 = wildcardClassOfFieldBloomFilter34.getClass();
        boolean boolean36 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((int) (byte) 100, 10);
        java.lang.Class<?> wildcardClass40 = typeBloomFilter39.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass48 = constableBloomFilterBloomFilter47.getClass();
        boolean boolean49 = constableBloomFilter44.contains((java.lang.constant.Constable) wildcardClass48);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter44.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean59 = constableBloomFilter57.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable63 = null;
        boolean boolean64 = constableBloomFilter62.contains(constable63);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter62.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass65);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean20 = constableBloomFilter18.contains((java.lang.constant.Constable) 0L);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter18.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass25);
        boolean boolean28 = constableBloomFilter2.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean35 = constableBloomFilter31.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter38.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass47 = wildcardClassOfFieldBloomFilter46.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass47);
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter52.getClass();
        constableBloomFilter38.insert((java.lang.constant.Constable) wildcardClass53);
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable59 = null;
        boolean boolean60 = constableBloomFilter58.contains(constable59);
        constableBloomFilter58.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter58.getClass();
        boolean boolean64 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        boolean boolean69 = constableBloomFilter67.contains(constable68);
        constableBloomFilter67.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean73 = constableBloomFilter67.contains((java.lang.constant.Constable) 'a');
        boolean boolean75 = constableBloomFilter67.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass76 = constableBloomFilter67.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass76);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter80 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, 0);
        java.lang.Class<?> wildcardClass81 = constableBloomFilter80.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass81);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter85 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter88 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass89 = constableBloomFilterBloomFilter88.getClass();
        boolean boolean90 = constableBloomFilter85.contains((java.lang.constant.Constable) wildcardClass89);
        boolean boolean92 = constableBloomFilter85.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter95 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass96 = constableBloomFilter95.getClass();
        constableBloomFilter85.insert((java.lang.constant.Constable) wildcardClass96);
        boolean boolean98 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass96);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass17 = wildcardClassOfFieldBloomFilter16.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass20);
        boolean boolean23 = constableBloomFilter13.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        constableBloomFilter26.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean32 = constableBloomFilter26.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        boolean boolean46 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        constableBloomFilter49.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean55 = constableBloomFilter49.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass56 = constableBloomFilter49.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean58 = constableBloomFilter26.contains((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter61.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter61.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter61.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass68 = constableBloomFilter61.getClass();
        boolean boolean69 = constableBloomFilter26.contains((java.lang.constant.Constable) wildcardClass68);
        boolean boolean70 = constableBloomFilter13.contains((java.lang.constant.Constable) boolean69);
        boolean boolean72 = constableBloomFilter13.contains((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter75 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass79 = wildcardClassOfFieldBloomFilter78.getClass();
        constableBloomFilter75.insert((java.lang.constant.Constable) wildcardClass79);
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        constableBloomFilter75.insert((java.lang.constant.Constable) wildcardClass82);
        boolean boolean85 = constableBloomFilter75.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter88 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable89 = null;
        boolean boolean90 = constableBloomFilter88.contains(constable89);
        constableBloomFilter88.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass93 = constableBloomFilter88.getClass();
        constableBloomFilter75.insert((java.lang.constant.Constable) wildcardClass93);
        boolean boolean95 = constableBloomFilter13.contains((java.lang.constant.Constable) wildcardClass93);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter13.getClass();
        boolean boolean97 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 10);
        java.lang.constant.Constable constable14 = null;
        boolean boolean15 = constableBloomFilter13.contains(constable14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        boolean boolean29 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter32.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean42 = constableBloomFilter18.contains((java.lang.constant.Constable) 1L);
        boolean boolean44 = constableBloomFilter18.contains((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter47.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter47.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean53 = constableBloomFilter47.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean55 = constableBloomFilter47.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter47.getClass();
        boolean boolean57 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass56);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 0);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter61.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter66.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean70 = constableBloomFilter66.contains((java.lang.constant.Constable) 100L);
        boolean boolean72 = constableBloomFilter66.contains((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter66.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 100);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) '#');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter20.insert((java.lang.constant.Constable) 10);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter27.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass36 = wildcardClassOfFieldBloomFilter35.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean39 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass36);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter43.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean47 = constableBloomFilter43.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter43.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean51 = constableBloomFilter43.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter43.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 0);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter56.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass59);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter23.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter29.insert((java.lang.constant.Constable) 10);
        boolean boolean33 = constableBloomFilter29.contains((java.lang.constant.Constable) true);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        boolean boolean58 = constableBloomFilter47.contains((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable62 = null;
        boolean boolean63 = constableBloomFilter61.contains(constable62);
        constableBloomFilter61.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean67 = constableBloomFilter61.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass68 = constableBloomFilter61.getClass();
        constableBloomFilter47.insert((java.lang.constant.Constable) wildcardClass68);
        boolean boolean70 = constableBloomFilter38.contains((java.lang.constant.Constable) wildcardClass68);
        boolean boolean71 = constableBloomFilter29.contains((java.lang.constant.Constable) boolean70);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter74 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean76 = constableBloomFilter74.contains((java.lang.constant.Constable) (byte) 100);
        java.lang.Class<?> wildcardClass77 = constableBloomFilter74.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass77);
        boolean boolean79 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass77);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass83 = serializableBloomFilter82.getClass();
        boolean boolean84 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass83);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, 0);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter87.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter26.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        constableBloomFilter33.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable41 = null;
        boolean boolean42 = constableBloomFilter40.contains(constable41);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter40.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean45 = constableBloomFilter19.contains((java.lang.constant.Constable) wildcardClass43);
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter49.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass50);
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass50);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) '4');
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter16.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter16.insert((java.lang.constant.Constable) (-1L));
        boolean boolean24 = constableBloomFilter16.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter16.getClass();
        boolean boolean28 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass27);
        boolean boolean30 = constableBloomFilter5.contains((java.lang.constant.Constable) 0.0f);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter5.getClass();
        // The following exception was thrown during execution in test generation
        try {
            constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass31);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        java.lang.Class<?> wildcardClass13 = constableBloomFilter10.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass24 = wildcardClassOfFieldBloomFilter23.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass24);
        boolean boolean26 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass33 = wildcardClassOfFieldBloomFilter32.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean39 = constableBloomFilter29.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter29.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter17.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean48 = constableBloomFilter46.contains((java.lang.constant.Constable) 0L);
        boolean boolean50 = constableBloomFilter46.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass56 = typeDescriptorBloomFilter55.getClass();
        boolean boolean57 = constableBloomFilter46.contains((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 100);
        java.lang.Class<?> wildcardClass61 = constableBloomFilterBloomFilter60.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter46.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass63);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter7.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean11 = constableBloomFilter7.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter7.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean15 = constableBloomFilter7.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        boolean boolean29 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter32.getClass();
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass39);
        boolean boolean42 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean41);
        java.lang.constant.Constable constable43 = null;
        constableBloomFilter2.insert(constable43);
        java.lang.constant.Constable constable45 = null;
        boolean boolean46 = constableBloomFilter2.contains(constable45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean54 = constableBloomFilter52.contains((java.lang.constant.Constable) ' ');
        boolean boolean56 = constableBloomFilter52.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter52.getClass();
        boolean boolean58 = constableBloomFilter49.contains((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 1);
        java.lang.constant.Constable constable62 = null;
        constableBloomFilter61.insert(constable62);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter61.getClass();
        boolean boolean65 = constableBloomFilter49.contains((java.lang.constant.Constable) wildcardClass64);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter72.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean76 = constableBloomFilter72.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter79.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter87 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass88 = wildcardClassOfFieldBloomFilter87.getClass();
        constableBloomFilter84.insert((java.lang.constant.Constable) wildcardClass88);
        constableBloomFilter79.insert((java.lang.constant.Constable) wildcardClass88);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter93 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter93.getClass();
        constableBloomFilter79.insert((java.lang.constant.Constable) wildcardClass94);
        constableBloomFilter72.insert((java.lang.constant.Constable) wildcardClass94);
        boolean boolean97 = constableBloomFilter69.contains((java.lang.constant.Constable) wildcardClass94);
        java.lang.Class<?> wildcardClass98 = constableBloomFilter69.getClass();
        boolean boolean99 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass98);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((-1), (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) ' ');
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (short) 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter5.getClass();
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass22 = constableBloomFilter21.getClass();
        boolean boolean23 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        boolean boolean30 = constableBloomFilter26.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean38 = constableBloomFilter36.contains((java.lang.constant.Constable) ' ');
        boolean boolean40 = constableBloomFilter36.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter36.getClass();
        boolean boolean42 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        boolean boolean53 = constableBloomFilter45.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter45.getClass();
        boolean boolean55 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass54);
        boolean boolean56 = constableBloomFilter26.contains((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable60 = null;
        constableBloomFilter59.insert(constable60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable65 = null;
        boolean boolean66 = constableBloomFilter64.contains(constable65);
        constableBloomFilter64.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean70 = constableBloomFilter64.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter73 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass77 = wildcardClassOfFieldBloomFilter76.getClass();
        constableBloomFilter73.insert((java.lang.constant.Constable) wildcardClass77);
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        constableBloomFilter73.insert((java.lang.constant.Constable) wildcardClass80);
        boolean boolean83 = constableBloomFilter73.contains((java.lang.constant.Constable) '#');
        constableBloomFilter73.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass86 = constableBloomFilter73.getClass();
        boolean boolean87 = constableBloomFilter64.contains((java.lang.constant.Constable) wildcardClass86);
        boolean boolean88 = constableBloomFilter59.contains((java.lang.constant.Constable) boolean87);
        java.lang.Class<?> wildcardClass89 = constableBloomFilter59.getClass();
        boolean boolean90 = constableBloomFilter26.contains((java.lang.constant.Constable) wildcardClass89);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter93 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter93.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass94);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter26.getClass();
        boolean boolean97 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) (byte) 10, 0);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean34 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass50 = wildcardClassOfFieldBloomFilter49.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        constableBloomFilter46.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean56 = constableBloomFilter46.contains((java.lang.constant.Constable) '#');
        constableBloomFilter46.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass59 = constableBloomFilter46.getClass();
        boolean boolean60 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass59);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter64.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter64.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter64.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass71 = constableBloomFilter64.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass71);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', (int) '#');
        java.lang.Class<?> wildcardClass78 = constableBloomFilter77.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter13.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter13.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean21 = constableBloomFilter13.contains((java.lang.constant.Constable) 0L);
        boolean boolean23 = constableBloomFilter13.contains((java.lang.constant.Constable) (short) 100);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter13.getClass();
        boolean boolean25 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>((-1), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 10);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass5 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter11.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable16 = null;
        constableBloomFilter11.insert(constable16);
        boolean boolean19 = constableBloomFilter11.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = constableBloomFilterBloomFilter22.getClass();
        boolean boolean24 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean29 = constableBloomFilter27.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter32.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean36 = constableBloomFilter32.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter32.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean40 = constableBloomFilter32.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass44 = constantDescBloomFilter43.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass44);
        boolean boolean47 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass44);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable52 = null;
        constableBloomFilter51.insert(constable52);
        constableBloomFilter51.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean60 = constableBloomFilter58.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass61 = constableBloomFilter58.getClass();
        constableBloomFilter51.insert((java.lang.constant.Constable) wildcardClass61);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>(1, (int) ' ');
        java.lang.Class<?> wildcardClass10 = serializableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean16 = constableBloomFilter14.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        boolean boolean21 = constableBloomFilter19.contains(constable20);
        constableBloomFilter19.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter19.getClass();
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass41 = constableBloomFilterBloomFilter40.getClass();
        boolean boolean42 = constableBloomFilter37.contains((java.lang.constant.Constable) wildcardClass41);
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass41);
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass41);
        boolean boolean45 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter7.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean11 = constableBloomFilter7.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter7.insert((java.lang.constant.Constable) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter23.contains(constable24);
        java.lang.Class<?> wildcardClass26 = constableBloomFilter23.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter37.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass40);
        boolean boolean42 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass40);
        boolean boolean43 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean43);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter14.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass25 = wildcardClassOfFieldBloomFilter24.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass25);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter31.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable36 = null;
        constableBloomFilter31.insert(constable36);
        boolean boolean39 = constableBloomFilter31.contains((java.lang.constant.Constable) 0);
        constableBloomFilter31.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass45 = wildcardClassOfFieldBloomFilter44.getClass();
        boolean boolean46 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass45);
        boolean boolean47 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass45);
        boolean boolean48 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean47);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 100, (int) 'a');
        java.lang.Class<?> wildcardClass3 = charSequenceBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        boolean boolean24 = constableBloomFilter22.contains(constable23);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter22.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter36.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass39);
        boolean boolean42 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable49 = null;
        boolean boolean50 = constableBloomFilter48.contains(constable49);
        boolean boolean52 = constableBloomFilter48.contains((java.lang.constant.Constable) 1L);
        boolean boolean54 = constableBloomFilter48.contains((java.lang.constant.Constable) 100.0d);
        constableBloomFilter48.insert((java.lang.constant.Constable) (short) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass60 = wildcardClassOfFieldBloomFilter59.getClass();
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass60);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 10);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter64.getClass();
        boolean boolean66 = constableBloomFilter48.contains((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter45.insert((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>(10, 1);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type> typeBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.Type>(1, (int) (byte) 100);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldBloomFilter8.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) '#');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter18.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass25);
        boolean boolean27 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter30.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter30.insert((java.lang.constant.Constable) ' ');
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass43 = wildcardClassOfFieldBloomFilter42.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass46);
        boolean boolean49 = constableBloomFilter39.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable53 = null;
        boolean boolean54 = constableBloomFilter52.contains(constable53);
        constableBloomFilter52.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass57 = constableBloomFilter52.getClass();
        constableBloomFilter39.insert((java.lang.constant.Constable) wildcardClass57);
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass57);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter62.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        constableBloomFilter67.insert(constable68);
        java.lang.Class<?> wildcardClass70 = constableBloomFilter67.getClass();
        boolean boolean71 = constableBloomFilter62.contains((java.lang.constant.Constable) wildcardClass70);
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass70);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter30.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass73);
        java.lang.Class<?> wildcardClass75 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass17 = constableBloomFilter10.getClass();
        boolean boolean18 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean30 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass28);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean23 = constableBloomFilter21.contains((java.lang.constant.Constable) 0L);
        boolean boolean25 = constableBloomFilter21.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean27 = constableBloomFilter21.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass28 = constableBloomFilter21.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass28);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>(0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass3 = wildcardClassBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass13 = wildcardClassOfFieldBloomFilter12.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (short) 0, 10);
        java.lang.Class<?> wildcardClass23 = charSequenceBloomFilter22.getClass();
        boolean boolean24 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean29 = constableBloomFilter27.contains((java.lang.constant.Constable) 0L);
        boolean boolean31 = constableBloomFilter27.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter34.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean38 = constableBloomFilter34.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter34.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean42 = constableBloomFilter34.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter34.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter27.getClass();
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) (byte) 100, (int) (byte) 100);
        java.lang.Class<?> wildcardClass50 = objBloomFilter49.getClass();
        boolean boolean51 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass50);
        java.lang.Class<?> wildcardClass52 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) 10);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) true);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable27 = null;
        boolean boolean28 = constableBloomFilter26.contains(constable27);
        constableBloomFilter26.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean32 = constableBloomFilter26.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass33 = constableBloomFilter26.getClass();
        boolean boolean34 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass33);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        boolean boolean39 = constableBloomFilter37.contains(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean43 = constableBloomFilter37.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass44 = constableBloomFilter37.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass44);
        boolean boolean46 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass44);
        boolean boolean47 = constableBloomFilter5.contains((java.lang.constant.Constable) boolean46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        boolean boolean59 = constableBloomFilter55.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter55.getClass();
        constableBloomFilter50.insert((java.lang.constant.Constable) wildcardClass60);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean69 = constableBloomFilter67.contains((java.lang.constant.Constable) 0L);
        boolean boolean71 = constableBloomFilter67.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter67.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter67.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass74);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter78 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) ' ', (int) ' ');
        java.lang.Class<?> wildcardClass79 = serializableBloomFilter78.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable10 = null;
        boolean boolean11 = constableBloomFilter9.contains(constable10);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) 100L);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        boolean boolean38 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean50 = constableBloomFilter18.contains((java.lang.constant.Constable) wildcardClass48);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter18.getClass();
        boolean boolean52 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter58.getClass();
        constableBloomFilter55.insert((java.lang.constant.Constable) wildcardClass59);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) 'a', 100);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter9.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter9.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter9.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter20.insert((java.lang.constant.Constable) 10);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter20.contains(constable25);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter20.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass27);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass27);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter32.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter32.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter32.insert((java.lang.constant.Constable) (-1L));
        boolean boolean40 = constableBloomFilter32.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean45 = constableBloomFilter43.contains((java.lang.constant.Constable) 0L);
        boolean boolean47 = constableBloomFilter43.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter43.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter43.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass58 = wildcardClassOfFieldBloomFilter57.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass58);
        constableBloomFilter54.insert((java.lang.constant.Constable) (byte) -1);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter54.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass70 = constantDescBloomFilter69.getClass();
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass70);
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass70);
        boolean boolean73 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) '#');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter17.insert((java.lang.constant.Constable) 10);
        boolean boolean21 = constableBloomFilter17.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass33 = wildcardClassOfFieldBloomFilter32.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass33);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean39 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 10);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter2.contains(constable40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter47.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass48);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean54 = constableBloomFilter52.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter57.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter52.getClass();
        constableBloomFilter44.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass62);
        java.lang.constant.Constable constable65 = null;
        boolean boolean66 = constableBloomFilter2.contains(constable65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter72 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter72.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter72.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter79.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass82 = constableBloomFilter79.getClass();
        boolean boolean83 = constableBloomFilter72.contains((java.lang.constant.Constable) wildcardClass82);
        java.lang.constant.Constable constable84 = null;
        boolean boolean85 = constableBloomFilter72.contains(constable84);
        java.lang.Class<?> wildcardClass86 = constableBloomFilter72.getClass();
        constableBloomFilter69.insert((java.lang.constant.Constable) wildcardClass86);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter90 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass91 = constableBloomFilter90.getClass();
        boolean boolean92 = constableBloomFilter69.contains((java.lang.constant.Constable) wildcardClass91);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter95 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.Class<?> wildcardClass96 = constableBloomFilter95.getClass();
        constableBloomFilter69.insert((java.lang.constant.Constable) wildcardClass96);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (byte) 10, (int) (byte) 0);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(1, (int) (short) 0);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        constableBloomFilter10.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter19.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter24.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean28 = constableBloomFilter24.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter24.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean32 = constableBloomFilter24.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        boolean boolean46 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        constableBloomFilter49.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean55 = constableBloomFilter49.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass56 = constableBloomFilter49.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean58 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass56);
        boolean boolean59 = constableBloomFilter19.contains((java.lang.constant.Constable) boolean58);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter19.getClass();
        boolean boolean61 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter10.getClass();
        boolean boolean63 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) ' ', (int) '#');
        java.lang.Class<?> wildcardClass3 = constantDescBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) (short) -1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass9);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        boolean boolean47 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter50.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter50.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter50.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        boolean boolean58 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass57);
        boolean boolean59 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean58);
        boolean boolean61 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter64.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean68 = constableBloomFilter64.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter64.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean72 = constableBloomFilter64.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter64.getClass();
        boolean boolean74 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass73);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter77.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter77.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter77.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter77.insert((java.lang.constant.Constable) 'a');
        boolean boolean87 = constableBloomFilter77.contains((java.lang.constant.Constable) 10.0f);
        boolean boolean89 = constableBloomFilter77.contains((java.lang.constant.Constable) 100.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable93 = null;
        constableBloomFilter92.insert(constable93);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter92.getClass();
        constableBloomFilter77.insert((java.lang.constant.Constable) wildcardClass95);
        boolean boolean97 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass95);
        java.lang.Class<?> wildcardClass98 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter10.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter10.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable15 = null;
        constableBloomFilter10.insert(constable15);
        boolean boolean18 = constableBloomFilter10.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass22 = wildcardClassOfFieldBloomFilter21.getClass();
        boolean boolean23 = constableBloomFilter10.contains((java.lang.constant.Constable) wildcardClass22);
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass22);
        boolean boolean25 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean24 = constableBloomFilter22.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        boolean boolean38 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass37);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable42 = null;
        boolean boolean43 = constableBloomFilter41.contains(constable42);
        constableBloomFilter41.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean47 = constableBloomFilter41.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass48 = constableBloomFilter41.getClass();
        constableBloomFilter27.insert((java.lang.constant.Constable) wildcardClass48);
        boolean boolean50 = constableBloomFilter22.contains((java.lang.constant.Constable) wildcardClass48);
        constableBloomFilter14.insert((java.lang.constant.Constable) boolean50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable58 = null;
        boolean boolean59 = constableBloomFilter57.contains(constable58);
        constableBloomFilter57.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass64 = constableBloomFilter57.getClass();
        boolean boolean65 = constableBloomFilter54.contains((java.lang.constant.Constable) wildcardClass64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable69 = null;
        boolean boolean70 = constableBloomFilter68.contains(constable69);
        constableBloomFilter68.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean74 = constableBloomFilter68.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass75 = constableBloomFilter68.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass75);
        boolean boolean78 = constableBloomFilter54.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter54.getClass();
        boolean boolean80 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass79);
        boolean boolean81 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass79);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean86 = constableBloomFilter84.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter89 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable90 = null;
        boolean boolean91 = constableBloomFilter89.contains(constable90);
        constableBloomFilter89.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass94 = constableBloomFilter89.getClass();
        boolean boolean95 = constableBloomFilter84.contains((java.lang.constant.Constable) wildcardClass94);
        boolean boolean96 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean95);
        java.lang.Class<?> wildcardClass97 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) 'a');
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        boolean boolean12 = constableBloomFilter10.contains(constable11);
        boolean boolean14 = constableBloomFilter10.contains((java.lang.constant.Constable) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter17.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable23 = null;
        constableBloomFilter22.insert(constable23);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter22.getClass();
        boolean boolean26 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean31 = constableBloomFilter29.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass38 = constableBloomFilterBloomFilter37.getClass();
        boolean boolean39 = constableBloomFilter34.contains((java.lang.constant.Constable) wildcardClass38);
        boolean boolean40 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass38);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter43.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable52 = null;
        boolean boolean53 = constableBloomFilter51.contains(constable52);
        constableBloomFilter51.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean57 = constableBloomFilter51.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass58 = constableBloomFilter51.getClass();
        boolean boolean59 = constableBloomFilter48.contains((java.lang.constant.Constable) wildcardClass58);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter62 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable63 = null;
        boolean boolean64 = constableBloomFilter62.contains(constable63);
        constableBloomFilter62.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean68 = constableBloomFilter62.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass69 = constableBloomFilter62.getClass();
        constableBloomFilter48.insert((java.lang.constant.Constable) wildcardClass69);
        boolean boolean72 = constableBloomFilter48.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter48.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass73);
        boolean boolean75 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter17.insert((java.lang.constant.Constable) boolean75);
        java.lang.Class<?> wildcardClass77 = constableBloomFilter17.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass77);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass77);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        boolean boolean11 = constableBloomFilter7.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass28 = genericDeclarationBloomFilter27.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter2.insert((java.lang.constant.Constable) 10);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable12 = null;
        boolean boolean13 = constableBloomFilter11.contains(constable12);
        constableBloomFilter11.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean17 = constableBloomFilter11.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter23.contains(constable24);
        constableBloomFilter23.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean29 = constableBloomFilter23.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass30 = constableBloomFilter23.getClass();
        boolean boolean31 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass41);
        boolean boolean43 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass41);
        boolean boolean44 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean43);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable50 = null;
        boolean boolean51 = constableBloomFilter49.contains(constable50);
        constableBloomFilter49.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass54 = constableBloomFilter49.getClass();
        boolean boolean55 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass54);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter58.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter58.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter58.insert((java.lang.constant.Constable) (-1L));
        boolean boolean66 = constableBloomFilter58.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter58.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter58.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        constableBloomFilter7.insert(constable8);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter7.getClass();
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass36 = constableBloomFilter29.getClass();
        boolean boolean37 = constableBloomFilter26.contains((java.lang.constant.Constable) wildcardClass36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable41 = null;
        boolean boolean42 = constableBloomFilter40.contains(constable41);
        constableBloomFilter40.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean46 = constableBloomFilter40.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass47 = constableBloomFilter40.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass47);
        boolean boolean49 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass47);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter52.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter52.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter52.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass59 = constableBloomFilter52.getClass();
        boolean boolean60 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass59);
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass59);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter14.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable70 = null;
        constableBloomFilter69.insert(constable70);
        constableBloomFilter69.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter76 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean78 = constableBloomFilter76.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass79 = constableBloomFilter76.getClass();
        constableBloomFilter69.insert((java.lang.constant.Constable) wildcardClass79);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter83 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter83.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean87 = constableBloomFilter83.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter83.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean91 = constableBloomFilter83.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter83.getClass();
        boolean boolean93 = constableBloomFilter69.contains((java.lang.constant.Constable) wildcardClass92);
        boolean boolean94 = constableBloomFilter66.contains((java.lang.constant.Constable) wildcardClass92);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean94);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (short) 10, (int) '4');
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass11 = constableBloomFilterBloomFilter10.getClass();
        boolean boolean12 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass11);
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass11);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter16.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass31 = constableBloomFilter24.getClass();
        boolean boolean32 = constableBloomFilter21.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean45 = constableBloomFilter21.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter21.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass46);
        boolean boolean48 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter51.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter51.insert((java.lang.constant.Constable) 1.0f);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter51.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass56);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.Class<?> wildcardClass61 = constableBloomFilter60.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean13 = constableBloomFilter11.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        java.lang.Class<?> wildcardClass19 = constableBloomFilter16.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        boolean boolean32 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass39 = wildcardClassOfFieldBloomFilter38.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass42);
        boolean boolean45 = constableBloomFilter35.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter35.getClass();
        constableBloomFilter23.insert((java.lang.constant.Constable) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter23.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass48);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass48);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((-1), (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable11 = null;
        constableBloomFilter10.insert(constable11);
        java.lang.Class<?> wildcardClass13 = constableBloomFilter10.getClass();
        boolean boolean14 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass13);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean14);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>((int) (short) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) '#');
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 10);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass11 = wildcardClassOfFieldBloomFilter10.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass14);
        boolean boolean17 = constableBloomFilter7.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable21 = null;
        boolean boolean22 = constableBloomFilter20.contains(constable21);
        constableBloomFilter20.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean26 = constableBloomFilter20.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean38 = constableBloomFilter32.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter32.getClass();
        boolean boolean40 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean49 = constableBloomFilter43.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass50 = constableBloomFilter43.getClass();
        constableBloomFilter29.insert((java.lang.constant.Constable) wildcardClass50);
        boolean boolean52 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter55.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter55.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter55.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass62 = constableBloomFilter55.getClass();
        boolean boolean63 = constableBloomFilter20.contains((java.lang.constant.Constable) wildcardClass62);
        boolean boolean64 = constableBloomFilter7.contains((java.lang.constant.Constable) boolean63);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable68 = null;
        constableBloomFilter67.insert(constable68);
        java.lang.Class<?> wildcardClass70 = constableBloomFilter67.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass70);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 10, 0);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 10);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        constableBloomFilter7.insert(constable8);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter7.getClass();
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter14.insert((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        constableBloomFilter25.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean35 = constableBloomFilter25.contains((java.lang.constant.Constable) '#');
        constableBloomFilter25.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass38 = constableBloomFilter25.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter15.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass24 = wildcardClassOfFieldBloomFilter23.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass24);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter12.getClass();
        boolean boolean29 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter10.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter10.insert((java.lang.constant.Constable) ' ');
        boolean boolean16 = constableBloomFilter10.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter22 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass23 = wildcardClassOfFieldBloomFilter22.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass26);
        boolean boolean29 = constableBloomFilter19.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter32.contains(constable33);
        constableBloomFilter32.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter32.getClass();
        constableBloomFilter19.insert((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass37);
        boolean boolean40 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass37);
        boolean boolean42 = constableBloomFilter5.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter45.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass46);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) ' ');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter51.getClass();
        boolean boolean53 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        boolean boolean15 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter18.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter18.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable32 = null;
        boolean boolean33 = constableBloomFilter31.contains(constable32);
        constableBloomFilter31.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter38.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass41);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass41);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass41);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter5.getClass();
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass24 = constableBloomFilter17.getClass();
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter14.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean32 = constableBloomFilter30.contains((java.lang.constant.Constable) 0L);
        boolean boolean34 = constableBloomFilter30.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) '4');
        java.lang.Class<?> wildcardClass37 = constableBloomFilter30.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass37);
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass37);
        boolean boolean40 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (short) 0, (int) (byte) 10);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>> wildcardClassBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Class<?>>((int) (byte) 1, (int) 'a');
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '4');
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter5.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1L));
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter5.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean17 = constableBloomFilter5.contains((java.lang.constant.Constable) (byte) -1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter20.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean28 = constableBloomFilter20.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, 100);
        java.lang.Class<?> wildcardClass32 = constantDescBloomFilter31.getClass();
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass32);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass32);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable38 = null;
        constableBloomFilter37.insert(constable38);
        constableBloomFilter37.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean46 = constableBloomFilter44.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass47 = constableBloomFilter44.getClass();
        constableBloomFilter37.insert((java.lang.constant.Constable) wildcardClass47);
        boolean boolean49 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass47);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean50 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass40 = wildcardClassOfFieldBloomFilter39.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter36.contains((java.lang.constant.Constable) '#');
        constableBloomFilter36.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass49 = constableBloomFilter36.getClass();
        boolean boolean50 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass49);
        boolean boolean51 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter54.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter54.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean60 = constableBloomFilter54.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean62 = constableBloomFilter54.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter54.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter11.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) '#');
        constableBloomFilter16.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass29 = constableBloomFilter16.getClass();
        boolean boolean30 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter33.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        constableBloomFilter38.insert(constable39);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter38.getClass();
        boolean boolean42 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass41);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter46.insert((java.lang.constant.Constable) 10);
        boolean boolean50 = constableBloomFilter46.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter53 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter53.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter61 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass62 = wildcardClassOfFieldBloomFilter61.getClass();
        constableBloomFilter58.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter53.insert((java.lang.constant.Constable) wildcardClass62);
        boolean boolean65 = constableBloomFilter46.contains((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter46.insert((java.lang.constant.Constable) (short) -1);
        java.lang.Class<?> wildcardClass68 = constableBloomFilter46.getClass();
        boolean boolean69 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 1, 10);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        java.lang.constant.Constable constable5 = null;
        boolean boolean6 = constableBloomFilter2.contains(constable5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean15 = constableBloomFilter13.contains((java.lang.constant.Constable) 0L);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter20.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean28 = constableBloomFilter20.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter20.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 0, (int) ' ');
        java.lang.Class<?> wildcardClass35 = charSequenceBloomFilter34.getClass();
        boolean boolean36 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass35);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) 10, (int) '4');
        java.lang.Class<?> wildcardClass40 = charSequenceBloomFilter39.getClass();
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>(1, 1);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        boolean boolean23 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter26.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass37 = constableBloomFilter26.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter14.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter43.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter43.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter43.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter43.insert((java.lang.constant.Constable) 'a');
        constableBloomFilter43.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter59.getClass();
        boolean boolean61 = constableBloomFilter56.contains((java.lang.constant.Constable) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = constableBloomFilter56.getClass();
        constableBloomFilter43.insert((java.lang.constant.Constable) wildcardClass62);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass62);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass8 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter26.contains((java.lang.constant.Constable) '#');
        constableBloomFilter26.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter26.getClass();
        boolean boolean40 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass39);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass58 = wildcardClassOfFieldBloomFilter57.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        constableBloomFilter54.insert((java.lang.constant.Constable) wildcardClass61);
        boolean boolean64 = constableBloomFilter54.contains((java.lang.constant.Constable) '#');
        constableBloomFilter54.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass67 = constableBloomFilter54.getClass();
        boolean boolean68 = constableBloomFilter45.contains((java.lang.constant.Constable) wildcardClass67);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable7 = null;
        constableBloomFilter2.insert(constable7);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = constableBloomFilterBloomFilter13.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter23.contains(constable24);
        constableBloomFilter23.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean29 = constableBloomFilter23.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter32 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        constableBloomFilter35.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean41 = constableBloomFilter35.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass42 = constableBloomFilter35.getClass();
        boolean boolean43 = constableBloomFilter32.contains((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable47 = null;
        boolean boolean48 = constableBloomFilter46.contains(constable47);
        constableBloomFilter46.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean52 = constableBloomFilter46.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass53 = constableBloomFilter46.getClass();
        constableBloomFilter32.insert((java.lang.constant.Constable) wildcardClass53);
        boolean boolean55 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass53);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter58 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter58.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter58.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter58.insert((java.lang.constant.Constable) (-1L));
        java.lang.Class<?> wildcardClass65 = constableBloomFilter58.getClass();
        boolean boolean66 = constableBloomFilter23.contains((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter20.insert((java.lang.constant.Constable) wildcardClass65);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass65);
        java.lang.Class<?> wildcardClass69 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass3 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter8.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter8.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter8.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter8.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter19.insert((java.lang.constant.Constable) 10);
        boolean boolean23 = constableBloomFilter19.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable24 = null;
        boolean boolean25 = constableBloomFilter19.contains(constable24);
        java.lang.Class<?> wildcardClass26 = constableBloomFilter19.getClass();
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter33.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter33.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter33.insert((java.lang.constant.Constable) (-1L));
        boolean boolean41 = constableBloomFilter33.contains((java.lang.constant.Constable) 0L);
        java.lang.Class<?> wildcardClass42 = constableBloomFilter33.getClass();
        constableBloomFilter30.insert((java.lang.constant.Constable) wildcardClass42);
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass42);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass42);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter48.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean52 = constableBloomFilter48.contains((java.lang.constant.Constable) 100L);
        boolean boolean54 = constableBloomFilter48.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable61 = null;
        boolean boolean62 = constableBloomFilter60.contains(constable61);
        constableBloomFilter60.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean66 = constableBloomFilter60.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass67 = constableBloomFilter60.getClass();
        boolean boolean68 = constableBloomFilter57.contains((java.lang.constant.Constable) wildcardClass67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable72 = null;
        boolean boolean73 = constableBloomFilter71.contains(constable72);
        constableBloomFilter71.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean77 = constableBloomFilter71.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass78 = constableBloomFilter71.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass78);
        boolean boolean81 = constableBloomFilter57.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter84 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass85 = wildcardClassOfFieldBloomFilter84.getClass();
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass85);
        boolean boolean87 = constableBloomFilter48.contains((java.lang.constant.Constable) wildcardClass85);
        java.lang.Class<?> wildcardClass88 = constableBloomFilter48.getClass();
        boolean boolean89 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass88);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) '#');
        java.lang.Class<?> wildcardClass93 = constableBloomFilter92.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass93);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) '4', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) ' ');
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter5.getClass();
        boolean boolean11 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 1);
        java.lang.constant.Constable constable15 = null;
        constableBloomFilter14.insert(constable15);
        java.lang.Class<?> wildcardClass17 = constableBloomFilter14.getClass();
        boolean boolean18 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) ' ');
        java.lang.Class<?> wildcardClass22 = constableBloomFilter21.getClass();
        boolean boolean23 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass22);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 1);
        java.lang.Class<?> wildcardClass30 = constableBloomFilterBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        boolean boolean32 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        java.lang.constant.Constable constable33 = null;
        boolean boolean34 = constableBloomFilter2.contains(constable33);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', (int) (byte) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass9 = constableBloomFilter8.getClass();
        boolean boolean10 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass9);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ', 100);
        java.lang.Class<?> wildcardClass14 = wildcardClassOfFieldBloomFilter13.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass14);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable> serializableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.io.Serializable>((int) (byte) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass19 = serializableBloomFilter18.getClass();
        boolean boolean20 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass19);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass19);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter27.getClass();
        boolean boolean29 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass28);
        boolean boolean30 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean29);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter11.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable16 = null;
        constableBloomFilter11.insert(constable16);
        boolean boolean19 = constableBloomFilter11.contains((java.lang.constant.Constable) 0);
        constableBloomFilter11.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass25 = wildcardClassOfFieldBloomFilter24.getClass();
        boolean boolean26 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter29.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) ' ', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter37 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass38 = constableBloomFilter37.getClass();
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass38);
        boolean boolean40 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass38);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter29.getClass();
        boolean boolean42 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass41);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean42);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) 'a');
        boolean boolean23 = constableBloomFilter15.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter15.getClass();
        boolean boolean25 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter28.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter28.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter28.insert((java.lang.constant.Constable) (-1L));
        boolean boolean36 = constableBloomFilter28.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean41 = constableBloomFilter39.contains((java.lang.constant.Constable) 0L);
        boolean boolean43 = constableBloomFilter39.contains((java.lang.constant.Constable) (byte) 0);
        constableBloomFilter39.insert((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter39.getClass();
        constableBloomFilter28.insert((java.lang.constant.Constable) wildcardClass46);
        boolean boolean48 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter51.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter51.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable56 = null;
        constableBloomFilter51.insert(constable56);
        boolean boolean59 = constableBloomFilter51.contains((java.lang.constant.Constable) 0);
        constableBloomFilter51.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter64 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass65 = wildcardClassOfFieldBloomFilter64.getClass();
        boolean boolean66 = constableBloomFilter51.contains((java.lang.constant.Constable) wildcardClass65);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 0);
        java.lang.Class<?> wildcardClass70 = constableBloomFilter69.getClass();
        boolean boolean71 = constableBloomFilter51.contains((java.lang.constant.Constable) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = constableBloomFilter51.getClass();
        boolean boolean73 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass72);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass8 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass8);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 100, (int) (byte) 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter26.contains((java.lang.constant.Constable) '#');
        constableBloomFilter26.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter26.getClass();
        boolean boolean40 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass39);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) 'a', 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass24 = constableBloomFilter17.getClass();
        boolean boolean25 = constableBloomFilter14.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        constableBloomFilter28.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean34 = constableBloomFilter28.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass35 = constableBloomFilter28.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass35);
        boolean boolean38 = constableBloomFilter14.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass39 = constableBloomFilter14.getClass();
        boolean boolean40 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = constableBloomFilter11.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean47 = constableBloomFilter45.contains((java.lang.constant.Constable) 0L);
        boolean boolean49 = constableBloomFilter45.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter54.insert((java.lang.constant.Constable) 10);
        constableBloomFilter54.insert((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter54.getClass();
        boolean boolean60 = constableBloomFilter45.contains((java.lang.constant.Constable) wildcardClass59);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass59);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 10, (int) (byte) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) 10);
        boolean boolean9 = constableBloomFilter5.contains((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass10 = constableBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) (byte) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable8 = null;
        boolean boolean9 = constableBloomFilter7.contains(constable8);
        boolean boolean11 = constableBloomFilter7.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean18 = constableBloomFilter16.contains((java.lang.constant.Constable) 0L);
        boolean boolean20 = constableBloomFilter16.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass26 = typeDescriptorBloomFilter25.getClass();
        boolean boolean27 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass26);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter30 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable31 = null;
        boolean boolean32 = constableBloomFilter30.contains(constable31);
        constableBloomFilter30.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean36 = constableBloomFilter30.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter30.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter30.insert((java.lang.constant.Constable) (-1));
        java.lang.Class<?> wildcardClass41 = constableBloomFilter30.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass41);
        boolean boolean43 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass41);
        java.lang.Class<?> wildcardClass44 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) (byte) -1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter2.insert((java.lang.constant.Constable) 'a');
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) 10.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter18.getClass();
        boolean boolean26 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass36 = constableBloomFilter29.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean39 = constableBloomFilter15.contains((java.lang.constant.Constable) (short) 0);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter15.getClass();
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) (byte) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter18.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter18.insert((java.lang.constant.Constable) (-1L));
        boolean boolean26 = constableBloomFilter18.contains((java.lang.constant.Constable) 0L);
        constableBloomFilter18.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter18.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable34 = null;
        boolean boolean35 = constableBloomFilter33.contains(constable34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        boolean boolean42 = constableBloomFilter38.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter38.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass43);
        boolean boolean45 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass43);
        boolean boolean46 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean54 = constableBloomFilter52.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter57 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter57.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter57.insert((java.lang.constant.Constable) ' ');
        boolean boolean63 = constableBloomFilter57.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass70 = wildcardClassOfFieldBloomFilter69.getClass();
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass73);
        boolean boolean76 = constableBloomFilter66.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter79 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable80 = null;
        boolean boolean81 = constableBloomFilter79.contains(constable80);
        constableBloomFilter79.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass84 = constableBloomFilter79.getClass();
        constableBloomFilter66.insert((java.lang.constant.Constable) wildcardClass84);
        constableBloomFilter57.insert((java.lang.constant.Constable) wildcardClass84);
        boolean boolean87 = constableBloomFilter52.contains((java.lang.constant.Constable) wildcardClass84);
        boolean boolean89 = constableBloomFilter52.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter92 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass93 = constableBloomFilter92.getClass();
        constableBloomFilter52.insert((java.lang.constant.Constable) wildcardClass93);
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass93);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = constableBloomFilterBloomFilter29.getClass();
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable37 = null;
        boolean boolean38 = constableBloomFilter36.contains(constable37);
        boolean boolean40 = constableBloomFilter36.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter46 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean48 = constableBloomFilter46.contains((java.lang.constant.Constable) ' ');
        boolean boolean50 = constableBloomFilter46.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter46.getClass();
        boolean boolean52 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter55 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable56 = null;
        boolean boolean57 = constableBloomFilter55.contains(constable56);
        constableBloomFilter55.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean61 = constableBloomFilter55.contains((java.lang.constant.Constable) 'a');
        boolean boolean63 = constableBloomFilter55.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass64 = constableBloomFilter55.getClass();
        boolean boolean65 = constableBloomFilter43.contains((java.lang.constant.Constable) wildcardClass64);
        boolean boolean66 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass64);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean66);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (short) 0, (int) (short) 0);
        java.lang.Class<?> wildcardClass71 = constantDescBloomFilter70.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean9 = constableBloomFilter7.contains((java.lang.constant.Constable) 0L);
        boolean boolean11 = constableBloomFilter7.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass17 = typeDescriptorBloomFilter16.getClass();
        boolean boolean18 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass17);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, 100);
        java.lang.Class<?> wildcardClass22 = constableBloomFilterBloomFilter21.getClass();
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass22);
        boolean boolean24 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass22);
        java.lang.Class<?> wildcardClass25 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, (int) (byte) 0);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable13 = null;
        boolean boolean14 = constableBloomFilter12.contains(constable13);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter12.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        constableBloomFilter19.insert(constable20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass37 = wildcardClassOfFieldBloomFilter36.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass40);
        boolean boolean43 = constableBloomFilter33.contains((java.lang.constant.Constable) '#');
        constableBloomFilter33.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter33.getClass();
        boolean boolean47 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass46);
        boolean boolean48 = constableBloomFilter19.contains((java.lang.constant.Constable) boolean47);
        boolean boolean50 = constableBloomFilter19.contains((java.lang.constant.Constable) 100);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass51);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (short) 0, (int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = strComparableBloomFilter56.getClass();
        boolean boolean58 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable9 = null;
        boolean boolean10 = constableBloomFilter8.contains(constable9);
        constableBloomFilter8.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean14 = constableBloomFilter8.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass15 = constableBloomFilter8.getClass();
        boolean boolean16 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass15);
        constableBloomFilter5.insert((java.lang.constant.Constable) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter21 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable22 = null;
        boolean boolean23 = constableBloomFilter21.contains(constable22);
        constableBloomFilter21.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable29 = null;
        boolean boolean30 = constableBloomFilter28.contains(constable29);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter28.getClass();
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable36 = null;
        boolean boolean37 = constableBloomFilter35.contains(constable36);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter43 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable44 = null;
        boolean boolean45 = constableBloomFilter43.contains(constable44);
        constableBloomFilter43.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean49 = constableBloomFilter43.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass50 = constableBloomFilter43.getClass();
        boolean boolean51 = constableBloomFilter40.contains((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        constableBloomFilter54.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean60 = constableBloomFilter54.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass61 = constableBloomFilter54.getClass();
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass61);
        boolean boolean64 = constableBloomFilter40.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter67 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass68 = wildcardClassOfFieldBloomFilter67.getClass();
        constableBloomFilter40.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter35.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter21.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass68);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter2.insert((java.lang.constant.Constable) (-1L));
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean15 = constableBloomFilter13.contains((java.lang.constant.Constable) 0L);
        boolean boolean17 = constableBloomFilter13.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter20.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean24 = constableBloomFilter20.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter20.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean28 = constableBloomFilter20.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass29 = constableBloomFilter20.getClass();
        constableBloomFilter13.insert((java.lang.constant.Constable) wildcardClass29);
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass29);
        java.lang.Class<?> wildcardClass32 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) (byte) 100, (int) (short) 0);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) (byte) 1, (int) '#');
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter5.getClass();
        boolean boolean13 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable17 = null;
        boolean boolean18 = constableBloomFilter16.contains(constable17);
        constableBloomFilter16.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean22 = constableBloomFilter16.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass23 = constableBloomFilter16.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter2.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter29.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter29.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable34 = null;
        constableBloomFilter29.insert(constable34);
        boolean boolean37 = constableBloomFilter29.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter40 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = constableBloomFilterBloomFilter40.getClass();
        boolean boolean42 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass46 = constableBloomFilter45.getClass();
        boolean boolean47 = constableBloomFilter29.contains((java.lang.constant.Constable) wildcardClass46);
        boolean boolean48 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter51.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter51.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter51.insert((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter60 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        constableBloomFilter63.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean69 = constableBloomFilter63.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass70 = constableBloomFilter63.getClass();
        boolean boolean71 = constableBloomFilter60.contains((java.lang.constant.Constable) wildcardClass70);
        boolean boolean72 = constableBloomFilter51.contains((java.lang.constant.Constable) wildcardClass70);
        boolean boolean73 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean72);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>((int) (byte) 10, (int) (byte) 1);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter8 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass12 = wildcardClassOfFieldBloomFilter11.getClass();
        constableBloomFilter8.insert((java.lang.constant.Constable) wildcardClass12);
        boolean boolean14 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass21 = wildcardClassOfFieldBloomFilter20.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        constableBloomFilter17.insert((java.lang.constant.Constable) wildcardClass24);
        boolean boolean27 = constableBloomFilter17.contains((java.lang.constant.Constable) 1);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter17.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass28);
        boolean boolean30 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter33.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter33.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter33.insert((java.lang.constant.Constable) (-1L));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 100, 10);
        java.lang.constant.Constable constable43 = null;
        constableBloomFilter42.insert(constable43);
        java.lang.Class<?> wildcardClass45 = constableBloomFilter42.getClass();
        boolean boolean46 = constableBloomFilter33.contains((java.lang.constant.Constable) wildcardClass45);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (byte) 10);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter50.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter13 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable14 = null;
        boolean boolean15 = constableBloomFilter13.contains(constable14);
        constableBloomFilter13.insert((java.lang.constant.Constable) 100);
        boolean boolean19 = constableBloomFilter13.contains((java.lang.constant.Constable) true);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter13.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass34 = constableBloomFilter27.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable39 = null;
        boolean boolean40 = constableBloomFilter38.contains(constable39);
        constableBloomFilter38.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean44 = constableBloomFilter38.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass45 = constableBloomFilter38.getClass();
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter49 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean51 = constableBloomFilter49.contains((java.lang.constant.Constable) 0L);
        boolean boolean53 = constableBloomFilter49.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter56.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean60 = constableBloomFilter56.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter56.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean64 = constableBloomFilter56.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass65 = constableBloomFilter56.getClass();
        constableBloomFilter49.insert((java.lang.constant.Constable) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = constableBloomFilter49.getClass();
        boolean boolean68 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass67);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter71 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter71.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter71.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable76 = null;
        constableBloomFilter71.insert(constable76);
        boolean boolean79 = constableBloomFilter71.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(100, (int) (short) 0);
        java.lang.Class<?> wildcardClass83 = wildcardClassOfFieldBloomFilter82.getClass();
        boolean boolean84 = constableBloomFilter71.contains((java.lang.constant.Constable) wildcardClass83);
        constableBloomFilter24.insert((java.lang.constant.Constable) wildcardClass83);
        boolean boolean86 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass83);
        boolean boolean88 = constableBloomFilter2.contains((java.lang.constant.Constable) 10.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 100);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter7.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter7.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter7.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter7.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter18.insert((java.lang.constant.Constable) 10);
        boolean boolean22 = constableBloomFilter18.contains((java.lang.constant.Constable) true);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter27 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter27.contains(constable28);
        constableBloomFilter27.insert((java.lang.constant.Constable) 100.0f);
        boolean boolean33 = constableBloomFilter27.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter39 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable40 = null;
        boolean boolean41 = constableBloomFilter39.contains(constable40);
        constableBloomFilter39.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean45 = constableBloomFilter39.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter39.getClass();
        boolean boolean47 = constableBloomFilter36.contains((java.lang.constant.Constable) wildcardClass46);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter50 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable51 = null;
        boolean boolean52 = constableBloomFilter50.contains(constable51);
        constableBloomFilter50.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean56 = constableBloomFilter50.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass57 = constableBloomFilter50.getClass();
        constableBloomFilter36.insert((java.lang.constant.Constable) wildcardClass57);
        boolean boolean59 = constableBloomFilter27.contains((java.lang.constant.Constable) wildcardClass57);
        boolean boolean60 = constableBloomFilter18.contains((java.lang.constant.Constable) boolean59);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter68 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable69 = null;
        boolean boolean70 = constableBloomFilter68.contains(constable69);
        boolean boolean72 = constableBloomFilter68.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass73 = constableBloomFilter68.getClass();
        constableBloomFilter63.insert((java.lang.constant.Constable) wildcardClass73);
        constableBloomFilter18.insert((java.lang.constant.Constable) wildcardClass73);
        boolean boolean76 = constableBloomFilter7.contains((java.lang.constant.Constable) wildcardClass73);
        boolean boolean78 = constableBloomFilter7.contains((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass79 = constableBloomFilter7.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter5.insert((java.lang.constant.Constable) 10);
        constableBloomFilter5.insert((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) 0L);
        boolean boolean16 = constableBloomFilter12.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter19.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean23 = constableBloomFilter19.contains((java.lang.constant.Constable) 0.0d);
        constableBloomFilter19.insert((java.lang.constant.Constable) (short) 0);
        boolean boolean27 = constableBloomFilter19.contains((java.lang.constant.Constable) 0);
        java.lang.Class<?> wildcardClass28 = constableBloomFilter19.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass28);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass28);
        java.lang.Class<?> wildcardClass31 = constableBloomFilter5.getClass();
        boolean boolean32 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass31);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter35 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean40 = constableBloomFilter38.contains((java.lang.constant.Constable) ' ');
        boolean boolean42 = constableBloomFilter38.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass43 = constableBloomFilter38.getClass();
        boolean boolean44 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass43);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter47 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 1);
        java.lang.constant.Constable constable48 = null;
        constableBloomFilter47.insert(constable48);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter47.getClass();
        boolean boolean51 = constableBloomFilter35.contains((java.lang.constant.Constable) wildcardClass50);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass50);
        java.lang.Class<?> wildcardClass53 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) (byte) 0, (int) (short) 0);
        java.lang.Class<?> wildcardClass3 = genericDeclarationBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, (int) 'a');
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter7 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter7.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter7.insert((java.lang.constant.Constable) ' ');
        boolean boolean13 = constableBloomFilter7.contains((java.lang.constant.Constable) 0L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass20 = wildcardClassOfFieldBloomFilter19.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass23);
        boolean boolean26 = constableBloomFilter16.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        java.lang.Class<?> wildcardClass34 = constableBloomFilter29.getClass();
        constableBloomFilter16.insert((java.lang.constant.Constable) wildcardClass34);
        constableBloomFilter7.insert((java.lang.constant.Constable) wildcardClass34);
        boolean boolean37 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass34);
        boolean boolean39 = constableBloomFilter2.contains((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter42 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, (int) (short) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean47 = constableBloomFilter45.contains((java.lang.constant.Constable) ' ');
        boolean boolean49 = constableBloomFilter45.contains((java.lang.constant.Constable) (short) 1);
        java.lang.Class<?> wildcardClass50 = constableBloomFilter45.getClass();
        boolean boolean51 = constableBloomFilter42.contains((java.lang.constant.Constable) wildcardClass50);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter54 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable55 = null;
        boolean boolean56 = constableBloomFilter54.contains(constable55);
        constableBloomFilter54.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean60 = constableBloomFilter54.contains((java.lang.constant.Constable) 'a');
        boolean boolean62 = constableBloomFilter54.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass63 = constableBloomFilter54.getClass();
        boolean boolean64 = constableBloomFilter42.contains((java.lang.constant.Constable) wildcardClass63);
        boolean boolean65 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass63);
        java.lang.constant.Constable constable66 = null;
        boolean boolean67 = constableBloomFilter2.contains(constable66);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String> strBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.String>(0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass71 = strBloomFilter70.getClass();
        boolean boolean72 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 10, 100);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>> strComparableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Comparable<java.lang.String>>(100, (int) (byte) 10);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter9.insert((java.lang.constant.Constable) 0.0d);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldBloomFilter17.getClass();
        constableBloomFilter14.insert((java.lang.constant.Constable) wildcardClass18);
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass18);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '4', 0);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter23.getClass();
        constableBloomFilter9.insert((java.lang.constant.Constable) wildcardClass24);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass24);
        java.lang.Class<?> wildcardClass27 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, (int) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean11 = constableBloomFilter5.contains((java.lang.constant.Constable) 'a');
        boolean boolean13 = constableBloomFilter5.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass14 = constableBloomFilter5.getClass();
        boolean boolean15 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass14);
        java.lang.constant.Constable constable16 = null;
        constableBloomFilter2.insert(constable16);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass6 = constableBloomFilterBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) (-1.0f));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) '#');
        constableBloomFilter12.insert((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>(1, (int) 'a');
        java.lang.Class<?> wildcardClass18 = genericDeclarationBloomFilter17.getClass();
        constableBloomFilter12.insert((java.lang.constant.Constable) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter12.getClass();
        boolean boolean21 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean26 = constableBloomFilter24.contains((java.lang.constant.Constable) 0L);
        boolean boolean28 = constableBloomFilter24.contains((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) '4');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(0, 100);
        java.lang.Class<?> wildcardClass34 = typeDescriptorBloomFilter33.getClass();
        boolean boolean35 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass34);
        boolean boolean36 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc> constantDescBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.ConstantDesc>((int) 'a', (int) (short) 0);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldBloomFilter5.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass6);
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        boolean boolean4 = constableBloomFilter2.contains(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable13 = null;
        constableBloomFilter12.insert(constable13);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable18 = null;
        boolean boolean19 = constableBloomFilter17.contains(constable18);
        constableBloomFilter17.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean23 = constableBloomFilter17.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass30 = wildcardClassOfFieldBloomFilter29.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass33);
        boolean boolean36 = constableBloomFilter26.contains((java.lang.constant.Constable) '#');
        constableBloomFilter26.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass39 = constableBloomFilter26.getClass();
        boolean boolean40 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter12.contains((java.lang.constant.Constable) boolean40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter44 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass45 = wildcardClassOfFieldBloomFilter44.getClass();
        boolean boolean46 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass45);
        boolean boolean47 = constableBloomFilter9.contains((java.lang.constant.Constable) wildcardClass45);
        boolean boolean48 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass45);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter51 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter51.getClass();
        boolean boolean53 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass52);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter59 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter59.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter59.insert((java.lang.constant.Constable) 1.0f);
        java.lang.constant.Constable constable64 = null;
        constableBloomFilter59.insert(constable64);
        boolean boolean67 = constableBloomFilter59.contains((java.lang.constant.Constable) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>((int) (short) 10, (int) (byte) 1);
        java.lang.Class<?> wildcardClass71 = constableBloomFilterBloomFilter70.getClass();
        boolean boolean72 = constableBloomFilter59.contains((java.lang.constant.Constable) wildcardClass71);
        boolean boolean73 = constableBloomFilter56.contains((java.lang.constant.Constable) boolean72);
        java.lang.Class<?> wildcardClass74 = constableBloomFilter56.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(0, 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean7 = constableBloomFilter5.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter10 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter10.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter18 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable19 = null;
        boolean boolean20 = constableBloomFilter18.contains(constable19);
        constableBloomFilter18.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean24 = constableBloomFilter18.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass25 = constableBloomFilter18.getClass();
        boolean boolean26 = constableBloomFilter15.contains((java.lang.constant.Constable) wildcardClass25);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter29 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable30 = null;
        boolean boolean31 = constableBloomFilter29.contains(constable30);
        constableBloomFilter29.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean35 = constableBloomFilter29.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass36 = constableBloomFilter29.getClass();
        constableBloomFilter15.insert((java.lang.constant.Constable) wildcardClass36);
        boolean boolean39 = constableBloomFilter15.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass40 = constableBloomFilter15.getClass();
        constableBloomFilter10.insert((java.lang.constant.Constable) wildcardClass40);
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass40);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter45.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass48 = constableBloomFilter45.getClass();
        boolean boolean49 = constableBloomFilter5.contains((java.lang.constant.Constable) wildcardClass48);
        constableBloomFilter2.insert((java.lang.constant.Constable) boolean49);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable3 = null;
        constableBloomFilter2.insert(constable3);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter9 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean11 = constableBloomFilter9.contains((java.lang.constant.Constable) ' ');
        java.lang.Class<?> wildcardClass12 = constableBloomFilter9.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass20 = constableBloomFilter19.getClass();
        boolean boolean21 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass20);
        boolean boolean22 = constableBloomFilter2.contains((java.lang.constant.Constable) boolean21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>((int) ' ', (int) '4');
        java.lang.Class<?> wildcardClass26 = objBloomFilter25.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean4 = constableBloomFilter2.contains((java.lang.constant.Constable) ' ');
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 1);
        java.lang.constant.Constable constable7 = null;
        boolean boolean8 = constableBloomFilter2.contains(constable7);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass12 = constableBloomFilter11.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass12);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter16 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter16.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter16.insert((java.lang.constant.Constable) ' ');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter23 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter23.insert((java.lang.constant.Constable) 0.0d);
        java.lang.Class<?> wildcardClass26 = constableBloomFilter23.getClass();
        boolean boolean27 = constableBloomFilter16.contains((java.lang.constant.Constable) wildcardClass26);
        java.lang.constant.Constable constable28 = null;
        boolean boolean29 = constableBloomFilter16.contains(constable28);
        java.lang.Class<?> wildcardClass30 = constableBloomFilter16.getClass();
        boolean boolean31 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass30);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        boolean boolean36 = constableBloomFilter34.contains((java.lang.constant.Constable) ' ');
        boolean boolean38 = constableBloomFilter34.contains((java.lang.constant.Constable) (short) 1);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter41 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter41.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter41.insert((java.lang.constant.Constable) ' ');
        constableBloomFilter41.insert((java.lang.constant.Constable) (-1L));
        constableBloomFilter41.insert((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter52 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter52.insert((java.lang.constant.Constable) 10);
        boolean boolean56 = constableBloomFilter52.contains((java.lang.constant.Constable) true);
        java.lang.constant.Constable constable57 = null;
        boolean boolean58 = constableBloomFilter52.contains(constable57);
        java.lang.Class<?> wildcardClass59 = constableBloomFilter52.getClass();
        constableBloomFilter41.insert((java.lang.constant.Constable) wildcardClass59);
        constableBloomFilter34.insert((java.lang.constant.Constable) wildcardClass59);
        java.lang.constant.Constable constable62 = null;
        boolean boolean63 = constableBloomFilter34.contains(constable62);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter66 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter69 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable70 = null;
        boolean boolean71 = constableBloomFilter69.contains(constable70);
        constableBloomFilter69.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean75 = constableBloomFilter69.contains((java.lang.constant.Constable) 'a');
        constableBloomFilter69.insert((java.lang.constant.Constable) (short) 100);
        constableBloomFilter69.insert((java.lang.constant.Constable) (-1));
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter82 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable83 = null;
        boolean boolean84 = constableBloomFilter82.contains(constable83);
        constableBloomFilter82.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter89 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable90 = null;
        boolean boolean91 = constableBloomFilter89.contains(constable90);
        java.lang.Class<?> wildcardClass92 = constableBloomFilter89.getClass();
        constableBloomFilter82.insert((java.lang.constant.Constable) wildcardClass92);
        constableBloomFilter69.insert((java.lang.constant.Constable) wildcardClass92);
        java.lang.Class<?> wildcardClass95 = constableBloomFilter69.getClass();
        boolean boolean96 = constableBloomFilter66.contains((java.lang.constant.Constable) wildcardClass95);
        constableBloomFilter34.insert((java.lang.constant.Constable) boolean96);
        java.lang.Class<?> wildcardClass98 = constableBloomFilter34.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass98);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>((int) (short) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: nbits < 0: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence> charSequenceBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.CharSequence>((int) '4', (int) (short) 10);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration> genericDeclarationBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.reflect.GenericDeclaration>((int) (byte) 1, 1);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(10, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable6 = null;
        boolean boolean7 = constableBloomFilter5.contains(constable6);
        constableBloomFilter5.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable13 = null;
        boolean boolean14 = constableBloomFilter12.contains(constable13);
        java.lang.Class<?> wildcardClass15 = constableBloomFilter12.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass15);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter19 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable20 = null;
        constableBloomFilter19.insert(constable20);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter24 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable25 = null;
        boolean boolean26 = constableBloomFilter24.contains(constable25);
        constableBloomFilter24.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean30 = constableBloomFilter24.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 0, 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter36 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass37 = wildcardClassOfFieldBloomFilter36.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        constableBloomFilter33.insert((java.lang.constant.Constable) wildcardClass40);
        boolean boolean43 = constableBloomFilter33.contains((java.lang.constant.Constable) '#');
        constableBloomFilter33.insert((java.lang.constant.Constable) '#');
        java.lang.Class<?> wildcardClass46 = constableBloomFilter33.getClass();
        boolean boolean47 = constableBloomFilter24.contains((java.lang.constant.Constable) wildcardClass46);
        boolean boolean48 = constableBloomFilter19.contains((java.lang.constant.Constable) boolean47);
        boolean boolean50 = constableBloomFilter19.contains((java.lang.constant.Constable) 100);
        java.lang.Class<?> wildcardClass51 = constableBloomFilter19.getClass();
        constableBloomFilter5.insert((java.lang.constant.Constable) wildcardClass51);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass51);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter56 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable57 = null;
        boolean boolean58 = constableBloomFilter56.contains(constable57);
        constableBloomFilter56.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter63 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable64 = null;
        boolean boolean65 = constableBloomFilter63.contains(constable64);
        java.lang.Class<?> wildcardClass66 = constableBloomFilter63.getClass();
        constableBloomFilter56.insert((java.lang.constant.Constable) wildcardClass66);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter70 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable71 = null;
        boolean boolean72 = constableBloomFilter70.contains(constable71);
        constableBloomFilter70.insert((java.lang.constant.Constable) 100.0f);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter77 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable78 = null;
        boolean boolean79 = constableBloomFilter77.contains(constable78);
        java.lang.Class<?> wildcardClass80 = constableBloomFilter77.getClass();
        constableBloomFilter70.insert((java.lang.constant.Constable) wildcardClass80);
        boolean boolean82 = constableBloomFilter56.contains((java.lang.constant.Constable) wildcardClass80);
        java.lang.Class<?> wildcardClass83 = constableBloomFilter56.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass83);
        java.lang.Class<?> wildcardClass85 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        boolean boolean6 = constableBloomFilter2.contains((java.lang.constant.Constable) 100L);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (byte) 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter11 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter14 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable15 = null;
        boolean boolean16 = constableBloomFilter14.contains(constable15);
        constableBloomFilter14.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean20 = constableBloomFilter14.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass21 = constableBloomFilter14.getClass();
        boolean boolean22 = constableBloomFilter11.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter25 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable26 = null;
        boolean boolean27 = constableBloomFilter25.contains(constable26);
        constableBloomFilter25.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean31 = constableBloomFilter25.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass32 = constableBloomFilter25.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass32);
        boolean boolean35 = constableBloomFilter11.contains((java.lang.constant.Constable) 1L);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter38 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1, 0);
        java.lang.Class<?> wildcardClass39 = wildcardClassOfFieldBloomFilter38.getClass();
        constableBloomFilter11.insert((java.lang.constant.Constable) wildcardClass39);
        boolean boolean41 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass39);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0d);
        java.lang.constant.Constable constable44 = null;
        constableBloomFilter2.insert(constable44);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object> objBloomFilter48 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.Object>(0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass49 = objBloomFilter48.getClass();
        boolean boolean50 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        constableBloomFilter2.insert((java.lang.constant.Constable) 0.0d);
        constableBloomFilter2.insert((java.lang.constant.Constable) 1.0f);
        boolean boolean8 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        boolean boolean10 = constableBloomFilter2.contains((java.lang.constant.Constable) 0L);
        boolean boolean12 = constableBloomFilter2.contains((java.lang.constant.Constable) (short) 100);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter15 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable16 = null;
        boolean boolean17 = constableBloomFilter15.contains(constable16);
        constableBloomFilter15.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean21 = constableBloomFilter15.contains((java.lang.constant.Constable) 'a');
        boolean boolean23 = constableBloomFilter15.contains((java.lang.constant.Constable) 100.0f);
        java.lang.Class<?> wildcardClass24 = constableBloomFilter15.getClass();
        boolean boolean25 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass24);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldBloomFilter28 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0, (int) (short) 100);
        java.lang.Class<?> wildcardClass29 = wildcardClassOfFieldBloomFilter28.getClass();
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass29);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor> typeDescriptorBloomFilter33 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.invoke.TypeDescriptor>(10, (int) (short) 0);
        java.lang.Class<?> wildcardClass34 = typeDescriptorBloomFilter33.getClass();
        boolean boolean35 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = constableBloomFilter2.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter2 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter5 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) '#', (int) (short) 100);
        java.lang.Class<?> wildcardClass6 = constableBloomFilter5.getClass();
        boolean boolean7 = constableBloomFilter2.contains((java.lang.constant.Constable) wildcardClass6);
        boolean boolean9 = constableBloomFilter2.contains((java.lang.constant.Constable) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter12 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        boolean boolean14 = constableBloomFilter12.contains((java.lang.constant.Constable) true);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter17 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>(100, (int) 'a');
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>> constableBloomFilterBloomFilter20 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>>(0, (int) ' ');
        java.lang.Class<?> wildcardClass21 = constableBloomFilterBloomFilter20.getClass();
        boolean boolean22 = constableBloomFilter17.contains((java.lang.constant.Constable) wildcardClass21);
        boolean boolean23 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass21);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter26 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (byte) 1, (int) (byte) 100);
        constableBloomFilter26.insert((java.lang.constant.Constable) 10);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter31 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter34 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable35 = null;
        boolean boolean36 = constableBloomFilter34.contains(constable35);
        constableBloomFilter34.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean40 = constableBloomFilter34.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass41 = constableBloomFilter34.getClass();
        boolean boolean42 = constableBloomFilter31.contains((java.lang.constant.Constable) wildcardClass41);
        com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable> constableBloomFilter45 = new com.thealgorithms.datastructures.bloomfilter.BloomFilter<java.lang.constant.Constable>((int) (short) 0, 0);
        java.lang.constant.Constable constable46 = null;
        boolean boolean47 = constableBloomFilter45.contains(constable46);
        constableBloomFilter45.insert((java.lang.constant.Constable) (byte) 0);
        boolean boolean51 = constableBloomFilter45.contains((java.lang.constant.Constable) 'a');
        java.lang.Class<?> wildcardClass52 = constableBloomFilter45.getClass();
        constableBloomFilter31.insert((java.lang.constant.Constable) wildcardClass52);
        boolean boolean55 = constableBloomFilter31.contains((java.lang.constant.Constable) 1L);
        java.lang.Class<?> wildcardClass56 = constableBloomFilter31.getClass();
        constableBloomFilter26.insert((java.lang.constant.Constable) wildcardClass56);
        boolean boolean58 = constableBloomFilter12.contains((java.lang.constant.Constable) wildcardClass56);
        constableBloomFilter2.insert((java.lang.constant.Constable) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = constableBloomFilter2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }
}

